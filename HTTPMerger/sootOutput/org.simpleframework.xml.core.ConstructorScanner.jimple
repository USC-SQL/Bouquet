class org.simpleframework.xml.core.ConstructorScanner extends java.lang.Object
{
    private org.simpleframework.xml.stream.Format format;
    private org.simpleframework.xml.core.Signature primary;
    private org.simpleframework.xml.core.ParameterMap registry;
    private java.util.List signatures;

    public void <init>(java.lang.Class, org.simpleframework.xml.stream.Format) throws java.lang.Exception
    {
        org.simpleframework.xml.core.ParameterMap $r0;
        java.util.ArrayList $r1;
        org.simpleframework.xml.stream.Format $r2;
        java.lang.Class $r3;
        org.simpleframework.xml.core.ConstructorScanner $r4;

        $r4 := @this: org.simpleframework.xml.core.ConstructorScanner;

        $r3 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.simpleframework.xml.stream.Format;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r4.<org.simpleframework.xml.core.ConstructorScanner: java.util.List signatures> = $r1;

        $r0 = new org.simpleframework.xml.core.ParameterMap;

        specialinvoke $r0.<org.simpleframework.xml.core.ParameterMap: void <init>()>();

        $r4.<org.simpleframework.xml.core.ConstructorScanner: org.simpleframework.xml.core.ParameterMap registry> = $r0;

        $r4.<org.simpleframework.xml.core.ConstructorScanner: org.simpleframework.xml.stream.Format format> = $r2;

        specialinvoke $r4.<org.simpleframework.xml.core.ConstructorScanner: void scan(java.lang.Class)>($r3);

        return;
    }

    private boolean isInstantiable(java.lang.Class)
    {
        boolean $z0, $z1;
        int $i0;
        java.lang.Class $r0;
        org.simpleframework.xml.core.ConstructorScanner $r1;

        $r1 := @this: org.simpleframework.xml.core.ConstructorScanner;

        $r0 := @parameter0: java.lang.Class;

        $i0 = virtualinvoke $r0.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke $r0.<java.lang.Class: boolean isMemberClass()>();

        if $z1 == 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    private void scan(java.lang.Class) throws java.lang.Exception
    {
        java.lang.Object[] $r0;
        org.simpleframework.xml.core.ConstructorException $r1;
        boolean $z0, $z1;
        java.lang.reflect.Constructor[] $r2;
        int $i0, $i1;
        java.lang.reflect.Constructor $r3;
        java.lang.Class $r4;
        org.simpleframework.xml.core.ConstructorScanner $r5;

        $r5 := @this: org.simpleframework.xml.core.ConstructorScanner;

        $r4 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>();

        $z0 = specialinvoke $r5.<org.simpleframework.xml.core.ConstructorScanner: boolean isInstantiable(java.lang.Class)>($r4);

        if $z0 != 0 goto label1;

        $r1 = new org.simpleframework.xml.core.ConstructorException;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = $r4;

        specialinvoke $r1.<org.simpleframework.xml.core.ConstructorException: void <init>(java.lang.String,java.lang.Object[])>("Can not construct inner %s", $r0);

        throw $r1;

     label1:
        $i1 = lengthof $r2;

        $i0 = 0;

     label2:
        if $i0 >= $i1 goto label4;

        $r3 = $r2[$i0];

        $z1 = virtualinvoke $r4.<java.lang.Class: boolean isPrimitive()>();

        if $z1 != 0 goto label3;

        specialinvoke $r5.<org.simpleframework.xml.core.ConstructorScanner: void scan(java.lang.reflect.Constructor)>($r3);

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return;
    }

    private void scan(java.lang.reflect.Constructor) throws java.lang.Exception
    {
        int $i0;
        org.simpleframework.xml.core.Signature $r0;
        java.lang.Object $r1;
        java.util.Iterator $r2;
        java.util.List $r3, $r9;
        boolean $z0, $z1;
        org.simpleframework.xml.stream.Format $r4;
        org.simpleframework.xml.core.ParameterMap $r5;
        org.simpleframework.xml.core.SignatureScanner $r6;
        java.lang.reflect.Constructor $r7;
        org.simpleframework.xml.core.ConstructorScanner $r8;

        $r8 := @this: org.simpleframework.xml.core.ConstructorScanner;

        $r7 := @parameter0: java.lang.reflect.Constructor;

        $r6 = new org.simpleframework.xml.core.SignatureScanner;

        $r5 = $r8.<org.simpleframework.xml.core.ConstructorScanner: org.simpleframework.xml.core.ParameterMap registry>;

        $r4 = $r8.<org.simpleframework.xml.core.ConstructorScanner: org.simpleframework.xml.stream.Format format>;

        specialinvoke $r6.<org.simpleframework.xml.core.SignatureScanner: void <init>(java.lang.reflect.Constructor,org.simpleframework.xml.core.ParameterMap,org.simpleframework.xml.stream.Format)>($r7, $r5, $r4);

        $z0 = virtualinvoke $r6.<org.simpleframework.xml.core.SignatureScanner: boolean isValid()>();

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke $r6.<org.simpleframework.xml.core.SignatureScanner: java.util.List getSignatures()>();

        $r2 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r1 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r0 = (org.simpleframework.xml.core.Signature) $r1;

        $i0 = virtualinvoke $r0.<org.simpleframework.xml.core.Signature: int size()>();

        if $i0 != 0 goto label2;

        $r8.<org.simpleframework.xml.core.ConstructorScanner: org.simpleframework.xml.core.Signature primary> = $r0;

     label2:
        $r9 = $r8.<org.simpleframework.xml.core.ConstructorScanner: java.util.List signatures>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r0);

        goto label1;

     label3:
        return;

     label4:
        return;
    }

    public org.simpleframework.xml.core.ParameterMap getParameters()
    {
        org.simpleframework.xml.core.ParameterMap r0;
        org.simpleframework.xml.core.ConstructorScanner $r1;

        $r1 := @this: org.simpleframework.xml.core.ConstructorScanner;

        r0 = $r1.<org.simpleframework.xml.core.ConstructorScanner: org.simpleframework.xml.core.ParameterMap registry>;

        return r0;
    }

    public org.simpleframework.xml.core.Signature getSignature()
    {
        org.simpleframework.xml.core.Signature r0;
        org.simpleframework.xml.core.ConstructorScanner $r1;

        $r1 := @this: org.simpleframework.xml.core.ConstructorScanner;

        r0 = $r1.<org.simpleframework.xml.core.ConstructorScanner: org.simpleframework.xml.core.Signature primary>;

        return r0;
    }

    public java.util.List getSignatures()
    {
        java.util.List $r0;
        java.util.ArrayList $r1;
        org.simpleframework.xml.core.ConstructorScanner $r2;

        $r2 := @this: org.simpleframework.xml.core.ConstructorScanner;

        $r1 = new java.util.ArrayList;

        $r0 = $r2.<org.simpleframework.xml.core.ConstructorScanner: java.util.List signatures>;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r0);

        return $r1;
    }
}
