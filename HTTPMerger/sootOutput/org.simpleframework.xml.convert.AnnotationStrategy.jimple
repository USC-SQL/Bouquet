public class org.simpleframework.xml.convert.AnnotationStrategy extends java.lang.Object implements org.simpleframework.xml.strategy.Strategy
{
    private final org.simpleframework.xml.convert.ConverterScanner scanner;
    private final org.simpleframework.xml.strategy.Strategy strategy;

    public void <init>()
    {
        org.simpleframework.xml.strategy.TreeStrategy $r0;
        org.simpleframework.xml.convert.AnnotationStrategy $r1;

        $r1 := @this: org.simpleframework.xml.convert.AnnotationStrategy;

        $r0 = new org.simpleframework.xml.strategy.TreeStrategy;

        specialinvoke $r0.<org.simpleframework.xml.strategy.TreeStrategy: void <init>()>();

        specialinvoke $r1.<org.simpleframework.xml.convert.AnnotationStrategy: void <init>(org.simpleframework.xml.strategy.Strategy)>($r0);

        return;
    }

    public void <init>(org.simpleframework.xml.strategy.Strategy)
    {
        org.simpleframework.xml.convert.ConverterScanner $r0;
        org.simpleframework.xml.strategy.Strategy $r1;
        org.simpleframework.xml.convert.AnnotationStrategy $r2;

        $r2 := @this: org.simpleframework.xml.convert.AnnotationStrategy;

        $r1 := @parameter0: org.simpleframework.xml.strategy.Strategy;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r0 = new org.simpleframework.xml.convert.ConverterScanner;

        specialinvoke $r0.<org.simpleframework.xml.convert.ConverterScanner: void <init>()>();

        $r2.<org.simpleframework.xml.convert.AnnotationStrategy: org.simpleframework.xml.convert.ConverterScanner scanner> = $r0;

        $r2.<org.simpleframework.xml.convert.AnnotationStrategy: org.simpleframework.xml.strategy.Strategy strategy> = $r1;

        return;
    }

    private boolean isReference(org.simpleframework.xml.strategy.Value)
    {
        boolean $z0;
        org.simpleframework.xml.strategy.Value $r0;
        org.simpleframework.xml.convert.AnnotationStrategy $r1;

        $r1 := @this: org.simpleframework.xml.convert.AnnotationStrategy;

        $r0 := @parameter0: org.simpleframework.xml.strategy.Value;

        if $r0 == null goto label1;

        $z0 = interfaceinvoke $r0.<org.simpleframework.xml.strategy.Value: boolean isReference()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type, org.simpleframework.xml.stream.NodeMap, org.simpleframework.xml.strategy.Value) throws java.lang.Exception
    {
        org.simpleframework.xml.convert.Reference $r0;
        java.lang.Object $r1;
        org.simpleframework.xml.stream.InputNode $r2;
        org.simpleframework.xml.stream.Node $r3;
        org.simpleframework.xml.convert.Converter $r4;
        org.simpleframework.xml.convert.ConverterScanner $r5;
        org.simpleframework.xml.strategy.Value $r6;
        org.simpleframework.xml.stream.NodeMap $r7;
        org.simpleframework.xml.strategy.Type $r8;
        org.simpleframework.xml.convert.AnnotationStrategy $r9;

        $r9 := @this: org.simpleframework.xml.convert.AnnotationStrategy;

        $r8 := @parameter0: org.simpleframework.xml.strategy.Type;

        $r7 := @parameter1: org.simpleframework.xml.stream.NodeMap;

        $r6 := @parameter2: org.simpleframework.xml.strategy.Value;

        $r5 = $r9.<org.simpleframework.xml.convert.AnnotationStrategy: org.simpleframework.xml.convert.ConverterScanner scanner>;

        $r4 = virtualinvoke $r5.<org.simpleframework.xml.convert.ConverterScanner: org.simpleframework.xml.convert.Converter getConverter(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.strategy.Value)>($r8, $r6);

        $r3 = interfaceinvoke $r7.<org.simpleframework.xml.stream.NodeMap: org.simpleframework.xml.stream.Node getNode()>();

        $r2 = (org.simpleframework.xml.stream.InputNode) $r3;

        if $r4 == null goto label2;

        $r1 = interfaceinvoke $r4.<org.simpleframework.xml.convert.Converter: java.lang.Object read(org.simpleframework.xml.stream.InputNode)>($r2);

        if $r6 == null goto label1;

        interfaceinvoke $r6.<org.simpleframework.xml.strategy.Value: void setValue(java.lang.Object)>($r1);

     label1:
        $r0 = new org.simpleframework.xml.convert.Reference;

        specialinvoke $r0.<org.simpleframework.xml.convert.Reference: void <init>(org.simpleframework.xml.strategy.Value,java.lang.Object)>($r6, $r1);

        return $r0;

     label2:
        return $r6;
    }

    private boolean write(org.simpleframework.xml.strategy.Type, java.lang.Object, org.simpleframework.xml.stream.NodeMap) throws java.lang.Exception
    {
        org.simpleframework.xml.stream.OutputNode $r0;
        org.simpleframework.xml.stream.Node $r1;
        org.simpleframework.xml.convert.Converter $r2;
        org.simpleframework.xml.convert.ConverterScanner $r3;
        org.simpleframework.xml.stream.NodeMap $r4;
        java.lang.Object $r5;
        org.simpleframework.xml.strategy.Type $r6;
        org.simpleframework.xml.convert.AnnotationStrategy $r7;

        $r7 := @this: org.simpleframework.xml.convert.AnnotationStrategy;

        $r6 := @parameter0: org.simpleframework.xml.strategy.Type;

        $r5 := @parameter1: java.lang.Object;

        $r4 := @parameter2: org.simpleframework.xml.stream.NodeMap;

        $r3 = $r7.<org.simpleframework.xml.convert.AnnotationStrategy: org.simpleframework.xml.convert.ConverterScanner scanner>;

        $r2 = virtualinvoke $r3.<org.simpleframework.xml.convert.ConverterScanner: org.simpleframework.xml.convert.Converter getConverter(org.simpleframework.xml.strategy.Type,java.lang.Object)>($r6, $r5);

        $r1 = interfaceinvoke $r4.<org.simpleframework.xml.stream.NodeMap: org.simpleframework.xml.stream.Node getNode()>();

        $r0 = (org.simpleframework.xml.stream.OutputNode) $r1;

        if $r2 == null goto label1;

        interfaceinvoke $r2.<org.simpleframework.xml.convert.Converter: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)>($r0, $r5);

        return 1;

     label1:
        return 0;
    }

    public org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type, org.simpleframework.xml.stream.NodeMap, java.util.Map) throws java.lang.Exception
    {
        boolean $z0;
        org.simpleframework.xml.strategy.Value $r0, $r6;
        org.simpleframework.xml.strategy.Strategy $r1;
        java.util.Map $r2;
        org.simpleframework.xml.stream.NodeMap $r3;
        org.simpleframework.xml.strategy.Type $r4;
        org.simpleframework.xml.convert.AnnotationStrategy $r5;

        $r5 := @this: org.simpleframework.xml.convert.AnnotationStrategy;

        $r4 := @parameter0: org.simpleframework.xml.strategy.Type;

        $r3 := @parameter1: org.simpleframework.xml.stream.NodeMap;

        $r2 := @parameter2: java.util.Map;

        $r1 = $r5.<org.simpleframework.xml.convert.AnnotationStrategy: org.simpleframework.xml.strategy.Strategy strategy>;

        $r0 = interfaceinvoke $r1.<org.simpleframework.xml.strategy.Strategy: org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap,java.util.Map)>($r4, $r3, $r2);

        $z0 = specialinvoke $r5.<org.simpleframework.xml.convert.AnnotationStrategy: boolean isReference(org.simpleframework.xml.strategy.Value)>($r0);

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r6 = specialinvoke $r5.<org.simpleframework.xml.convert.AnnotationStrategy: org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap,org.simpleframework.xml.strategy.Value)>($r4, $r3, $r0);

        return $r6;
    }

    public boolean write(org.simpleframework.xml.strategy.Type, java.lang.Object, org.simpleframework.xml.stream.NodeMap, java.util.Map) throws java.lang.Exception
    {
        boolean $z0, $z1;
        org.simpleframework.xml.strategy.Strategy $r0;
        java.util.Map $r1;
        org.simpleframework.xml.stream.NodeMap $r2;
        java.lang.Object $r3;
        org.simpleframework.xml.strategy.Type $r4;
        org.simpleframework.xml.convert.AnnotationStrategy $r5;

        $r5 := @this: org.simpleframework.xml.convert.AnnotationStrategy;

        $r4 := @parameter0: org.simpleframework.xml.strategy.Type;

        $r3 := @parameter1: java.lang.Object;

        $r2 := @parameter2: org.simpleframework.xml.stream.NodeMap;

        $r1 := @parameter3: java.util.Map;

        $r0 = $r5.<org.simpleframework.xml.convert.AnnotationStrategy: org.simpleframework.xml.strategy.Strategy strategy>;

        $z0 = interfaceinvoke $r0.<org.simpleframework.xml.strategy.Strategy: boolean write(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.NodeMap,java.util.Map)>($r4, $r3, $r2, $r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke $r5.<org.simpleframework.xml.convert.AnnotationStrategy: boolean write(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.NodeMap)>($r4, $r3, $r2);

        return $z1;

     label1:
        return $z0;
    }
}
