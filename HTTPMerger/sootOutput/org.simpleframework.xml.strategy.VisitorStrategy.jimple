public class org.simpleframework.xml.strategy.VisitorStrategy extends java.lang.Object implements org.simpleframework.xml.strategy.Strategy
{
    private final org.simpleframework.xml.strategy.Strategy strategy;
    private final org.simpleframework.xml.strategy.Visitor visitor;

    public void <init>(org.simpleframework.xml.strategy.Visitor)
    {
        org.simpleframework.xml.strategy.TreeStrategy $r0;
        org.simpleframework.xml.strategy.Visitor $r1;
        org.simpleframework.xml.strategy.VisitorStrategy $r2;

        $r2 := @this: org.simpleframework.xml.strategy.VisitorStrategy;

        $r1 := @parameter0: org.simpleframework.xml.strategy.Visitor;

        $r0 = new org.simpleframework.xml.strategy.TreeStrategy;

        specialinvoke $r0.<org.simpleframework.xml.strategy.TreeStrategy: void <init>()>();

        specialinvoke $r2.<org.simpleframework.xml.strategy.VisitorStrategy: void <init>(org.simpleframework.xml.strategy.Visitor,org.simpleframework.xml.strategy.Strategy)>($r1, $r0);

        return;
    }

    public void <init>(org.simpleframework.xml.strategy.Visitor, org.simpleframework.xml.strategy.Strategy)
    {
        org.simpleframework.xml.strategy.Strategy $r0;
        org.simpleframework.xml.strategy.Visitor $r1;
        org.simpleframework.xml.strategy.VisitorStrategy $r2;

        $r2 := @this: org.simpleframework.xml.strategy.VisitorStrategy;

        $r1 := @parameter0: org.simpleframework.xml.strategy.Visitor;

        $r0 := @parameter1: org.simpleframework.xml.strategy.Strategy;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r2.<org.simpleframework.xml.strategy.VisitorStrategy: org.simpleframework.xml.strategy.Strategy strategy> = $r0;

        $r2.<org.simpleframework.xml.strategy.VisitorStrategy: org.simpleframework.xml.strategy.Visitor visitor> = $r1;

        return;
    }

    public org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type, org.simpleframework.xml.stream.NodeMap, java.util.Map) throws java.lang.Exception
    {
        org.simpleframework.xml.strategy.Strategy $r0;
        org.simpleframework.xml.strategy.Value $r1;
        org.simpleframework.xml.strategy.Visitor $r2, $r7;
        java.util.Map $r3;
        org.simpleframework.xml.stream.NodeMap $r4;
        org.simpleframework.xml.strategy.Type $r5;
        org.simpleframework.xml.strategy.VisitorStrategy $r6;

        $r6 := @this: org.simpleframework.xml.strategy.VisitorStrategy;

        $r5 := @parameter0: org.simpleframework.xml.strategy.Type;

        $r4 := @parameter1: org.simpleframework.xml.stream.NodeMap;

        $r3 := @parameter2: java.util.Map;

        $r2 = $r6.<org.simpleframework.xml.strategy.VisitorStrategy: org.simpleframework.xml.strategy.Visitor visitor>;

        if $r2 == null goto label1;

        $r7 = $r6.<org.simpleframework.xml.strategy.VisitorStrategy: org.simpleframework.xml.strategy.Visitor visitor>;

        interfaceinvoke $r7.<org.simpleframework.xml.strategy.Visitor: void read(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap)>($r5, $r4);

     label1:
        $r0 = $r6.<org.simpleframework.xml.strategy.VisitorStrategy: org.simpleframework.xml.strategy.Strategy strategy>;

        $r1 = interfaceinvoke $r0.<org.simpleframework.xml.strategy.Strategy: org.simpleframework.xml.strategy.Value read(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap,java.util.Map)>($r5, $r4, $r3);

        return $r1;
    }

    public boolean write(org.simpleframework.xml.strategy.Type, java.lang.Object, org.simpleframework.xml.stream.NodeMap, java.util.Map) throws java.lang.Exception
    {
        org.simpleframework.xml.strategy.Visitor $r0, $r7;
        boolean $z0;
        org.simpleframework.xml.strategy.Strategy $r1;
        java.util.Map $r2;
        org.simpleframework.xml.stream.NodeMap $r3;
        java.lang.Object $r4;
        org.simpleframework.xml.strategy.Type $r5;
        org.simpleframework.xml.strategy.VisitorStrategy $r6;

        $r6 := @this: org.simpleframework.xml.strategy.VisitorStrategy;

        $r5 := @parameter0: org.simpleframework.xml.strategy.Type;

        $r4 := @parameter1: java.lang.Object;

        $r3 := @parameter2: org.simpleframework.xml.stream.NodeMap;

        $r2 := @parameter3: java.util.Map;

        $r1 = $r6.<org.simpleframework.xml.strategy.VisitorStrategy: org.simpleframework.xml.strategy.Strategy strategy>;

        $z0 = interfaceinvoke $r1.<org.simpleframework.xml.strategy.Strategy: boolean write(org.simpleframework.xml.strategy.Type,java.lang.Object,org.simpleframework.xml.stream.NodeMap,java.util.Map)>($r5, $r4, $r3, $r2);

        $r0 = $r6.<org.simpleframework.xml.strategy.VisitorStrategy: org.simpleframework.xml.strategy.Visitor visitor>;

        if $r0 == null goto label1;

        $r7 = $r6.<org.simpleframework.xml.strategy.VisitorStrategy: org.simpleframework.xml.strategy.Visitor visitor>;

        interfaceinvoke $r7.<org.simpleframework.xml.strategy.Visitor: void write(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.NodeMap)>($r5, $r3);

        return $z0;

     label1:
        return $z0;
    }
}
