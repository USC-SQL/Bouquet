public class org.json.simple.JSONObject extends java.util.HashMap implements java.util.Map, org.json.simple.JSONAware, org.json.simple.JSONStreamAware
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.json.simple.JSONObject $r0;

        $r0 := @this: org.json.simple.JSONObject;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        return;
    }

    public void <init>(java.util.Map)
    {
        java.util.Map $r0;
        org.json.simple.JSONObject $r1;

        $r1 := @this: org.json.simple.JSONObject;

        $r0 := @parameter0: java.util.Map;

        specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r0);

        return;
    }

    public static java.lang.String escape(java.lang.String)
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.json.simple.JSONValue: java.lang.String escape(java.lang.String)>($r0);

        return $r1;
    }

    private static java.lang.String toJSONString(java.lang.String, java.lang.Object, java.lang.StringBuffer)
    {
        java.lang.StringBuffer $r0, $r1;
        java.lang.Object $r2;
        java.lang.String $r3, $r4, $r5;

        $r3 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r0 := @parameter2: java.lang.StringBuffer;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        if $r3 != null goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null");

     label1:
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r4 = staticinvoke <org.json.simple.JSONValue: java.lang.String toJSONString(java.lang.Object)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;

     label2:
        staticinvoke <org.json.simple.JSONValue: void escape(java.lang.String,java.lang.StringBuffer)>($r3, $r0);

        goto label1;
    }

    public static java.lang.String toJSONString(java.util.Map)
    {
        java.lang.String $r0, $r9;
        java.util.Map$Entry $r1;
        java.lang.Object $r2, $r7, $r8;
        java.util.Iterator $r3;
        java.util.Set $r4;
        java.lang.StringBuffer $r5;
        boolean $z0, $z1;
        java.util.Map $r6;

        $r6 := @parameter0: java.util.Map;

        if $r6 != null goto label1;

        return "null";

     label1:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $z0 = 1;

        $r4 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        if $z0 == 0 goto label4;

        $z0 = 0;

     label3:
        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.util.Map$Entry) $r2;

        $r7 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $r8 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.json.simple.JSONObject: java.lang.String toJSONString(java.lang.String,java.lang.Object,java.lang.StringBuffer)>($r0, $r8, $r5);

        goto label2;

     label4:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        goto label3;

     label5:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $r9 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public static java.lang.String toString(java.lang.String, java.lang.Object)
    {
        java.lang.StringBuffer $r0;
        java.lang.Object $r1;
        java.lang.String $r2, $r3;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Object;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        staticinvoke <org.json.simple.JSONObject: java.lang.String toJSONString(java.lang.String,java.lang.Object,java.lang.StringBuffer)>($r2, $r1, $r0);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static void writeJSONString(java.util.Map, java.io.Writer) throws java.io.IOException
    {
        java.lang.String $r0, $r8;
        java.util.Map$Entry $r1;
        java.lang.Object $r2, $r7, $r9;
        java.util.Iterator $r3;
        java.util.Set $r4;
        boolean $z0, $z1;
        java.io.Writer $r5;
        java.util.Map $r6;

        $r6 := @parameter0: java.util.Map;

        $r5 := @parameter1: java.io.Writer;

        if $r6 != null goto label1;

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>("null");

        return;

     label1:
        $z0 = 1;

        $r4 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        virtualinvoke $r5.<java.io.Writer: void write(int)>(123);

     label2:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        if $z0 == 0 goto label4;

        $z0 = 0;

     label3:
        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (java.util.Map$Entry) $r2;

        virtualinvoke $r5.<java.io.Writer: void write(int)>(34);

        $r7 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $r8 = staticinvoke <org.json.simple.JSONObject: java.lang.String escape(java.lang.String)>($r0);

        virtualinvoke $r5.<java.io.Writer: void write(java.lang.String)>($r8);

        virtualinvoke $r5.<java.io.Writer: void write(int)>(34);

        virtualinvoke $r5.<java.io.Writer: void write(int)>(58);

        $r9 = interfaceinvoke $r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.json.simple.JSONValue: void writeJSONString(java.lang.Object,java.io.Writer)>($r9, $r5);

        goto label2;

     label4:
        virtualinvoke $r5.<java.io.Writer: void write(int)>(44);

        goto label3;

     label5:
        virtualinvoke $r5.<java.io.Writer: void write(int)>(125);

        return;
    }

    public java.lang.String toJSONString()
    {
        java.lang.String $r0;
        org.json.simple.JSONObject $r1;

        $r1 := @this: org.json.simple.JSONObject;

        $r0 = staticinvoke <org.json.simple.JSONObject: java.lang.String toJSONString(java.util.Map)>($r1);

        return $r0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r0;
        org.json.simple.JSONObject $r1;

        $r1 := @this: org.json.simple.JSONObject;

        $r0 = virtualinvoke $r1.<org.json.simple.JSONObject: java.lang.String toJSONString()>();

        return $r0;
    }

    public void writeJSONString(java.io.Writer) throws java.io.IOException
    {
        java.io.Writer $r0;
        org.json.simple.JSONObject $r1;

        $r1 := @this: org.json.simple.JSONObject;

        $r0 := @parameter0: java.io.Writer;

        staticinvoke <org.json.simple.JSONObject: void writeJSONString(java.util.Map,java.io.Writer)>($r1, $r0);

        return;
    }

    public static void <clinit>()
    {
        <org.json.simple.JSONObject: long serialVersionUID> = -503443796854799292L;

        <org.json.simple.JSONObject: long serialVersionUID> = -503443796854799292L;

        return;
    }
}
