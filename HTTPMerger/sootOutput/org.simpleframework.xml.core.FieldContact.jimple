class org.simpleframework.xml.core.FieldContact extends java.lang.Object implements org.simpleframework.xml.core.Contact
{
    private java.lang.reflect.Field field;
    private java.lang.annotation.Annotation label;
    private int modifier;
    private java.lang.String name;

    public void <init>(java.lang.reflect.Field, java.lang.annotation.Annotation)
    {
        int $i0;
        java.lang.annotation.Annotation $r0;
        java.lang.reflect.Field $r1;
        org.simpleframework.xml.core.FieldContact $r2;

        $r2 := @this: org.simpleframework.xml.core.FieldContact;

        $r1 := @parameter0: java.lang.reflect.Field;

        $r0 := @parameter1: java.lang.annotation.Annotation;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke $r1.<java.lang.reflect.Field: int getModifiers()>();

        $r2.<org.simpleframework.xml.core.FieldContact: int modifier> = $i0;

        $r2.<org.simpleframework.xml.core.FieldContact: java.lang.annotation.Annotation label> = $r0;

        $r2.<org.simpleframework.xml.core.FieldContact: java.lang.reflect.Field field> = $r1;

        return;
    }

    private java.lang.String getName(java.lang.reflect.Field)
    {
        java.lang.String $r0, $r3;
        java.lang.reflect.Field $r1;
        org.simpleframework.xml.core.FieldContact $r2;

        $r2 := @this: org.simpleframework.xml.core.FieldContact;

        $r1 := @parameter0: java.lang.reflect.Field;

        $r0 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.String getName()>();

        if $r0 == null goto label1;

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String intern()>();

        return $r3;

     label1:
        return $r0;
    }

    public java.lang.Object get(java.lang.Object) throws java.lang.Exception
    {
        java.lang.reflect.Field $r0;
        java.lang.Object $r1, $r3;
        org.simpleframework.xml.core.FieldContact $r2;

        $r2 := @this: org.simpleframework.xml.core.FieldContact;

        $r1 := @parameter0: java.lang.Object;

        $r0 = $r2.<org.simpleframework.xml.core.FieldContact: java.lang.reflect.Field field>;

        $r3 = virtualinvoke $r0.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

        return $r3;
    }

    public java.lang.annotation.Annotation getAnnotation()
    {
        java.lang.annotation.Annotation r0;
        org.simpleframework.xml.core.FieldContact $r1;

        $r1 := @this: org.simpleframework.xml.core.FieldContact;

        r0 = $r1.<org.simpleframework.xml.core.FieldContact: java.lang.annotation.Annotation label>;

        return r0;
    }

    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    {
        java.lang.reflect.Field $r0;
        java.lang.annotation.Annotation $r1, $r5, $r6;
        java.lang.Class $r2, $r3;
        org.simpleframework.xml.core.FieldContact $r4;

        $r4 := @this: org.simpleframework.xml.core.FieldContact;

        $r2 := @parameter0: java.lang.Class;

        $r1 = $r4.<org.simpleframework.xml.core.FieldContact: java.lang.annotation.Annotation label>;

        $r3 = interfaceinvoke $r1.<java.lang.annotation.Annotation: java.lang.Class annotationType()>();

        if $r2 != $r3 goto label1;

        $r5 = $r4.<org.simpleframework.xml.core.FieldContact: java.lang.annotation.Annotation label>;

        return $r5;

     label1:
        $r0 = $r4.<org.simpleframework.xml.core.FieldContact: java.lang.reflect.Field field>;

        $r6 = virtualinvoke $r0.<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>($r2);

        return $r6;
    }

    public java.lang.Class getDependent()
    {
        java.lang.Class $r0;
        java.lang.reflect.Field $r1;
        org.simpleframework.xml.core.FieldContact $r2;

        $r2 := @this: org.simpleframework.xml.core.FieldContact;

        $r1 = $r2.<org.simpleframework.xml.core.FieldContact: java.lang.reflect.Field field>;

        $r0 = staticinvoke <org.simpleframework.xml.core.Reflector: java.lang.Class getDependent(java.lang.reflect.Field)>($r1);

        return $r0;
    }

    public java.lang.Class[] getDependents()
    {
        java.lang.Class[] $r0;
        java.lang.reflect.Field $r1;
        org.simpleframework.xml.core.FieldContact $r2;

        $r2 := @this: org.simpleframework.xml.core.FieldContact;

        $r1 = $r2.<org.simpleframework.xml.core.FieldContact: java.lang.reflect.Field field>;

        $r0 = staticinvoke <org.simpleframework.xml.core.Reflector: java.lang.Class[] getDependents(java.lang.reflect.Field)>($r1);

        return $r0;
    }

    public java.lang.String getName()
    {
        java.lang.reflect.Field $r0;
        java.lang.String $r1, $r3, $r4;
        org.simpleframework.xml.core.FieldContact $r2;

        $r2 := @this: org.simpleframework.xml.core.FieldContact;

        $r1 = $r2.<org.simpleframework.xml.core.FieldContact: java.lang.String name>;

        if $r1 != null goto label1;

        $r0 = $r2.<org.simpleframework.xml.core.FieldContact: java.lang.reflect.Field field>;

        $r3 = specialinvoke $r2.<org.simpleframework.xml.core.FieldContact: java.lang.String getName(java.lang.reflect.Field)>($r0);

        $r2.<org.simpleframework.xml.core.FieldContact: java.lang.String name> = $r3;

     label1:
        $r4 = $r2.<org.simpleframework.xml.core.FieldContact: java.lang.String name>;

        return $r4;
    }

    public java.lang.Class getType()
    {
        java.lang.Class $r0;
        java.lang.reflect.Field $r1;
        org.simpleframework.xml.core.FieldContact $r2;

        $r2 := @this: org.simpleframework.xml.core.FieldContact;

        $r1 = $r2.<org.simpleframework.xml.core.FieldContact: java.lang.reflect.Field field>;

        $r0 = virtualinvoke $r1.<java.lang.reflect.Field: java.lang.Class getType()>();

        return $r0;
    }

    public boolean isFinal()
    {
        boolean $z0;
        int $i0;
        org.simpleframework.xml.core.FieldContact $r0;

        $r0 := @this: org.simpleframework.xml.core.FieldContact;

        $i0 = $r0.<org.simpleframework.xml.core.FieldContact: int modifier>;

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i0);

        return $z0;
    }

    public boolean isReadOnly()
    {
        boolean $z0, $z1;
        org.simpleframework.xml.core.FieldContact $r0;

        $r0 := @this: org.simpleframework.xml.core.FieldContact;

        $z0 = virtualinvoke $r0.<org.simpleframework.xml.core.FieldContact: boolean isStatic()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r0.<org.simpleframework.xml.core.FieldContact: boolean isFinal()>();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isStatic()
    {
        boolean $z0;
        int $i0;
        org.simpleframework.xml.core.FieldContact $r0;

        $r0 := @this: org.simpleframework.xml.core.FieldContact;

        $i0 = $r0.<org.simpleframework.xml.core.FieldContact: int modifier>;

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        return $z0;
    }

    public void set(java.lang.Object, java.lang.Object) throws java.lang.Exception
    {
        java.lang.reflect.Field $r0;
        boolean $z0;
        java.lang.Object $r1, $r2;
        org.simpleframework.xml.core.FieldContact $r3;

        $r3 := @this: org.simpleframework.xml.core.FieldContact;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke $r3.<org.simpleframework.xml.core.FieldContact: boolean isFinal()>();

        if $z0 != 0 goto label1;

        $r0 = $r3.<org.simpleframework.xml.core.FieldContact: java.lang.reflect.Field field>;

        virtualinvoke $r0.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;

     label1:
        return;
    }

    public java.lang.String toString()
    {
        java.lang.reflect.Field $r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r4, $r5;
        org.simpleframework.xml.core.FieldContact $r3;

        $r3 := @this: org.simpleframework.xml.core.FieldContact;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = virtualinvoke $r3.<org.simpleframework.xml.core.FieldContact: java.lang.String getName()>();

        $r1[0] = $r2;

        $r0 = $r3.<org.simpleframework.xml.core.FieldContact: java.lang.reflect.Field field>;

        $r4 = virtualinvoke $r0.<java.lang.reflect.Field: java.lang.String toString()>();

        $r1[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("field \'%s\' %s", $r1);

        return $r5;
    }
}
