class org.simpleframework.xml.core.ClassSchema extends java.lang.Object implements org.simpleframework.xml.core.Schema
{
    private final org.simpleframework.xml.core.Caller caller;
    private final org.simpleframework.xml.core.Decorator decorator;
    private final org.simpleframework.xml.core.Instantiator factory;
    private final boolean primitive;
    private final org.simpleframework.xml.Version revision;
    private final org.simpleframework.xml.core.Section section;
    private final org.simpleframework.xml.core.Label text;
    private final java.lang.Class type;
    private final org.simpleframework.xml.core.Label version;

    public void <init>(org.simpleframework.xml.core.Scanner, org.simpleframework.xml.core.Context) throws java.lang.Exception
    {
        java.lang.Class $r0;
        org.simpleframework.xml.core.Section $r1;
        org.simpleframework.xml.core.Label $r2, $r10;
        boolean $z0;
        org.simpleframework.xml.core.Decorator $r3;
        org.simpleframework.xml.Version $r4;
        org.simpleframework.xml.core.Instantiator $r5;
        org.simpleframework.xml.core.Caller $r6;
        org.simpleframework.xml.core.Context $r7;
        org.simpleframework.xml.core.Scanner $r8;
        org.simpleframework.xml.core.ClassSchema $r9;

        $r9 := @this: org.simpleframework.xml.core.ClassSchema;

        $r8 := @parameter0: org.simpleframework.xml.core.Scanner;

        $r7 := @parameter1: org.simpleframework.xml.core.Context;

        specialinvoke $r9.<java.lang.Object: void <init>()>();

        $r6 = virtualinvoke $r8.<org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Caller getCaller(org.simpleframework.xml.core.Context)>($r7);

        $r9.<org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Caller caller> = $r6;

        $r5 = virtualinvoke $r8.<org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Instantiator getInstantiator()>();

        $r9.<org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Instantiator factory> = $r5;

        $r4 = virtualinvoke $r8.<org.simpleframework.xml.core.Scanner: org.simpleframework.xml.Version getRevision()>();

        $r9.<org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.Version revision> = $r4;

        $r3 = virtualinvoke $r8.<org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Decorator getDecorator()>();

        $r9.<org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Decorator decorator> = $r3;

        $z0 = virtualinvoke $r8.<org.simpleframework.xml.core.Scanner: boolean isPrimitive()>();

        $r9.<org.simpleframework.xml.core.ClassSchema: boolean primitive> = $z0;

        $r2 = virtualinvoke $r8.<org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Label getVersion()>();

        $r9.<org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Label version> = $r2;

        $r1 = virtualinvoke $r8.<org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Section getSection()>();

        $r9.<org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Section section> = $r1;

        $r10 = virtualinvoke $r8.<org.simpleframework.xml.core.Scanner: org.simpleframework.xml.core.Label getText()>();

        $r9.<org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Label text> = $r10;

        $r0 = virtualinvoke $r8.<org.simpleframework.xml.core.Scanner: java.lang.Class getType()>();

        $r9.<org.simpleframework.xml.core.ClassSchema: java.lang.Class type> = $r0;

        return;
    }

    public org.simpleframework.xml.core.Caller getCaller()
    {
        org.simpleframework.xml.core.Caller r0;
        org.simpleframework.xml.core.ClassSchema $r1;

        $r1 := @this: org.simpleframework.xml.core.ClassSchema;

        r0 = $r1.<org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Caller caller>;

        return r0;
    }

    public org.simpleframework.xml.core.Decorator getDecorator()
    {
        org.simpleframework.xml.core.Decorator r0;
        org.simpleframework.xml.core.ClassSchema $r1;

        $r1 := @this: org.simpleframework.xml.core.ClassSchema;

        r0 = $r1.<org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Decorator decorator>;

        return r0;
    }

    public org.simpleframework.xml.core.Instantiator getInstantiator()
    {
        org.simpleframework.xml.core.Instantiator r0;
        org.simpleframework.xml.core.ClassSchema $r1;

        $r1 := @this: org.simpleframework.xml.core.ClassSchema;

        r0 = $r1.<org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Instantiator factory>;

        return r0;
    }

    public org.simpleframework.xml.Version getRevision()
    {
        org.simpleframework.xml.Version r0;
        org.simpleframework.xml.core.ClassSchema $r1;

        $r1 := @this: org.simpleframework.xml.core.ClassSchema;

        r0 = $r1.<org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.Version revision>;

        return r0;
    }

    public org.simpleframework.xml.core.Section getSection()
    {
        org.simpleframework.xml.core.Section r0;
        org.simpleframework.xml.core.ClassSchema $r1;

        $r1 := @this: org.simpleframework.xml.core.ClassSchema;

        r0 = $r1.<org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Section section>;

        return r0;
    }

    public org.simpleframework.xml.core.Label getText()
    {
        org.simpleframework.xml.core.Label r0;
        org.simpleframework.xml.core.ClassSchema $r1;

        $r1 := @this: org.simpleframework.xml.core.ClassSchema;

        r0 = $r1.<org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Label text>;

        return r0;
    }

    public org.simpleframework.xml.core.Label getVersion()
    {
        org.simpleframework.xml.core.Label r0;
        org.simpleframework.xml.core.ClassSchema $r1;

        $r1 := @this: org.simpleframework.xml.core.ClassSchema;

        r0 = $r1.<org.simpleframework.xml.core.ClassSchema: org.simpleframework.xml.core.Label version>;

        return r0;
    }

    public boolean isPrimitive()
    {
        boolean z0;
        org.simpleframework.xml.core.ClassSchema $r0;

        $r0 := @this: org.simpleframework.xml.core.ClassSchema;

        z0 = $r0.<org.simpleframework.xml.core.ClassSchema: boolean primitive>;

        return z0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        java.lang.String $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.core.ClassSchema $r3;

        $r3 := @this: org.simpleframework.xml.core.ClassSchema;

        $r0 = newarray (java.lang.Object)[1];

        $r2 = $r3.<org.simpleframework.xml.core.ClassSchema: java.lang.Class type>;

        $r0[0] = $r2;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("schema for %s", $r0);

        return $r1;
    }
}
