class org.simpleframework.xml.stream.NodeExtractor extends java.util.LinkedList
{

    public void <init>(org.w3c.dom.Document)
    {
        org.w3c.dom.Document $r0;
        org.simpleframework.xml.stream.NodeExtractor $r1;

        $r1 := @this: org.simpleframework.xml.stream.NodeExtractor;

        $r0 := @parameter0: org.w3c.dom.Document;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        specialinvoke $r1.<org.simpleframework.xml.stream.NodeExtractor: void extract(org.w3c.dom.Document)>($r0);

        return;
    }

    private void extract(org.w3c.dom.Document)
    {
        org.w3c.dom.Element $r0;
        org.w3c.dom.Document $r1;
        org.simpleframework.xml.stream.NodeExtractor $r2;

        $r2 := @this: org.simpleframework.xml.stream.NodeExtractor;

        $r1 := @parameter0: org.w3c.dom.Document;

        $r0 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        if $r0 == null goto label1;

        virtualinvoke $r2.<org.simpleframework.xml.stream.NodeExtractor: boolean offer(java.lang.Object)>($r0);

        specialinvoke $r2.<org.simpleframework.xml.stream.NodeExtractor: void extract(org.w3c.dom.Node)>($r0);

        return;

     label1:
        return;
    }

    private void extract(org.w3c.dom.Node)
    {
        short $s0;
        org.w3c.dom.NodeList $r0;
        int $i1, $i2;
        org.w3c.dom.Node $r1, $r3;
        org.simpleframework.xml.stream.NodeExtractor $r2;

        $r2 := @this: org.simpleframework.xml.stream.NodeExtractor;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r0 = interfaceinvoke $r1.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        $i2 = interfaceinvoke $r0.<org.w3c.dom.NodeList: int getLength()>();

        $i1 = 0;

     label1:
        if $i1 >= $i2 goto label3;

        $r3 = interfaceinvoke $r0.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i1);

        $s0 = interfaceinvoke $r3.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 == 8 goto label2;

        virtualinvoke $r2.<org.simpleframework.xml.stream.NodeExtractor: boolean offer(java.lang.Object)>($r3);

        specialinvoke $r2.<org.simpleframework.xml.stream.NodeExtractor: void extract(org.w3c.dom.Node)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }
}
