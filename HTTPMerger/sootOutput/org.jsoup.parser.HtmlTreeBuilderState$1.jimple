final enum class org.jsoup.parser.HtmlTreeBuilderState$1 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r0;
        org.jsoup.parser.HtmlTreeBuilderState$1 $r1;

        $r1 := @this: org.jsoup.parser.HtmlTreeBuilderState$1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r1.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>($r0, $i0, null);

        return;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState $r0, $r14;
        org.jsoup.nodes.Document$QuirksMode $r1;
        org.jsoup.nodes.Document $r2, $r13;
        java.lang.String $r3, $r4, $r5, $r6;
        org.jsoup.parser.Token$Doctype $r7;
        org.jsoup.parser.Token$Comment $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jsoup.nodes.DocumentType $r9;
        org.jsoup.parser.HtmlTreeBuilder $r10;
        org.jsoup.parser.Token $r11;
        org.jsoup.parser.HtmlTreeBuilderState$1 $r12;

        $r12 := @this: org.jsoup.parser.HtmlTreeBuilderState$1;

        $r11 := @parameter0: org.jsoup.parser.Token;

        $r10 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $z0 = staticinvoke <org.jsoup.parser.HtmlTreeBuilderState: boolean access$100(org.jsoup.parser.Token)>($r11);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke $r11.<org.jsoup.parser.Token: boolean isComment()>();

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke $r11.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();

        virtualinvoke $r10.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r8);

        return 1;

     label2:
        $z2 = virtualinvoke $r11.<org.jsoup.parser.Token: boolean isDoctype()>();

        if $z2 == 0 goto label4;

        $r7 = virtualinvoke $r11.<org.jsoup.parser.Token: org.jsoup.parser.Token$Doctype asDoctype()>();

        $r9 = new org.jsoup.nodes.DocumentType;

        $r3 = virtualinvoke $r7.<org.jsoup.parser.Token$Doctype: java.lang.String getName()>();

        $r4 = virtualinvoke $r7.<org.jsoup.parser.Token$Doctype: java.lang.String getPublicIdentifier()>();

        $r5 = virtualinvoke $r7.<org.jsoup.parser.Token$Doctype: java.lang.String getSystemIdentifier()>();

        $r6 = virtualinvoke $r10.<org.jsoup.parser.HtmlTreeBuilder: java.lang.String getBaseUri()>();

        specialinvoke $r9.<org.jsoup.nodes.DocumentType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r4, $r5, $r6);

        $r2 = virtualinvoke $r10.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Document getDocument()>();

        virtualinvoke $r2.<org.jsoup.nodes.Document: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>($r9);

        $z3 = virtualinvoke $r7.<org.jsoup.parser.Token$Doctype: boolean isForceQuirks()>();

        if $z3 == 0 goto label3;

        $r13 = virtualinvoke $r10.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Document getDocument()>();

        $r1 = <org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode quirks>;

        virtualinvoke $r13.<org.jsoup.nodes.Document: org.jsoup.nodes.Document quirksMode(org.jsoup.nodes.Document$QuirksMode)>($r1);

     label3:
        $r0 = <org.jsoup.parser.HtmlTreeBuilderState$1: org.jsoup.parser.HtmlTreeBuilderState BeforeHtml>;

        virtualinvoke $r10.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r0);

        return 1;

     label4:
        $r14 = <org.jsoup.parser.HtmlTreeBuilderState$1: org.jsoup.parser.HtmlTreeBuilderState BeforeHtml>;

        virtualinvoke $r10.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r14);

        $z4 = virtualinvoke $r10.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r11);

        return $z4;
    }
}
