public class org.json.simple.JSONArray extends java.util.ArrayList implements java.util.List, org.json.simple.JSONAware, org.json.simple.JSONStreamAware
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.json.simple.JSONArray $r0;

        $r0 := @this: org.json.simple.JSONArray;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        return;
    }

    public static java.lang.String toJSONString(java.util.List)
    {
        java.lang.String $r0, $r5;
        java.lang.Object $r1;
        java.util.Iterator $r2;
        java.lang.StringBuffer $r3;
        boolean $z0, $z1;
        java.util.List $r4;

        $r4 := @parameter0: java.util.List;

        if $r4 != null goto label1;

        return "null";

     label1:
        $z0 = 1;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        if $z0 == 0 goto label4;

        $z0 = 0;

     label3:
        $r1 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        if $r1 != null goto label5;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null");

        goto label2;

     label4:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        goto label3;

     label5:
        $r0 = staticinvoke <org.json.simple.JSONValue: java.lang.String toJSONString(java.lang.Object)>($r1);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        goto label2;

     label6:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static void writeJSONString(java.util.List, java.io.Writer) throws java.io.IOException
    {
        java.lang.Object $r0;
        java.util.Iterator $r1;
        boolean $z0, $z1;
        java.io.Writer $r2;
        java.util.List $r3;

        $r3 := @parameter0: java.util.List;

        $r2 := @parameter1: java.io.Writer;

        if $r3 != null goto label1;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("null");

        return;

     label1:
        $z0 = 1;

        $r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        virtualinvoke $r2.<java.io.Writer: void write(int)>(91);

     label2:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        if $z0 == 0 goto label4;

        $z0 = 0;

     label3:
        $r0 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        if $r0 != null goto label5;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("null");

        goto label2;

     label4:
        virtualinvoke $r2.<java.io.Writer: void write(int)>(44);

        goto label3;

     label5:
        staticinvoke <org.json.simple.JSONValue: void writeJSONString(java.lang.Object,java.io.Writer)>($r0, $r2);

        goto label2;

     label6:
        virtualinvoke $r2.<java.io.Writer: void write(int)>(93);

        return;
    }

    public java.lang.String toJSONString()
    {
        java.lang.String $r0;
        org.json.simple.JSONArray $r1;

        $r1 := @this: org.json.simple.JSONArray;

        $r0 = staticinvoke <org.json.simple.JSONArray: java.lang.String toJSONString(java.util.List)>($r1);

        return $r0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r0;
        org.json.simple.JSONArray $r1;

        $r1 := @this: org.json.simple.JSONArray;

        $r0 = virtualinvoke $r1.<org.json.simple.JSONArray: java.lang.String toJSONString()>();

        return $r0;
    }

    public void writeJSONString(java.io.Writer) throws java.io.IOException
    {
        java.io.Writer $r0;
        org.json.simple.JSONArray $r1;

        $r1 := @this: org.json.simple.JSONArray;

        $r0 := @parameter0: java.io.Writer;

        staticinvoke <org.json.simple.JSONArray: void writeJSONString(java.util.List,java.io.Writer)>($r1, $r0);

        return;
    }

    public static void <clinit>()
    {
        <org.json.simple.JSONArray: long serialVersionUID> = 3957988303675231981L;

        <org.json.simple.JSONArray: long serialVersionUID> = 3957988303675231981L;

        return;
    }
}
