class org.simpleframework.xml.core.SignatureScanner extends java.lang.Object
{
    private final org.simpleframework.xml.core.SignatureBuilder builder;
    private final java.lang.reflect.Constructor factory;
    private final org.simpleframework.xml.stream.Format format;
    private final org.simpleframework.xml.core.ParameterMap registry;
    private final java.lang.Class type;

    public void <init>(java.lang.reflect.Constructor, org.simpleframework.xml.core.ParameterMap, org.simpleframework.xml.stream.Format) throws java.lang.Exception
    {
        java.lang.Class $r0, $r6;
        org.simpleframework.xml.core.SignatureBuilder $r1;
        org.simpleframework.xml.stream.Format $r2;
        org.simpleframework.xml.core.ParameterMap $r3;
        java.lang.reflect.Constructor $r4;
        org.simpleframework.xml.core.SignatureScanner $r5;

        $r5 := @this: org.simpleframework.xml.core.SignatureScanner;

        $r4 := @parameter0: java.lang.reflect.Constructor;

        $r3 := @parameter1: org.simpleframework.xml.core.ParameterMap;

        $r2 := @parameter2: org.simpleframework.xml.stream.Format;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        $r1 = new org.simpleframework.xml.core.SignatureBuilder;

        specialinvoke $r1.<org.simpleframework.xml.core.SignatureBuilder: void <init>(java.lang.reflect.Constructor)>($r4);

        $r5.<org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.core.SignatureBuilder builder> = $r1;

        $r0 = virtualinvoke $r4.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        $r5.<org.simpleframework.xml.core.SignatureScanner: java.lang.Class type> = $r0;

        $r5.<org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.core.ParameterMap registry> = $r3;

        $r5.<org.simpleframework.xml.core.SignatureScanner: java.lang.reflect.Constructor factory> = $r4;

        $r5.<org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.stream.Format format> = $r2;

        $r6 = $r5.<org.simpleframework.xml.core.SignatureScanner: java.lang.Class type>;

        specialinvoke $r5.<org.simpleframework.xml.core.SignatureScanner: void scan(java.lang.Class)>($r6);

        return;
    }

    private java.util.List create(java.lang.annotation.Annotation, int) throws java.lang.Exception
    {
        java.util.List $r0;
        org.simpleframework.xml.core.Parameter $r1;
        org.simpleframework.xml.stream.Format $r2;
        java.lang.reflect.Constructor $r3;
        int $i0;
        java.lang.annotation.Annotation $r4;
        org.simpleframework.xml.core.SignatureScanner $r5;

        $r5 := @this: org.simpleframework.xml.core.SignatureScanner;

        $r4 := @parameter0: java.lang.annotation.Annotation;

        $i0 := @parameter1: int;

        $r3 = $r5.<org.simpleframework.xml.core.SignatureScanner: java.lang.reflect.Constructor factory>;

        $r2 = $r5.<org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.stream.Format format>;

        $r1 = staticinvoke <org.simpleframework.xml.core.ParameterFactory: org.simpleframework.xml.core.Parameter getInstance(java.lang.reflect.Constructor,java.lang.annotation.Annotation,org.simpleframework.xml.stream.Format,int)>($r3, $r4, $r2, $i0);

        if $r1 == null goto label1;

        specialinvoke $r5.<org.simpleframework.xml.core.SignatureScanner: void register(org.simpleframework.xml.core.Parameter)>($r1);

     label1:
        $r0 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        return $r0;
    }

    private java.lang.annotation.Annotation[] extract(java.lang.annotation.Annotation) throws java.lang.Exception
    {
        java.lang.annotation.Annotation[] $r0, $r11;
        java.lang.Object $r1;
        java.lang.Object[] $r2, $r10;
        org.simpleframework.xml.core.UnionException $r3;
        java.lang.reflect.Method[] $r4;
        java.lang.Class $r5, $r9;
        int $i0;
        java.lang.reflect.Method $r6;
        java.lang.annotation.Annotation $r7;
        org.simpleframework.xml.core.SignatureScanner $r8;

        $r8 := @this: org.simpleframework.xml.core.SignatureScanner;

        $r7 := @parameter0: java.lang.annotation.Annotation;

        $r5 = interfaceinvoke $r7.<java.lang.annotation.Annotation: java.lang.Class annotationType()>();

        $r4 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        $i0 = lengthof $r4;

        if $i0 == 1 goto label1;

        $r3 = new org.simpleframework.xml.core.UnionException;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = $r7;

        $r9 = $r8.<org.simpleframework.xml.core.SignatureScanner: java.lang.Class type>;

        $r2[1] = $r9;

        specialinvoke $r3.<org.simpleframework.xml.core.UnionException: void <init>(java.lang.String,java.lang.Object[])>("Annotation \'%s\' is not a valid union for %s", $r2);

        throw $r3;

     label1:
        $r6 = $r4[0];

        $r10 = newarray (java.lang.Object)[0];

        $r1 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r7, $r10);

        $r0 = (java.lang.annotation.Annotation[]) $r1;

        $r11 = (java.lang.annotation.Annotation[]) $r0;

        return $r11;
    }

    private java.util.List process(java.lang.annotation.Annotation, int) throws java.lang.Exception
    {
        java.util.List $r0, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        int $i0;
        java.lang.annotation.Annotation $r1;
        org.simpleframework.xml.core.SignatureScanner $r2;

        $r2 := @this: org.simpleframework.xml.core.SignatureScanner;

        $r1 := @parameter0: java.lang.annotation.Annotation;

        $i0 := @parameter1: int;

        $z0 = $r1 instanceof org.simpleframework.xml.Attribute;

        if $z0 == 0 goto label1;

        $r0 = specialinvoke $r2.<org.simpleframework.xml.core.SignatureScanner: java.util.List create(java.lang.annotation.Annotation,int)>($r1, $i0);

        return $r0;

     label1:
        $z1 = $r1 instanceof org.simpleframework.xml.Element;

        if $z1 == 0 goto label2;

        $r3 = specialinvoke $r2.<org.simpleframework.xml.core.SignatureScanner: java.util.List create(java.lang.annotation.Annotation,int)>($r1, $i0);

        return $r3;

     label2:
        $z2 = $r1 instanceof org.simpleframework.xml.ElementList;

        if $z2 == 0 goto label3;

        $r4 = specialinvoke $r2.<org.simpleframework.xml.core.SignatureScanner: java.util.List create(java.lang.annotation.Annotation,int)>($r1, $i0);

        return $r4;

     label3:
        $z3 = $r1 instanceof org.simpleframework.xml.ElementArray;

        if $z3 == 0 goto label4;

        $r5 = specialinvoke $r2.<org.simpleframework.xml.core.SignatureScanner: java.util.List create(java.lang.annotation.Annotation,int)>($r1, $i0);

        return $r5;

     label4:
        $z4 = $r1 instanceof org.simpleframework.xml.ElementMap;

        if $z4 == 0 goto label5;

        $r6 = specialinvoke $r2.<org.simpleframework.xml.core.SignatureScanner: java.util.List create(java.lang.annotation.Annotation,int)>($r1, $i0);

        return $r6;

     label5:
        $z5 = $r1 instanceof org.simpleframework.xml.ElementListUnion;

        if $z5 == 0 goto label6;

        $r7 = specialinvoke $r2.<org.simpleframework.xml.core.SignatureScanner: java.util.List union(java.lang.annotation.Annotation,int)>($r1, $i0);

        return $r7;

     label6:
        $z6 = $r1 instanceof org.simpleframework.xml.ElementMapUnion;

        if $z6 == 0 goto label7;

        $r8 = specialinvoke $r2.<org.simpleframework.xml.core.SignatureScanner: java.util.List union(java.lang.annotation.Annotation,int)>($r1, $i0);

        return $r8;

     label7:
        $z7 = $r1 instanceof org.simpleframework.xml.ElementUnion;

        if $z7 == 0 goto label8;

        $r9 = specialinvoke $r2.<org.simpleframework.xml.core.SignatureScanner: java.util.List union(java.lang.annotation.Annotation,int)>($r1, $i0);

        return $r9;

     label8:
        $z8 = $r1 instanceof org.simpleframework.xml.Text;

        if $z8 == 0 goto label9;

        $r10 = specialinvoke $r2.<org.simpleframework.xml.core.SignatureScanner: java.util.List create(java.lang.annotation.Annotation,int)>($r1, $i0);

        return $r10;

     label9:
        $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r11;
    }

    private void register(org.simpleframework.xml.core.Parameter) throws java.lang.Exception
    {
        boolean $z0, $z1;
        java.lang.Object $r0;
        java.lang.String $r1;
        org.simpleframework.xml.core.ParameterMap $r2, $r5, $r6, $r7;
        org.simpleframework.xml.core.Parameter $r3;
        org.simpleframework.xml.core.SignatureScanner $r4;

        $r4 := @this: org.simpleframework.xml.core.SignatureScanner;

        $r3 := @parameter0: org.simpleframework.xml.core.Parameter;

        $r1 = interfaceinvoke $r3.<org.simpleframework.xml.core.Parameter: java.lang.String getPath()>();

        $r0 = interfaceinvoke $r3.<org.simpleframework.xml.core.Parameter: java.lang.Object getKey()>();

        $r2 = $r4.<org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.core.ParameterMap registry>;

        $z0 = virtualinvoke $r2.<org.simpleframework.xml.core.ParameterMap: boolean containsKey(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        specialinvoke $r4.<org.simpleframework.xml.core.SignatureScanner: void validate(org.simpleframework.xml.core.Parameter,java.lang.Object)>($r3, $r0);

     label1:
        $r5 = $r4.<org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.core.ParameterMap registry>;

        $z1 = virtualinvoke $r5.<org.simpleframework.xml.core.ParameterMap: boolean containsKey(java.lang.Object)>($r1);

        if $z1 == 0 goto label2;

        specialinvoke $r4.<org.simpleframework.xml.core.SignatureScanner: void validate(org.simpleframework.xml.core.Parameter,java.lang.Object)>($r3, $r1);

     label2:
        $r6 = $r4.<org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.core.ParameterMap registry>;

        virtualinvoke $r6.<org.simpleframework.xml.core.ParameterMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

        $r7 = $r4.<org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.core.ParameterMap registry>;

        virtualinvoke $r7.<org.simpleframework.xml.core.ParameterMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r3);

        return;
    }

    private void scan(java.lang.Class) throws java.lang.Exception
    {
        java.lang.Class[] $r0;
        java.lang.reflect.Constructor $r1;
        int $i0, $i1;
        java.lang.Class $r2, $r4;
        org.simpleframework.xml.core.SignatureScanner $r3;

        $r3 := @this: org.simpleframework.xml.core.SignatureScanner;

        $r2 := @parameter0: java.lang.Class;

        $r1 = $r3.<org.simpleframework.xml.core.SignatureScanner: java.lang.reflect.Constructor factory>;

        $r0 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label2;

        $r4 = $r0[$i0];

        specialinvoke $r3.<org.simpleframework.xml.core.SignatureScanner: void scan(java.lang.Class,int)>($r4, $i0);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    private void scan(java.lang.Class, int) throws java.lang.Exception
    {
        org.simpleframework.xml.core.SignatureBuilder $r0;
        org.simpleframework.xml.core.Parameter $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.util.Iterator $r3;
        java.util.List $r4;
        java.lang.annotation.Annotation $r5;
        java.lang.annotation.Annotation[] $r6, $r11;
        java.lang.annotation.Annotation[][] $r7;
        java.lang.reflect.Constructor $r8;
        int $i0, $i1, $i2;
        java.lang.Class $r9;
        org.simpleframework.xml.core.SignatureScanner $r10;

        $r10 := @this: org.simpleframework.xml.core.SignatureScanner;

        $r9 := @parameter0: java.lang.Class;

        $i0 := @parameter1: int;

        $r8 = $r10.<org.simpleframework.xml.core.SignatureScanner: java.lang.reflect.Constructor factory>;

        $r7 = virtualinvoke $r8.<java.lang.reflect.Constructor: java.lang.annotation.Annotation[][] getParameterAnnotations()>();

        $i1 = 0;

     label1:
        $r6 = $r7[$i0];

        $i2 = lengthof $r6;

        if $i1 >= $i2 goto label4;

        $r11 = $r7[$i0];

        $r5 = $r11[$i1];

        $r4 = specialinvoke $r10.<org.simpleframework.xml.core.SignatureScanner: java.util.List process(java.lang.annotation.Annotation,int)>($r5, $i0);

        $r3 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (org.simpleframework.xml.core.Parameter) $r2;

        $r0 = $r10.<org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.core.SignatureBuilder builder>;

        virtualinvoke $r0.<org.simpleframework.xml.core.SignatureBuilder: void insert(org.simpleframework.xml.core.Parameter,int)>($r1, $i0);

        goto label2;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return;
    }

    private java.util.List union(java.lang.annotation.Annotation, int) throws java.lang.Exception
    {
        java.util.List $r0;
        java.lang.Object[] $r1;
        org.simpleframework.xml.core.UnionException $r2;
        boolean $z0;
        java.lang.String $r3;
        org.simpleframework.xml.core.Parameter $r4;
        java.lang.annotation.Annotation[] $r5;
        java.lang.Class $r6;
        org.simpleframework.xml.stream.Format $r7;
        java.lang.reflect.Constructor $r8, $r13;
        org.simpleframework.xml.core.Signature $r9;
        int $i0, $i1, $i2;
        java.lang.annotation.Annotation $r10, $r11;
        org.simpleframework.xml.core.SignatureScanner $r12;

        $r12 := @this: org.simpleframework.xml.core.SignatureScanner;

        $r10 := @parameter0: java.lang.annotation.Annotation;

        $i0 := @parameter1: int;

        $r9 = new org.simpleframework.xml.core.Signature;

        $r8 = $r12.<org.simpleframework.xml.core.SignatureScanner: java.lang.reflect.Constructor factory>;

        specialinvoke $r9.<org.simpleframework.xml.core.Signature: void <init>(java.lang.reflect.Constructor)>($r8);

        $r5 = specialinvoke $r12.<org.simpleframework.xml.core.SignatureScanner: java.lang.annotation.Annotation[] extract(java.lang.annotation.Annotation)>($r10);

        $i2 = lengthof $r5;

        $i1 = 0;

     label1:
        if $i1 >= $i2 goto label3;

        $r11 = $r5[$i1];

        $r13 = $r12.<org.simpleframework.xml.core.SignatureScanner: java.lang.reflect.Constructor factory>;

        $r7 = $r12.<org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.stream.Format format>;

        $r4 = staticinvoke <org.simpleframework.xml.core.ParameterFactory: org.simpleframework.xml.core.Parameter getInstance(java.lang.reflect.Constructor,java.lang.annotation.Annotation,java.lang.annotation.Annotation,org.simpleframework.xml.stream.Format,int)>($r13, $r10, $r11, $r7, $i0);

        $r3 = interfaceinvoke $r4.<org.simpleframework.xml.core.Parameter: java.lang.String getPath()>();

        $z0 = virtualinvoke $r9.<org.simpleframework.xml.core.Signature: boolean contains(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r2 = new org.simpleframework.xml.core.UnionException;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = $r3;

        $r1[1] = $r10;

        $r6 = $r12.<org.simpleframework.xml.core.SignatureScanner: java.lang.Class type>;

        $r1[2] = $r6;

        specialinvoke $r2.<org.simpleframework.xml.core.UnionException: void <init>(java.lang.String,java.lang.Object[])>("Annotation name \'%s\' used more than once in %s for %s", $r1);

        throw $r2;

     label2:
        virtualinvoke $r9.<org.simpleframework.xml.core.Signature: void set(java.lang.Object,org.simpleframework.xml.core.Parameter)>($r3, $r4);

        specialinvoke $r12.<org.simpleframework.xml.core.SignatureScanner: void register(org.simpleframework.xml.core.Parameter)>($r4);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r0 = virtualinvoke $r9.<org.simpleframework.xml.core.Signature: java.util.List getAll()>();

        return $r0;
    }

    private void validate(org.simpleframework.xml.core.Parameter, java.lang.Object) throws java.lang.Exception
    {
        java.lang.Class $r0, $r1, $r13, $r16;
        java.lang.Object[] $r2, $r15;
        org.simpleframework.xml.core.ConstructorException $r3, $r14;
        java.lang.String $r4;
        java.lang.annotation.Annotation $r5, $r6;
        boolean $z0, $z1, $z2;
        org.simpleframework.xml.core.ParameterMap $r7;
        java.lang.Object $r8, $r12;
        org.simpleframework.xml.core.Parameter $r9, $r10;
        org.simpleframework.xml.core.SignatureScanner $r11;

        $r11 := @this: org.simpleframework.xml.core.SignatureScanner;

        $r9 := @parameter0: org.simpleframework.xml.core.Parameter;

        $r8 := @parameter1: java.lang.Object;

        $r7 = $r11.<org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.core.ParameterMap registry>;

        $r12 = virtualinvoke $r7.<org.simpleframework.xml.core.ParameterMap: java.lang.Object get(java.lang.Object)>($r8);

        $r10 = (org.simpleframework.xml.core.Parameter) $r12;

        $z0 = interfaceinvoke $r9.<org.simpleframework.xml.core.Parameter: boolean isText()>();

        $z1 = interfaceinvoke $r10.<org.simpleframework.xml.core.Parameter: boolean isText()>();

        if $z0 == $z1 goto label2;

        $r5 = interfaceinvoke $r9.<org.simpleframework.xml.core.Parameter: java.lang.annotation.Annotation getAnnotation()>();

        $r6 = interfaceinvoke $r10.<org.simpleframework.xml.core.Parameter: java.lang.annotation.Annotation getAnnotation()>();

        $r4 = interfaceinvoke $r9.<org.simpleframework.xml.core.Parameter: java.lang.String getPath()>();

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z2 != 0 goto label1;

        $r3 = new org.simpleframework.xml.core.ConstructorException;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = $r4;

        $r0 = $r11.<org.simpleframework.xml.core.SignatureScanner: java.lang.Class type>;

        $r2[1] = $r0;

        specialinvoke $r3.<org.simpleframework.xml.core.ConstructorException: void <init>(java.lang.String,java.lang.Object[])>("Annotations do not match for \'%s\' in %s", $r2);

        throw $r3;

     label1:
        $r13 = interfaceinvoke $r10.<org.simpleframework.xml.core.Parameter: java.lang.Class getType()>();

        $r1 = interfaceinvoke $r9.<org.simpleframework.xml.core.Parameter: java.lang.Class getType()>();

        if $r13 == $r1 goto label3;

        $r14 = new org.simpleframework.xml.core.ConstructorException;

        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = $r4;

        $r16 = $r11.<org.simpleframework.xml.core.SignatureScanner: java.lang.Class type>;

        $r15[1] = $r16;

        specialinvoke $r14.<org.simpleframework.xml.core.ConstructorException: void <init>(java.lang.String,java.lang.Object[])>("Parameter types do not match for \'%s\' in %s", $r15);

        throw $r14;

     label2:
        return;

     label3:
        return;
    }

    public java.util.List getSignatures() throws java.lang.Exception
    {
        java.util.List $r0;
        org.simpleframework.xml.core.SignatureBuilder $r1;
        org.simpleframework.xml.core.SignatureScanner $r2;

        $r2 := @this: org.simpleframework.xml.core.SignatureScanner;

        $r1 = $r2.<org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.core.SignatureBuilder builder>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.SignatureBuilder: java.util.List build()>();

        return $r0;
    }

    public boolean isValid()
    {
        boolean $z0;
        org.simpleframework.xml.core.SignatureBuilder $r0;
        org.simpleframework.xml.core.SignatureScanner $r1;

        $r1 := @this: org.simpleframework.xml.core.SignatureScanner;

        $r0 = $r1.<org.simpleframework.xml.core.SignatureScanner: org.simpleframework.xml.core.SignatureBuilder builder>;

        $z0 = virtualinvoke $r0.<org.simpleframework.xml.core.SignatureBuilder: boolean isValid()>();

        return $z0;
    }
}
