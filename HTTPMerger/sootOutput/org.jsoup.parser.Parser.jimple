public class org.jsoup.parser.Parser extends java.lang.Object
{
    private static final int DEFAULT_MAX_ERRORS;
    private org.jsoup.parser.ParseErrorList errors;
    private int maxErrors;
    private org.jsoup.parser.TreeBuilder treeBuilder;

    public void <init>(org.jsoup.parser.TreeBuilder)
    {
        org.jsoup.parser.TreeBuilder $r0;
        org.jsoup.parser.Parser $r1;

        $r1 := @this: org.jsoup.parser.Parser;

        $r0 := @parameter0: org.jsoup.parser.TreeBuilder;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r1.<org.jsoup.parser.Parser: int maxErrors> = 0;

        $r1.<org.jsoup.parser.Parser: org.jsoup.parser.TreeBuilder treeBuilder> = $r0;

        return;
    }

    public static org.jsoup.parser.Parser htmlParser()
    {
        org.jsoup.parser.HtmlTreeBuilder $r0;
        org.jsoup.parser.Parser $r1;

        $r1 = new org.jsoup.parser.Parser;

        $r0 = new org.jsoup.parser.HtmlTreeBuilder;

        specialinvoke $r0.<org.jsoup.parser.HtmlTreeBuilder: void <init>()>();

        specialinvoke $r1.<org.jsoup.parser.Parser: void <init>(org.jsoup.parser.TreeBuilder)>($r0);

        return $r1;
    }

    public static org.jsoup.nodes.Document parse(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Document $r0;
        org.jsoup.parser.ParseErrorList $r1;
        org.jsoup.parser.HtmlTreeBuilder $r2;
        java.lang.String $r3, $r4;

        $r3 := @parameter0: java.lang.String;

        $r4 := @parameter1: java.lang.String;

        $r2 = new org.jsoup.parser.HtmlTreeBuilder;

        specialinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void <init>()>();

        $r1 = staticinvoke <org.jsoup.parser.ParseErrorList: org.jsoup.parser.ParseErrorList noTracking()>();

        $r0 = virtualinvoke $r2.<org.jsoup.parser.TreeBuilder: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList)>($r3, $r4, $r1);

        return $r0;
    }

    public static org.jsoup.nodes.Document parseBodyFragment(java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r0;
        org.jsoup.nodes.Node[] $r1, $r8;
        java.util.List $r2;
        org.jsoup.nodes.Element $r3;
        org.jsoup.nodes.Document $r4;
        org.jsoup.nodes.Node $r5;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r7;

        $r6 := @parameter0: java.lang.String;

        $r7 := @parameter1: java.lang.String;

        $r4 = staticinvoke <org.jsoup.nodes.Document: org.jsoup.nodes.Document createShell(java.lang.String)>($r7);

        $r3 = virtualinvoke $r4.<org.jsoup.nodes.Document: org.jsoup.nodes.Element body()>();

        $r2 = staticinvoke <org.jsoup.parser.Parser: java.util.List parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String)>($r6, $r3, $r7);

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r1 = newarray (org.jsoup.nodes.Node)[$i1];

        $r0 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r8 = (org.jsoup.nodes.Node[]) $r0;

        $i2 = lengthof $r8;

        $i0 = 0;

     label1:
        if $i0 >= $i2 goto label2;

        $r5 = $r8[$i0];

        virtualinvoke $r3.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>($r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r4;
    }

    public static org.jsoup.nodes.Document parseBodyFragmentRelaxed(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Document $r0;
        java.lang.String $r1, $r2;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r0 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String)>($r1, $r2);

        return $r0;
    }

    public static java.util.List parseFragment(java.lang.String, org.jsoup.nodes.Element, java.lang.String)
    {
        java.util.List $r0;
        org.jsoup.parser.ParseErrorList $r1;
        org.jsoup.parser.HtmlTreeBuilder $r2;
        org.jsoup.nodes.Element $r3;
        java.lang.String $r4, $r5;

        $r4 := @parameter0: java.lang.String;

        $r3 := @parameter1: org.jsoup.nodes.Element;

        $r5 := @parameter2: java.lang.String;

        $r2 = new org.jsoup.parser.HtmlTreeBuilder;

        specialinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: void <init>()>();

        $r1 = staticinvoke <org.jsoup.parser.ParseErrorList: org.jsoup.parser.ParseErrorList noTracking()>();

        $r0 = virtualinvoke $r2.<org.jsoup.parser.HtmlTreeBuilder: java.util.List parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList)>($r4, $r3, $r5, $r1);

        return $r0;
    }

    public static org.jsoup.parser.Parser xmlParser()
    {
        org.jsoup.parser.XmlTreeBuilder $r0;
        org.jsoup.parser.Parser $r1;

        $r1 = new org.jsoup.parser.Parser;

        $r0 = new org.jsoup.parser.XmlTreeBuilder;

        specialinvoke $r0.<org.jsoup.parser.XmlTreeBuilder: void <init>()>();

        specialinvoke $r1.<org.jsoup.parser.Parser: void <init>(org.jsoup.parser.TreeBuilder)>($r0);

        return $r1;
    }

    public java.util.List getErrors()
    {
        org.jsoup.parser.ParseErrorList r0;
        org.jsoup.parser.Parser $r1;

        $r1 := @this: org.jsoup.parser.Parser;

        r0 = $r1.<org.jsoup.parser.Parser: org.jsoup.parser.ParseErrorList errors>;

        return r0;
    }

    public org.jsoup.parser.TreeBuilder getTreeBuilder()
    {
        org.jsoup.parser.TreeBuilder r0;
        org.jsoup.parser.Parser $r1;

        $r1 := @this: org.jsoup.parser.Parser;

        r0 = $r1.<org.jsoup.parser.Parser: org.jsoup.parser.TreeBuilder treeBuilder>;

        return r0;
    }

    public boolean isTrackErrors()
    {
        int $i0;
        org.jsoup.parser.Parser $r0;

        $r0 := @this: org.jsoup.parser.Parser;

        $i0 = $r0.<org.jsoup.parser.Parser: int maxErrors>;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.jsoup.nodes.Document parseInput(java.lang.String, java.lang.String)
    {
        org.jsoup.nodes.Document $r0;
        org.jsoup.parser.TreeBuilder $r1;
        int $i0;
        boolean $z0;
        org.jsoup.parser.ParseErrorList $r2, $r6;
        java.lang.String $r3, $r4;
        org.jsoup.parser.Parser $r5;

        $r5 := @this: org.jsoup.parser.Parser;

        $r3 := @parameter0: java.lang.String;

        $r4 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r5.<org.jsoup.parser.Parser: boolean isTrackErrors()>();

        if $z0 == 0 goto label2;

        $i0 = $r5.<org.jsoup.parser.Parser: int maxErrors>;

        $r2 = staticinvoke <org.jsoup.parser.ParseErrorList: org.jsoup.parser.ParseErrorList tracking(int)>($i0);

     label1:
        $r5.<org.jsoup.parser.Parser: org.jsoup.parser.ParseErrorList errors> = $r2;

        $r1 = $r5.<org.jsoup.parser.Parser: org.jsoup.parser.TreeBuilder treeBuilder>;

        $r6 = $r5.<org.jsoup.parser.Parser: org.jsoup.parser.ParseErrorList errors>;

        $r0 = virtualinvoke $r1.<org.jsoup.parser.TreeBuilder: org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList)>($r3, $r4, $r6);

        return $r0;

     label2:
        $r2 = staticinvoke <org.jsoup.parser.ParseErrorList: org.jsoup.parser.ParseErrorList noTracking()>();

        goto label1;
    }

    public org.jsoup.parser.Parser setTrackErrors(int)
    {
        int $i0;
        org.jsoup.parser.Parser $r0;

        $r0 := @this: org.jsoup.parser.Parser;

        $i0 := @parameter0: int;

        $r0.<org.jsoup.parser.Parser: int maxErrors> = $i0;

        return $r0;
    }

    public org.jsoup.parser.Parser setTreeBuilder(org.jsoup.parser.TreeBuilder)
    {
        org.jsoup.parser.TreeBuilder $r0;
        org.jsoup.parser.Parser $r1;

        $r1 := @this: org.jsoup.parser.Parser;

        $r0 := @parameter0: org.jsoup.parser.TreeBuilder;

        $r1.<org.jsoup.parser.Parser: org.jsoup.parser.TreeBuilder treeBuilder> = $r0;

        return $r1;
    }
}
