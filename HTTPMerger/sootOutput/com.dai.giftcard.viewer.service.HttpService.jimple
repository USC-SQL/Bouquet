public class com.dai.giftcard.viewer.service.HttpService extends java.lang.Object
{

    public void <init>()
    {
        com.dai.giftcard.viewer.service.HttpService $r0;

        $r0 := @this: com.dai.giftcard.viewer.service.HttpService;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int GetAppUpdate()
    {
        java.lang.String $r0, $r7, $r8, $r9;
        org.apache.http.HttpEntity $r1;
        org.apache.http.HttpResponse $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.io.ByteArrayOutputStream $r3;
        org.apache.http.client.methods.HttpGet $r4;
        org.apache.http.impl.client.DefaultHttpClient $r5;
        java.lang.Exception $r6;

        $r5 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r5.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        $r4 = new org.apache.http.client.methods.HttpGet;

     label1:
        specialinvoke $r4.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>("https://play.google.com/store/apps/details?id=com.dai.giftcard.viewer");

        $r2 = staticinvoke <usc.edu.AgentURLConnection: org.apache.http.HttpResponse HttpResponseexecute(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest)>($r4, $r5);

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = interfaceinvoke $r2.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        interfaceinvoke $r1.<org.apache.http.HttpEntity: void writeTo(java.io.OutputStream)>($r3);

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void close()>();

        $r0 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("[Version:");

     label2:
        $i1 = $i0 + 9;

     label3:
        $i2 = $i0 + 20;

        $r7 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        $i3 = virtualinvoke $r7.<java.lang.String: int indexOf(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

     label4:
        return $i4;

     label5:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        return -1;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static org.apache.http.client.HttpClient getNewHttpClient()
    {
        org.apache.http.impl.client.DefaultHttpClient $r0, $r13;
        org.apache.http.conn.scheme.PlainSocketFactory $r1;
        org.apache.http.conn.scheme.Scheme $r2, $r12;
        org.apache.http.HttpVersion $r3;
        org.apache.http.conn.ssl.X509HostnameVerifier $r4;
        java.security.KeyStore $r5;
        java.lang.String $r6;
        com.dai.giftcard.viewer.helper.SSLSocketFactoryEx $r7;
        org.apache.http.conn.scheme.SchemeRegistry $r8;
        org.apache.http.params.BasicHttpParams $r9;
        java.lang.Exception $r10;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r11;

     label1:
        $r6 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6);

        virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(null, null);

        $r7 = new com.dai.giftcard.viewer.helper.SSLSocketFactoryEx;

        specialinvoke $r7.<com.dai.giftcard.viewer.helper.SSLSocketFactoryEx: void <init>(java.security.KeyStore)>($r5);

        $r4 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER>;

        virtualinvoke $r7.<org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>($r4);

        $r9 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r9.<org.apache.http.params.BasicHttpParams: void <init>()>();

        $r3 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_1>;

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>($r9, $r3);

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>($r9, "UTF-8");

        $r8 = new org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke $r8.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        $r2 = new org.apache.http.conn.scheme.Scheme;

        $r1 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        specialinvoke $r2.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("http", $r1, 80);

        virtualinvoke $r8.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r2);

        $r12 = new org.apache.http.conn.scheme.Scheme;

        specialinvoke $r12.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("https", $r7, 443);

        virtualinvoke $r8.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r12);

        $r11 = new org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        specialinvoke $r11.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>($r9, $r8);

        $r0 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r0.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>($r11, $r9);

     label2:
        return $r0;

     label3:
        $r10 := @caughtexception;

        $r13 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r13.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        return $r13;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
