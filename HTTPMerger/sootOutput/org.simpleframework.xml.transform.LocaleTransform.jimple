class org.simpleframework.xml.transform.LocaleTransform extends java.lang.Object implements org.simpleframework.xml.transform.Transform
{
    private final java.util.regex.Pattern pattern;

    public void <init>()
    {
        java.util.regex.Pattern $r0;
        org.simpleframework.xml.transform.LocaleTransform $r1;

        $r1 := @this: org.simpleframework.xml.transform.LocaleTransform;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("_");

        $r1.<org.simpleframework.xml.transform.LocaleTransform: java.util.regex.Pattern pattern> = $r0;

        return;
    }

    private java.util.Locale read(java.lang.String[]) throws java.lang.Exception
    {
        java.util.Locale $r0;
        java.lang.String $r1, $r2, $r3, $r7;
        int $i0, $i1, $i2;
        java.lang.String[] $r4, $r5;
        org.simpleframework.xml.transform.LocaleTransform $r6;

        $r6 := @this: org.simpleframework.xml.transform.LocaleTransform;

        $r4 := @parameter0: java.lang.String[];

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = "";

        $r5[1] = "";

        $r5[2] = "";

        $i0 = 0;

     label1:
        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label3;

        $i2 = lengthof $r4;

        if $i0 >= $i2 goto label2;

        $r1 = $r4[$i0];

        $r5[$i0] = $r1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r0 = new java.util.Locale;

        $r7 = $r5[0];

        $r2 = $r5[1];

        $r3 = $r5[2];

        specialinvoke $r0.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r7, $r2, $r3);

        return $r0;
    }

    public volatile java.lang.Object read(java.lang.String) throws java.lang.Exception
    {
        java.util.Locale $r0;
        java.lang.String $r1;
        org.simpleframework.xml.transform.LocaleTransform $r2;

        $r2 := @this: org.simpleframework.xml.transform.LocaleTransform;

        $r1 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r2.<org.simpleframework.xml.transform.LocaleTransform: java.util.Locale read(java.lang.String)>($r1);

        return $r0;
    }

    public java.util.Locale read(java.lang.String) throws java.lang.Exception
    {
        java.util.Locale $r0;
        java.lang.Object[] $r1;
        org.simpleframework.xml.transform.InvalidFormatException $r2;
        int $i0;
        java.lang.String[] $r3;
        java.util.regex.Pattern $r4;
        java.lang.String $r5;
        org.simpleframework.xml.transform.LocaleTransform $r6;

        $r6 := @this: org.simpleframework.xml.transform.LocaleTransform;

        $r5 := @parameter0: java.lang.String;

        $r4 = $r6.<org.simpleframework.xml.transform.LocaleTransform: java.util.regex.Pattern pattern>;

        $r3 = virtualinvoke $r4.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>($r5);

        $i0 = lengthof $r3;

        if $i0 >= 1 goto label1;

        $r2 = new org.simpleframework.xml.transform.InvalidFormatException;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r5;

        specialinvoke $r2.<org.simpleframework.xml.transform.InvalidFormatException: void <init>(java.lang.String,java.lang.Object[])>("Invalid locale %s", $r1);

        throw $r2;

     label1:
        $r0 = specialinvoke $r6.<org.simpleframework.xml.transform.LocaleTransform: java.util.Locale read(java.lang.String[])>($r3);

        return $r0;
    }

    public volatile java.lang.String write(java.lang.Object) throws java.lang.Exception
    {
        java.util.Locale $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        org.simpleframework.xml.transform.LocaleTransform $r3;

        $r3 := @this: org.simpleframework.xml.transform.LocaleTransform;

        $r2 := @parameter0: java.lang.Object;

        $r0 = (java.util.Locale) $r2;

        $r1 = virtualinvoke $r3.<org.simpleframework.xml.transform.LocaleTransform: java.lang.String write(java.util.Locale)>($r0);

        return $r1;
    }

    public java.lang.String write(java.util.Locale)
    {
        java.lang.String $r0;
        java.util.Locale $r1;
        org.simpleframework.xml.transform.LocaleTransform $r2;

        $r2 := @this: org.simpleframework.xml.transform.LocaleTransform;

        $r1 := @parameter0: java.util.Locale;

        $r0 = virtualinvoke $r1.<java.util.Locale: java.lang.String toString()>();

        return $r0;
    }
}
