public class com.oopsconsultancy.xmltask.BufferStore extends java.lang.Object
{
    public static final java.lang.String BUFFERS_PROJECT_REF;
    private static final java.lang.String FILE_PREFIX;

    private void <init>()
    {
        com.oopsconsultancy.xmltask.BufferStore $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.BufferStore;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void clear(java.lang.String, org.apache.tools.ant.Task)
    {
        java.util.ArrayList $r0;
        java.lang.StringBuilder $r1, $r5, $r6, $r7;
        org.apache.tools.ant.Task $r2;
        java.lang.String $r3, $r4;

        $r3 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.apache.tools.ant.Task;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing buffer (");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.oopsconsultancy.xmltask.BufferStore: void log(java.lang.String,org.apache.tools.ant.Task)>($r4, $r2);

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        staticinvoke <com.oopsconsultancy.xmltask.BufferStore: void setBuffer(java.lang.String,java.util.List,org.apache.tools.ant.Task)>($r3, $r0, $r2);

        return;
    }

    public static org.w3c.dom.Node[] get(java.lang.String, org.apache.tools.ant.Task)
    {
        org.w3c.dom.Node $r0, $r8;
        java.lang.Object[] $r1;
        java.util.List $r2;
        org.w3c.dom.Node[] $r3, $r6, $r7;
        int $i0, $i1;
        org.apache.tools.ant.Task $r4;
        java.lang.String $r5;

        $r5 := @parameter0: java.lang.String;

        $r4 := @parameter1: org.apache.tools.ant.Task;

        $r2 = staticinvoke <com.oopsconsultancy.xmltask.BufferStore: java.util.List getBuffer(java.lang.String,org.apache.tools.ant.Task)>($r5, $r4);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = newarray (org.w3c.dom.Node)[0];

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r6 = (org.w3c.dom.Node[]) $r1;

        $r7 = (org.w3c.dom.Node[]) $r6;

        $i0 = 0;

     label2:
        $i1 = lengthof $r7;

        if $i0 >= $i1 goto label3;

        $r0 = $r7[$i0];

        $r8 = interfaceinvoke $r0.<org.w3c.dom.Node: org.w3c.dom.Node cloneNode(boolean)>(1);

        $r7[$i0] = $r8;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return $r7;
    }

    private static java.util.List getBuffer(java.lang.String, org.apache.tools.ant.Task)
    {
        java.util.Map $r0;
        java.lang.IllegalStateException $r1;
        java.lang.Object $r2, $r18;
        java.io.FileInputStream $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r12, $r13, $r14, $r16;
        java.io.ObjectInputStream $r5;
        java.io.File $r6;
        java.lang.Exception $r7;
        java.util.List $r8, $r19;
        org.apache.tools.ant.Task $r9;
        java.lang.String $r10, $r11, $r15, $r17;

        $r10 := @parameter0: java.lang.String;

        $r9 := @parameter1: org.apache.tools.ant.Task;

        $z0 = staticinvoke <com.oopsconsultancy.xmltask.BufferStore: boolean isFileBuffer(java.lang.String)>($r10);

        if $z0 == 0 goto label5;

        $r6 = new java.io.File;

        $r11 = staticinvoke <com.oopsconsultancy.xmltask.BufferStore: java.lang.String getFilenameFromBuffer(java.lang.String)>($r10);

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r11);

        $z1 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label1;

        return null;

     label1:
        $r5 = new java.io.ObjectInputStream;

        $r3 = new java.io.FileInputStream;

     label2:
        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r6);

        specialinvoke $r5.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r3);

        $r2 = virtualinvoke $r5.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r8 = (java.util.List) $r2;

        virtualinvoke $r5.<java.io.ObjectInputStream: void close()>();

     label3:
        return $r8;

     label4:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

        $r1 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem during deserialization of ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r15 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r1;

     label5:
        $r0 = staticinvoke <com.oopsconsultancy.xmltask.BufferStore: java.util.Map getBuffers(org.apache.tools.ant.Task)>($r9);

        $r18 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r19 = (java.util.List) $r18;

        return $r19;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private static java.util.Map getBuffers(org.apache.tools.ant.Task)
    {
        java.util.HashMap r0;
        java.lang.IllegalArgumentException r1, r6;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.tools.ant.Project $r4, $r7, $r9;
        org.apache.tools.ant.Task $r5;

        $r5 := @parameter0: org.apache.tools.ant.Task;

        if $r5 != null goto label1;

        r1 = new java.lang.IllegalArgumentException;

        specialinvoke r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t get buffers for a null task");

        throw r1;

     label1:
        $r4 = virtualinvoke $r5.<org.apache.tools.ant.Task: org.apache.tools.ant.Project getProject()>();

        if $r4 != null goto label2;

        r6 = new java.lang.IllegalArgumentException;

        specialinvoke r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t get buffers for a task with no associated project");

        throw r6;

     label2:
        $r7 = virtualinvoke $r5.<org.apache.tools.ant.Task: org.apache.tools.ant.Project getProject()>();

        $r3 = virtualinvoke $r7.<org.apache.tools.ant.Project: java.lang.Object getReference(java.lang.String)>("xmltask.buffers");

        $r2 = (java.util.Map) $r3;

        if $r2 != null goto label3;

        r0 = new java.util.HashMap;

        specialinvoke r0.<java.util.HashMap: void <init>()>();

        $r9 = virtualinvoke $r5.<org.apache.tools.ant.Task: org.apache.tools.ant.Project getProject()>();

        virtualinvoke $r9.<org.apache.tools.ant.Project: void addReference(java.lang.String,java.lang.Object)>("xmltask.buffers", r0);

        return r0;

     label3:
        return $r2;
    }

    private static java.lang.String getFilenameFromBuffer(java.lang.String)
    {
        int $i0;
        java.lang.IllegalArgumentException $r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r4, $r5, $r6;
        java.lang.String $r2, $r3, $r7, $r8;

        $r2 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("file://");

        if $z0 != 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to create a file buffer using \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r0;

     label1:
        $r3 = "file://";

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r8 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r8;
    }

    private static boolean isFileBuffer(java.lang.String)
    {
        boolean $z0;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("file://");

        return $z0;
    }

    public static void log(java.lang.String, org.apache.tools.ant.Task)
    {
        java.io.PrintStream $r0;
        org.apache.tools.ant.Task $r1;
        java.lang.String $r2;

        $r2 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.apache.tools.ant.Task;

        if $r1 == null goto label1;

        virtualinvoke $r1.<org.apache.tools.ant.Task: void log(java.lang.String,int)>($r2, 3);

        return;

     label1:
        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r2);

        return;
    }

    public static void set(java.lang.String, org.w3c.dom.Node, boolean, org.apache.tools.ant.Task)
    {
        java.util.ArrayList r0, r19;
        java.lang.StringBuilder $r1, r2, $r9, $r10, r13, $r14, $r15, $r16, $r17, $r18;
        java.util.List $r3, $r4;
        org.apache.tools.ant.Task $r5;
        boolean $z0;
        org.w3c.dom.Node $r6, $r12;
        java.lang.String $r7, $r8, $r11;

        $r7 := @parameter0: java.lang.String;

        $r6 := @parameter1: org.w3c.dom.Node;

        $z0 := @parameter2: boolean;

        $r5 := @parameter3: org.apache.tools.ant.Task;

        if $r6 != null goto label1;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No XML to store in buffer \'");

        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.oopsconsultancy.xmltask.BufferStore: void log(java.lang.String,org.apache.tools.ant.Task)>($r11, $r5);

        return;

     label1:
        $r12 = interfaceinvoke $r6.<org.w3c.dom.Node: org.w3c.dom.Node cloneNode(boolean)>(1);

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" against buffer (");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.oopsconsultancy.xmltask.BufferStore: void log(java.lang.String,org.apache.tools.ant.Task)>($r8, $r5);

        $r4 = staticinvoke <com.oopsconsultancy.xmltask.BufferStore: java.util.List getBuffer(java.lang.String,org.apache.tools.ant.Task)>($r7, $r5);

        $r3 = $r4;

        if $r4 == null goto label4;

        if $z0 != 0 goto label3;

        staticinvoke <com.oopsconsultancy.xmltask.BufferStore: void log(java.lang.String,org.apache.tools.ant.Task)>(" (overwriting existing entry)", $r5);

        r0 = new java.util.ArrayList;

        $r3 = r0;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        staticinvoke <com.oopsconsultancy.xmltask.BufferStore: void setBuffer(java.lang.String,java.util.List,org.apache.tools.ant.Task)>($r7, r0, $r5);

     label2:
        staticinvoke <com.oopsconsultancy.xmltask.BufferStore: void log(java.lang.String,org.apache.tools.ant.Task)>("", $r5);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r12);

        staticinvoke <com.oopsconsultancy.xmltask.BufferStore: void setBuffer(java.lang.String,java.util.List,org.apache.tools.ant.Task)>($r7, $r3, $r5);

        return;

     label3:
        staticinvoke <com.oopsconsultancy.xmltask.BufferStore: void log(java.lang.String,org.apache.tools.ant.Task)>(" (appending to existing entry)", $r5);

        goto label2;

     label4:
        r19 = new java.util.ArrayList;

        $r3 = r19;

        specialinvoke r19.<java.util.ArrayList: void <init>()>();

        staticinvoke <com.oopsconsultancy.xmltask.BufferStore: void setBuffer(java.lang.String,java.util.List,org.apache.tools.ant.Task)>($r7, r19, $r5);

        goto label2;
    }

    private static void setBuffer(java.lang.String, java.util.List, org.apache.tools.ant.Task)
    {
        java.util.Map $r0;
        java.lang.IllegalStateException $r1;
        java.io.FileOutputStream $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r11, $r12, $r13, $r15;
        java.io.ObjectOutputStream $r4;
        java.io.File $r5;
        java.io.IOException $r6;
        org.apache.tools.ant.Task $r7;
        java.util.List $r8;
        java.lang.String $r9, $r10, $r14, $r16;

        $r9 := @parameter0: java.lang.String;

        $r8 := @parameter1: java.util.List;

        $r7 := @parameter2: org.apache.tools.ant.Task;

        $z0 = staticinvoke <com.oopsconsultancy.xmltask.BufferStore: boolean isFileBuffer(java.lang.String)>($r9);

        if $z0 == 0 goto label4;

        $r5 = new java.io.File;

        $r10 = staticinvoke <com.oopsconsultancy.xmltask.BufferStore: java.lang.String getFilenameFromBuffer(java.lang.String)>($r9);

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r10);

        $r4 = new java.io.ObjectOutputStream;

        $r2 = new java.io.FileOutputStream;

     label1:
        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r5);

        specialinvoke $r4.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r2);

        interfaceinvoke $r4.<java.io.ObjectOutput: void writeObject(java.lang.Object)>($r8);

        interfaceinvoke $r4.<java.io.ObjectOutput: void close()>();

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.io.IOException: void printStackTrace()>();

        $r1 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem during serialization of ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r14 = virtualinvoke $r6.<java.io.IOException: java.lang.String getMessage()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r1;

     label4:
        $r0 = staticinvoke <com.oopsconsultancy.xmltask.BufferStore: java.util.Map getBuffers(org.apache.tools.ant.Task)>($r7);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r8);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.oopsconsultancy.xmltask.BufferStore: java.lang.String BUFFERS_PROJECT_REF> = "xmltask.buffers";

        <com.oopsconsultancy.xmltask.BufferStore: java.lang.String FILE_PREFIX> = "file://";

        <com.oopsconsultancy.xmltask.BufferStore: java.lang.String BUFFERS_PROJECT_REF> = "xmltask.buffers";

        return;
    }
}
