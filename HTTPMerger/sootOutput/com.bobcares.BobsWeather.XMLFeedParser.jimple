public class com.bobcares.BobsWeather.XMLFeedParser extends java.lang.Object
{
    java.lang.String cityName;
    java.lang.String cloudsPercentage;
    java.lang.String countryName;
    java.lang.String date;
    java.lang.String[] dates;
    java.lang.String dayTime;
    java.lang.String forecastXMLData;
    java.lang.String humidityPercentage;
    java.lang.String lastUpdate;
    java.lang.String localTime;
    java.lang.String[] maxTemperaturesCelcius;
    java.lang.String[] minTemperaturesCelcius;
    org.xmlpull.v1.XmlPullParser parser;
    org.xmlpull.v1.XmlPullParserFactory parserFactory;
    org.xmlpull.v1.XmlPullParserFactory parserFactoryFor5daysdata;
    org.xmlpull.v1.XmlPullParserFactory parserFactoryForTime;
    org.xmlpull.v1.XmlPullParser parserFor5daysdata;
    org.xmlpull.v1.XmlPullParser parserForTime;
    java.lang.String precipitationInfo;
    java.lang.String precipitationMode;
    java.lang.String precipitationUnit;
    java.lang.String precipitationValue;
    java.lang.String pressureInhPa;
    java.io.InputStream streamOfDataFromNetwork;
    java.lang.String sunriseTime;
    java.lang.String sunsetTime;
    java.lang.String tempMaxInCelcius;
    java.lang.String tempMinInCelcius;
    java.lang.String temperatureInCelcius;
    java.lang.String[] temperaturesCelcius;
    java.lang.String time;
    java.lang.String timeXMLData;
    java.lang.String urlFirstPartFor5daysForecastByCityName;
    java.lang.String urlFirstPartFor5daysForecastByGeoCoordinates;
    java.lang.String urlFirstPartForCallByCityName;
    java.lang.String urlFirstPartForCallByGeoCoordinates;
    java.lang.String urlFirstPartToFetchTime;
    java.lang.String urlLastPart;
    java.lang.String urlLastPartFor5daysForecastByCityName;
    java.lang.String urlLastPartFor5daysForecastByGeoCoordinates;
    java.lang.String urlLastPartToFetchTime;
    java.lang.String urlSecondPartForCallByGeoCoordinates;
    java.lang.String utcOffset;
    java.lang.String weatherCondition;
    java.lang.String[] weatherConditions;
    java.lang.String windDirection;
    java.lang.String windSpeedInmps;
    java.lang.String xmlData;

    public void <init>()
    {
        java.lang.String[] $r0, $r2, $r3, $r4, $r5;
        com.bobcares.BobsWeather.XMLFeedParser $r1;

        $r1 := @this: com.bobcares.BobsWeather.XMLFeedParser;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlFirstPartForCallByCityName> = "http://api.openweathermap.org/data/2.5/weather?q=";

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlFirstPartForCallByGeoCoordinates> = "http://api.openweathermap.org/data/2.5/weather?lat=";

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlSecondPartForCallByGeoCoordinates> = "&lon=";

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlLastPart> = "&mode=xml&units=metric&APPID=1e38049ae254a0d6c627d624dc13c9fd";

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlFirstPartFor5daysForecastByCityName> = "http://api.openweathermap.org/data/2.5/forecast/daily?q=";

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlLastPartFor5daysForecastByCityName> = "&mode=xml&units=metric&cnt=5&APPID=1e38049ae254a0d6c627d624dc13c9fd";

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlFirstPartFor5daysForecastByGeoCoordinates> = "http://api.openweathermap.org/data/2.5/forecast/daily?lat=";

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlLastPartFor5daysForecastByGeoCoordinates> = "&mode=xml&units=metric&cnt=5&APPID=1e38049ae254a0d6c627d624dc13c9fd";

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlFirstPartToFetchTime> = "http://api.worldweatheronline.com/free/v1/tz.ashx?q=";

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlLastPartToFetchTime> = "&format=xml&key=umre32dzkzma6bkwm9k88zgf";

        $r0 = newarray (java.lang.String)[5];

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] dates> = $r0;

        $r2 = newarray (java.lang.String)[5];

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] temperaturesCelcius> = $r2;

        $r3 = newarray (java.lang.String)[5];

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] minTemperaturesCelcius> = $r3;

        $r4 = newarray (java.lang.String)[5];

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] maxTemperaturesCelcius> = $r4;

        $r5 = newarray (java.lang.String)[5];

        $r1.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] weatherConditions> = $r5;

        return;
    }

    public void fetchXMLFromUrl(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        int $i0, $i1, $i2;
        java.io.InputStream $r0, $r1, $r2;
        java.net.HttpURLConnection $r3, $r4, $r5;
        java.net.URLConnection $r6, $r15, $r17;
        java.lang.StringBuilder $r7, $r23, $r26, $r29, $r32, $r35;
        java.net.URL $r8, $r14, $r16;
        byte[] $r9, $r18, $r19;
        java.lang.String $r10, $r11, $r12, $r20, $r21, $r22, $r24, $r25, $r27, $r28, $r30, $r31, $r33, $r34, $r36;
        com.bobcares.BobsWeather.XMLFeedParser $r13;

        $r13 := @this: com.bobcares.BobsWeather.XMLFeedParser;

        $r10 := @parameter0: java.lang.String;

        $r11 := @parameter1: java.lang.String;

        $r12 := @parameter2: java.lang.String;

        $r8 = new java.net.URL;

        specialinvoke $r8.<java.net.URL: void <init>(java.lang.String)>($r10);

        $r6 = virtualinvoke $r8.<java.net.URL: java.net.URLConnection openConnection()>();

        $r3 = (java.net.HttpURLConnection) $r6;

        virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        virtualinvoke $r3.<java.net.HttpURLConnection: void setConnectTimeout(int)>(4000);

        virtualinvoke $r3.<java.net.HttpURLConnection: void setReadTimeout(int)>(9000);

        virtualinvoke $r3.<java.net.HttpURLConnection: void connect()>();

        $r0 = staticinvoke <usc.edu.AgentURLConnection: java.io.InputStream getInputStream(java.net.URLConnection)>($r3);

        $r14 = new java.net.URL;

        specialinvoke $r14.<java.net.URL: void <init>(java.lang.String)>($r11);

        $r15 = virtualinvoke $r14.<java.net.URL: java.net.URLConnection openConnection()>();

        $r4 = (java.net.HttpURLConnection) $r15;

        virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        virtualinvoke $r4.<java.net.HttpURLConnection: void setConnectTimeout(int)>(4000);

        virtualinvoke $r4.<java.net.HttpURLConnection: void setReadTimeout(int)>(9000);

        virtualinvoke $r4.<java.net.HttpURLConnection: void connect()>();

        $r1 = staticinvoke <usc.edu.AgentURLConnection: java.io.InputStream getInputStream(java.net.URLConnection)>($r4);

        $r16 = new java.net.URL;

        specialinvoke $r16.<java.net.URL: void <init>(java.lang.String)>($r12);

        $r17 = virtualinvoke $r16.<java.net.URL: java.net.URLConnection openConnection()>();

        $r5 = (java.net.HttpURLConnection) $r17;

        virtualinvoke $r5.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        virtualinvoke $r5.<java.net.HttpURLConnection: void setConnectTimeout(int)>(4000);

        virtualinvoke $r5.<java.net.HttpURLConnection: void setReadTimeout(int)>(9000);

        virtualinvoke $r5.<java.net.HttpURLConnection: void connect()>();

        $r2 = staticinvoke <usc.edu.AgentURLConnection: java.io.InputStream getInputStream(java.net.URLConnection)>($r5);

        $r9 = newarray (byte)[4096];

        $r13.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String xmlData> = "";

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r9);

        if $i0 != -1 goto label4;

        $r18 = newarray (byte)[4096];

        $r13.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String forecastXMLData> = "";

     label2:
        $i1 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r18);

        if $i1 != -1 goto label5;

        $r19 = newarray (byte)[4096];

        $r13.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String timeXMLData> = "";

     label3:
        $i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r19);

        if $i2 != -1 goto label6;

        virtualinvoke $r3.<java.net.HttpURLConnection: void disconnect()>();

        virtualinvoke $r4.<java.net.HttpURLConnection: void disconnect()>();

        virtualinvoke $r5.<java.net.HttpURLConnection: void disconnect()>();

        return;

     label4:
        $r20 = $r13.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String xmlData>;

        $r7 = new java.lang.StringBuilder;

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r21);

        $r22 = new java.lang.String;

        specialinvoke $r22.<java.lang.String: void <init>(byte[],int,int)>($r9, 0, $i0);

        $r23 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String xmlData> = $r24;

        goto label1;

     label5:
        $r25 = $r13.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String forecastXMLData>;

        $r26 = new java.lang.StringBuilder;

        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r25);

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>($r27);

        $r28 = new java.lang.String;

        specialinvoke $r28.<java.lang.String: void <init>(byte[],int,int)>($r18, 0, $i1);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String forecastXMLData> = $r30;

        goto label2;

     label6:
        $r31 = $r13.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String timeXMLData>;

        $r32 = new java.lang.StringBuilder;

        $r33 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r31);

        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>($r33);

        $r34 = new java.lang.String;

        specialinvoke $r34.<java.lang.String: void <init>(byte[],int,int)>($r19, 0, $i2);

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String timeXMLData> = $r36;

        goto label3;
    }

    public java.lang.String findCondition(int)
    {
        int $i0;
        com.bobcares.BobsWeather.XMLFeedParser $r0;

        $r0 := @this: com.bobcares.BobsWeather.XMLFeedParser;

        $i0 := @parameter0: int;

        if $i0 >= 5 goto label1;

        return "Night";

     label1:
        if $i0 < 5 goto label2;

        if $i0 >= 12 goto label2;

        return "Morning";

     label2:
        if $i0 < 12 goto label3;

        if $i0 >= 16 goto label3;

        return "Afternoon";

     label3:
        if $i0 < 16 goto label4;

        if $i0 >= 19 goto label4;

        return "Evening";

     label4:
        if $i0 < 19 goto label5;

        return "Night";

     label5:
        return null;
    }

    public java.lang.String getWeatherForCurrentLocation(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r0, $r9, $r11, $r12, $r14, $r15, $r18, $r20, $r21, $r23, $r24, $r27, $r28, $r29, $r31;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r10, $r13, $r16, $r17, $r19, $r22, $r25, $r26, $r30, $r32, $r33;
        com.bobcares.BobsWeather.XMLFeedParser $r6;

        $r6 := @this: com.bobcares.BobsWeather.XMLFeedParser;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String cityName> = $r3;

        $r0 = new java.lang.StringBuilder;

        $r7 = $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlFirstPartForCallByGeoCoordinates>;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlSecondPartForCallByGeoCoordinates>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r13 = $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlLastPart>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.StringBuilder;

        $r16 = $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlFirstPartFor5daysForecastByGeoCoordinates>;

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r16);

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>($r17);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r19 = $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlSecondPartForCallByGeoCoordinates>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r22 = $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlLastPartFor5daysForecastByGeoCoordinates>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r5 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = new java.lang.StringBuilder;

        $r25 = $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlFirstPartToFetchTime>;

        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r25);

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>($r26);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r30 = $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlLastPartToFetchTime>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = virtualinvoke $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String parseXML(java.lang.String,java.lang.String,java.lang.String)>($r4, $r5, $r32);

        return $r33;
    }

    public java.lang.String getWeatherForRemoteLocation(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r10, $r12, $r13, $r16, $r18, $r19, $r22, $r24;
        java.io.UnsupportedEncodingException $r1;
        java.lang.String $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r14, $r15, $r17, $r20, $r21, $r23, $r25, $r26;
        com.bobcares.BobsWeather.XMLFeedParser $r6;

        $r6 := @this: com.bobcares.BobsWeather.XMLFeedParser;

        $r2 := @parameter0: java.lang.String;

        $r3 = null;

        $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String cityName> = $r2;

     label1:
        $r7 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

     label2:
        $r3 = $r7;

     label3:
        $r0 = new java.lang.StringBuilder;

        $r8 = $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlFirstPartForCallByCityName>;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r11 = $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlLastPart>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.StringBuilder;

        $r14 = $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlFirstPartFor5daysForecastByCityName>;

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r14);

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>($r15);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r17 = $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlLastPartFor5daysForecastByCityName>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r5 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = new java.lang.StringBuilder;

        $r20 = $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlFirstPartToFetchTime>;

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>($r21);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r23 = $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String urlLastPartToFetchTime>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = virtualinvoke $r6.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String parseXML(java.lang.String,java.lang.String,java.lang.String)>($r4, $r5, $r25);

        return $r26;

     label4:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    public java.lang.String makeWeatherConditionString(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;
        com.bobcares.BobsWeather.XMLFeedParser $r1;

        $r1 := @this: com.bobcares.BobsWeather.XMLFeedParser;

        $r0 := @parameter0: java.lang.String;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        lookupswitch($i0)
        {
            case 200: goto label02;
            case 201: goto label03;
            case 202: goto label04;
            case 210: goto label05;
            case 211: goto label06;
            case 212: goto label07;
            case 221: goto label08;
            case 230: goto label09;
            case 231: goto label10;
            case 232: goto label11;
            case 300: goto label12;
            case 301: goto label13;
            case 302: goto label14;
            case 310: goto label15;
            case 311: goto label16;
            case 312: goto label17;
            case 321: goto label18;
            case 500: goto label19;
            case 501: goto label20;
            case 502: goto label21;
            case 503: goto label22;
            case 504: goto label23;
            case 511: goto label24;
            case 520: goto label25;
            case 521: goto label26;
            case 522: goto label27;
            case 600: goto label28;
            case 601: goto label29;
            case 602: goto label30;
            case 611: goto label31;
            case 621: goto label32;
            case 701: goto label33;
            case 711: goto label34;
            case 721: goto label35;
            case 731: goto label36;
            case 741: goto label37;
            case 800: goto label38;
            case 801: goto label39;
            case 802: goto label40;
            case 803: goto label41;
            case 804: goto label42;
            case 900: goto label43;
            case 901: goto label44;
            case 902: goto label45;
            case 903: goto label46;
            case 904: goto label47;
            case 905: goto label48;
            case 906: goto label49;
            default: goto label01;
        };

     label01:
        return "";

     label02:
        return "Thunderstorm with Light Rain";

     label03:
        return "Thunderstorm with Rain";

     label04:
        return "Thunderstorm with Heavy Rain";

     label05:
        return "Light Thunderstorm";

     label06:
        return "Thunderstorm";

     label07:
        return "Heavy Thunderstorm";

     label08:
        return "Ragged Thunderstorm";

     label09:
        return "Thunderstorm with Light Drizzle";

     label10:
        return "Thunderstorm with Drizzle";

     label11:
        return "Thunderstorm with Heavy Drizzle";

     label12:
        return "Light Intensity Drizzle";

     label13:
        return "Drizzle";

     label14:
        return "Heavy Intensity Drizzle";

     label15:
        return "Light Intensity Drizzle Rain";

     label16:
        return "Drizzle Rain";

     label17:
        return "Heavy Intensity Drizzle Rain";

     label18:
        return "Shower Drizzle";

     label19:
        return "Light Rain";

     label20:
        return "Moderate Rain";

     label21:
        return "Heavy Intensity Rain";

     label22:
        return "Very Heavy Rain";

     label23:
        return "Extreme Rain";

     label24:
        return "Freezing Rain";

     label25:
        return "Light Intensity Shower Rain";

     label26:
        return "Shower Rain";

     label27:
        return "Heavy Intensity Shower Rain";

     label28:
        return "Light Snow";

     label29:
        return "Snow";

     label30:
        return "Heavy Snow";

     label31:
        return "Sleet";

     label32:
        return "Shower Snow";

     label33:
        return "Mist";

     label34:
        return "Smoke";

     label35:
        return "Haze";

     label36:
        return "Sand/Dust Whirls";

     label37:
        return "Fog";

     label38:
        return "Sky is Clear";

     label39:
        return "Few Clouds";

     label40:
        return "Scattered Clouds";

     label41:
        return "Broken Clouds";

     label42:
        return "Overcast Clouds";

     label43:
        return "Tornado";

     label44:
        return "Tropical Storm";

     label45:
        return "Hurricane";

     label46:
        return "Cold";

     label47:
        return "Hot";

     label48:
        return "Windy";

     label49:
        return "Hail";
    }

    public java.lang.String parseXML(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Exception $r0;
        java.io.IOException $r1;
        java.lang.String[] $r2, $r3, $r115, $r119, $r123, $r127, $r131, $r135, $r139, $r143, $r147, $r151, $r155, $r159, $r163, $r167, $r286, $r289, $r291, $r293, $r296, $r298, $r300, $r302, $r303, $r306, $r309, $r312, $r314, $r316, $r319, $r321, $r322, $r324, $r327, $r329, $r330, $r332, $r335, $r337, $r339, $r340, $r342, $r344, $r345, $r347, $r349;
        double $d0, $d1, $d2, $d3;
        java.lang.StringBuilder $r4, $r44, $r46, $r47, $r50, $r51, $r53, $r54, $r56, $r57, $r59, $r61, $r62, $r63, $r76, $r77, $r79, $r80, $r83, $r84, $r86, $r87, $r89, $r90, $r92, $r94, $r95, $r96, $r99, $r102, $r104, $r105, $r107, $r108, $r110, $r111, $r113, $r114, $r117, $r118, $r121, $r122, $r125, $r126, $r129, $r130, $r133, $r134, $r137, $r138, $r141, $r142, $r145, $r146, $r149, $r150, $r153, $r154, $r157, $r158, $r161, $r162, $r165, $r166, $r169, $r170, $r171, $r172, $r173, $r174, $r176, $r177, $r179, $r180, $r182, $r183, $r185, $r186, $r188, $r189, $r191, $r261, $r264, $r266, $r267, $r269, $r270, $r367, $r369, $r370, $r371, $r373, $r375, $r376, $r377;
        org.xmlpull.v1.XmlPullParser $r5, $r20, $r22, $r24, $r25, $r28, $r30, $r31, $r34, $r193, $r194, $r196, $r197, $r201, $r203, $r205, $r207, $r209, $r225, $r229, $r233, $r234, $r235, $r237, $r241, $r242, $r243, $r244, $r246, $r250, $r254, $r257, $r259, $r276, $r281, $r283, $r284, $r287, $r294, $r304, $r307, $r310, $r350, $r351, $r353, $r354, $r364, $r365;
        org.xmlpull.v1.XmlPullParserFactory $r6, $r17, $r18, $r19, $r23, $r29;
        java.io.StringReader $r7, $r26, $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27;
        java.util.StringTokenizer $r8, $r37, $r40, $r66, $r69, $r72, $r356, $r360;
        java.net.SocketTimeoutException $r9;
        org.xmlpull.v1.XmlPullParserException $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78;
        java.lang.String $r11, $r12, $r13, $r14, $r15, $r21, $r27, $r33, $r35, $r36, $r38, $r39, $r41, $r42, $r43, $r45, $r48, $r49, $r52, $r55, $r58, $r60, $r64, $r65, $r67, $r68, $r70, $r71, $r73, $r74, $r75, $r78, $r81, $r82, $r85, $r88, $r91, $r93, $r97, $r98, $r100, $r101, $r103, $r106, $r109, $r112, $r116, $r120, $r124, $r128, $r132, $r136, $r140, $r144, $r148, $r152, $r156, $r160, $r164, $r168, $r175, $r178, $r181, $r184, $r187, $r190, $r192, $r195, $r198, $r199, $r200, $r202, $r204, $r206, $r208, $r210, $r211, $r212, $r213, $r214, $r215, $r216, $r217, $r218, $r219, $r220, $r221, $r222, $r223, $r224, $r226, $r227, $r228, $r230, $r231, $r232, $r236, $r238, $r239, $r240, $r245, $r247, $r248, $r249, $r251, $r252, $r253, $r255, $r256, $r258, $r260, $r262, $r263, $r265, $r268, $r271, $r272, $r273, $r274, $r275, $r277, $r278, $r279, $r280, $r282, $r285, $r288, $r290, $r292, $r295, $r297, $r299, $r301, $r305, $r308, $r311, $r313, $r315, $r317, $r318, $r320, $r323, $r325, $r326, $r328, $r331, $r333, $r334, $r336, $r338, $r341, $r343, $r346, $r348, $r352, $r355, $r357, $r358, $r359, $r361, $r362, $r363, $r366, $r368, $r372, $r374, $r378;
        com.bobcares.BobsWeather.XMLFeedParser $r16;

        $r16 := @this: com.bobcares.BobsWeather.XMLFeedParser;

        $r11 := @parameter0: java.lang.String;

        $r12 := @parameter1: java.lang.String;

        $r13 := @parameter2: java.lang.String;

     label001:
        $r6 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParserFactory parserFactory> = $r6;

        $r17 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParserFactory parserFactoryFor5daysdata> = $r17;

        $r18 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParserFactory parserFactoryForTime> = $r18;

        virtualinvoke $r16.<com.bobcares.BobsWeather.XMLFeedParser: void fetchXMLFromUrl(java.lang.String,java.lang.String,java.lang.String)>($r11, $r12, $r13);

        $r19 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParserFactory parserFactory>;

        $r5 = virtualinvoke $r19.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label002:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser> = $r5;

        $r20 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r7 = new java.io.StringReader;

     label003:
        $r21 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String xmlData>;

        specialinvoke $r7.<java.io.StringReader: void <init>(java.lang.String)>($r21);

        interfaceinvoke $r20.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>($r7);

        $r22 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $i1 = interfaceinvoke $r22.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label004:
        $i0 = $i1;

     label005:
        if $i0 != 1 goto label089;

     label006:
        $r23 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParserFactory parserFactoryFor5daysdata>;

        $r24 = virtualinvoke $r23.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label007:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserFor5daysdata> = $r24;

        $r25 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserFor5daysdata>;

        $r26 = new java.io.StringReader;

     label008:
        $r27 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String forecastXMLData>;

        specialinvoke $r26.<java.io.StringReader: void <init>(java.lang.String)>($r27);

        interfaceinvoke $r25.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>($r26);

        $r28 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserFor5daysdata>;

        $i4 = interfaceinvoke $r28.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label009:
        $i5 = 0;

     label010:
        if $i4 != 1 goto label183;

     label011:
        $r29 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParserFactory parserFactoryForTime>;

        $r30 = virtualinvoke $r29.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label012:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserForTime> = $r30;

        $r31 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserForTime>;

        $r32 = new java.io.StringReader;

     label013:
        $r33 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String timeXMLData>;

        specialinvoke $r32.<java.io.StringReader: void <init>(java.lang.String)>($r33);

        interfaceinvoke $r31.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>($r32);

        $r34 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserForTime>;

        $i6 = interfaceinvoke $r34.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label014:
        if $i6 != 1 goto label236;

     label015:
        $r8 = new java.util.StringTokenizer;

     label016:
        $r35 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String sunriseTime>;

        specialinvoke $r8.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r35, "T");

        virtualinvoke $r8.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r36 = virtualinvoke $r8.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r37 = new java.util.StringTokenizer;

        specialinvoke $r37.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r36, ":");

        $r38 = virtualinvoke $r37.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r38);

        $r39 = virtualinvoke $r37.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r39);

     label017:
        $r40 = new java.util.StringTokenizer;

     label018:
        $r41 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String utcOffset>;

        specialinvoke $r40.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r41, ".");

        $r42 = virtualinvoke $r40.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r42);

        $r43 = virtualinvoke $r40.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r43);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(".");

        $r44 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r45);

     label019:
        $d1 = 60.0 * $d0;

        $i9 = (int) $d1;

        $i10 = $i7 + $i2;

        $z0 = 0;

        if $i10 >= 0 goto label020;

        $i10 = $i10 + 24;

     label020:
        if $i10 <= 24 goto label021;

        $i10 = $i10 + -24;

     label021:
        if $i10 <= 12 goto label022;

        $i10 = $i10 + -12;

        $z0 = 1;

     label022:
        $i11 = $i8 + $i9;

        $i12 = $i11 % 60;

        $i13 = $i11 / 60;

        $i14 = $i10 + $i13;

     label023:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

     label024:
        $r49 = $r48;

     label025:
        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r14 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

     label026:
        $r52 = $r14;

        if $i12 >= 10 goto label029;

     label027:
        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>(java.lang.String)>("0");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

     label028:
        $r52 = $r55;

     label029:
        if $i14 >= 10 goto label032;

     label030:
        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>(java.lang.String)>("0");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

     label031:
        $r49 = $r58;

     label032:
        if $z0 == 0 goto label249;

     label033:
        $r59 = new java.lang.StringBuilder;

        $r60 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r49);

        specialinvoke $r59.<java.lang.StringBuilder: void <init>(java.lang.String)>($r60);

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PM");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

     label034:
        $r65 = $r64;

     label035:
        $r66 = new java.util.StringTokenizer;

     label036:
        $r67 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String sunsetTime>;

        specialinvoke $r66.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r67, "T");

        virtualinvoke $r66.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r68 = virtualinvoke $r66.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r69 = new java.util.StringTokenizer;

        specialinvoke $r69.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r68, ":");

        $r70 = virtualinvoke $r69.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r70);

        $r71 = virtualinvoke $r69.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r71);

     label037:
        $z1 = 0;

     label038:
        $r72 = new java.util.StringTokenizer;

     label039:
        $r73 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String utcOffset>;

        specialinvoke $r72.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r73, ".");

        $r74 = virtualinvoke $r72.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r74);

        $r75 = virtualinvoke $r72.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r75);

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>(java.lang.String)>(".");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r78);

     label040:
        $d3 = 60.0 * $d2;

        $i19 = (int) $d3;

        $i20 = $i15 + $i17;

        if $i20 >= 0 goto label041;

        $i20 = $i20 + 24;

     label041:
        if $i20 <= 24 goto label042;

        $i20 = $i20 + -24;

     label042:
        if $i20 <= 12 goto label043;

        $i20 = $i20 + -12;

        $z1 = 1;

     label043:
        $i21 = $i16 + $i19;

        $i22 = $i21 % 60;

        $i23 = $i21 / 60;

        $i24 = $i20 + $i23;

     label044:
        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

     label045:
        $r82 = $r81;

     label046:
        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r15 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

     label047:
        $r85 = $r15;

        if $i22 >= 10 goto label050;

     label048:
        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>(java.lang.String)>("0");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

     label049:
        $r85 = $r88;

     label050:
        if $i24 >= 10 goto label053;

     label051:
        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>(java.lang.String)>("0");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

     label052:
        $r82 = $r91;

     label053:
        if $z1 == 0 goto label251;

     label054:
        $r92 = new java.lang.StringBuilder;

        $r93 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r82);

        specialinvoke $r92.<java.lang.StringBuilder: void <init>(java.lang.String)>($r93);

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PM");

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

     label055:
        $r98 = $r97;

     label056:
        $r99 = new java.lang.StringBuilder;

     label057:
        $r100 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String cityName>;

        $r101 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r100);

        specialinvoke $r99.<java.lang.StringBuilder: void <init>(java.lang.String)>($r101);

        $r102 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r103 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String weatherCondition>;

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r106 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String dayTime>;

        $r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106);

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label058:
        $r2 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] dates>;

     label059:
        $r109 = $r2[0];

        $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r112 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String temperatureInCelcius>;

        $r113 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r112);

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label060:
        $r115 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] maxTemperaturesCelcius>;

     label061:
        $r116 = $r115[0];

        $r117 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r116);

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label062:
        $r119 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] minTemperaturesCelcius>;

     label063:
        $r120 = $r119[0];

        $r121 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120);

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label064:
        $r123 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] maxTemperaturesCelcius>;

     label065:
        $r124 = $r123[1];

        $r125 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r124);

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label066:
        $r127 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] maxTemperaturesCelcius>;

     label067:
        $r128 = $r127[2];

        $r129 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r128);

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label068:
        $r131 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] maxTemperaturesCelcius>;

     label069:
        $r132 = $r131[3];

        $r133 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r132);

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label070:
        $r135 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] maxTemperaturesCelcius>;

     label071:
        $r136 = $r135[4];

        $r137 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r136);

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label072:
        $r139 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] minTemperaturesCelcius>;

     label073:
        $r140 = $r139[1];

        $r141 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r140);

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label074:
        $r143 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] minTemperaturesCelcius>;

     label075:
        $r144 = $r143[2];

        $r145 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r144);

        $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label076:
        $r147 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] minTemperaturesCelcius>;

     label077:
        $r148 = $r147[3];

        $r149 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r148);

        $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label078:
        $r151 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] minTemperaturesCelcius>;

     label079:
        $r152 = $r151[4];

        $r153 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r152);

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label080:
        $r155 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] weatherConditions>;

     label081:
        $r156 = $r155[1];

        $r157 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r156);

        $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label082:
        $r159 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] weatherConditions>;

     label083:
        $r160 = $r159[2];

        $r161 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r160);

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label084:
        $r163 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] weatherConditions>;

     label085:
        $r164 = $r163[3];

        $r165 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r164);

        $r166 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label086:
        $r167 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] weatherConditions>;

     label087:
        $r168 = $r167[4];

        $r169 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r168);

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r172 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r175 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String humidityPercentage>;

        $r176 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r175);

        $r177 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r178 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String pressureInhPa>;

        $r179 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r178);

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r181 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String windSpeedInmps>;

        $r182 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r181);

        $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r184 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String windDirection>;

        $r185 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r184);

        $r186 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r187 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String cloudsPercentage>;

        $r188 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r187);

        $r189 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r190 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationInfo>;

        $r191 = virtualinvoke $r189.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r190);

        $r192 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.String toString()>();

     label088:
        return $r192;

     label089:
        lookupswitch($i0)
        {
            case 0: goto label090;
            case 1: goto label090;
            case 2: goto label092;
            default: goto label090;
        };

     label090:
        $r193 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $i25 = interfaceinvoke $r193.<org.xmlpull.v1.XmlPullParser: int next()>();

     label091:
        $i0 = $i25;

        goto label005;

     label092:
        $r194 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r195 = interfaceinvoke $r194.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r195.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("current");

        if $z2 != 0 goto label090;

        $z3 = virtualinvoke $r195.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("country");

        if $z3 == 0 goto label098;

        $r196 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        interfaceinvoke $r196.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r197 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r198 = interfaceinvoke $r197.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label093:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String countryName> = $r198;

        $r199 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String countryName>;

        if $r199 == null goto label096;

     label094:
        $r200 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String countryName>;

        $i26 = virtualinvoke $r200.<java.lang.String: int length()>();

     label095:
        if $i26 != 0 goto label090;

     label096:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String countryName> = "Not Available";

        goto label090;

     label097:
        $r10 := @caughtexception;

        return null;

     label098:
        $z4 = virtualinvoke $r195.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sun");

        if $z4 == 0 goto label103;

        $r201 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r202 = interfaceinvoke $r201.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "rise");

     label099:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String sunriseTime> = $r202;

     label100:
        $r203 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r204 = interfaceinvoke $r203.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "set");

     label101:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String sunsetTime> = $r204;

        goto label090;

     label102:
        $r9 := @caughtexception;

        return null;

     label103:
        $z5 = virtualinvoke $r195.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("temperature");

        if $z5 == 0 goto label126;

        $r205 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r206 = interfaceinvoke $r205.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

     label104:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String temperatureInCelcius> = $r206;

     label105:
        $r207 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r208 = interfaceinvoke $r207.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "max");

     label106:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String tempMaxInCelcius> = $r208;

     label107:
        $r209 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r210 = interfaceinvoke $r209.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "min");

     label108:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String tempMinInCelcius> = $r210;

     label109:
        $r211 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String temperatureInCelcius>;

        $z6 = virtualinvoke $r211.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

     label110:
        if $z6 == 0 goto label113;

        $r212 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String temperatureInCelcius>;

     label111:
        $r213 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String temperatureInCelcius>;

        $i27 = virtualinvoke $r213.<java.lang.String: int indexOf(java.lang.String)>(".");

        $r214 = virtualinvoke $r212.<java.lang.String: java.lang.String substring(int,int)>(0, $i27);

     label112:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String temperatureInCelcius> = $r214;

     label113:
        $r215 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String tempMaxInCelcius>;

        $z7 = virtualinvoke $r215.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

     label114:
        if $z7 == 0 goto label117;

        $r216 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String tempMaxInCelcius>;

     label115:
        $r217 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String tempMaxInCelcius>;

        $i28 = virtualinvoke $r217.<java.lang.String: int indexOf(java.lang.String)>(".");

        $r218 = virtualinvoke $r216.<java.lang.String: java.lang.String substring(int,int)>(0, $i28);

     label116:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String tempMaxInCelcius> = $r218;

     label117:
        $r219 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String tempMinInCelcius>;

        $z8 = virtualinvoke $r219.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

     label118:
        if $z8 == 0 goto label121;

        $r220 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String tempMinInCelcius>;

     label119:
        $r221 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String tempMinInCelcius>;

        $i29 = virtualinvoke $r221.<java.lang.String: int indexOf(java.lang.String)>(".");

        $r222 = virtualinvoke $r220.<java.lang.String: java.lang.String substring(int,int)>(0, $i29);

     label120:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String tempMinInCelcius> = $r222;

     label121:
        $r223 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String temperatureInCelcius>;

        if $r223 == null goto label124;

     label122:
        $r224 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String temperatureInCelcius>;

        $i30 = virtualinvoke $r224.<java.lang.String: int length()>();

     label123:
        if $i30 != 0 goto label090;

     label124:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String temperatureInCelcius> = "Not Available";

        goto label090;

     label125:
        $r1 := @caughtexception;

        return null;

     label126:
        $z9 = virtualinvoke $r195.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("humidity");

        if $z9 == 0 goto label133;

        $r225 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r226 = interfaceinvoke $r225.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

     label127:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String humidityPercentage> = $r226;

        $r227 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String humidityPercentage>;

        if $r227 == null goto label130;

     label128:
        $r228 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String humidityPercentage>;

        $i31 = virtualinvoke $r228.<java.lang.String: int length()>();

     label129:
        if $i31 != 0 goto label090;

     label130:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String humidityPercentage> = "Not Available";

     label131:
        goto label090;

     label132:
        $r0 := @caughtexception;

        virtualinvoke $r0.<java.lang.Exception: void printStackTrace()>();

        return null;

     label133:
        $z10 = virtualinvoke $r195.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("pressure");

        if $z10 == 0 goto label138;

        $r229 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r230 = interfaceinvoke $r229.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

     label134:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String pressureInhPa> = $r230;

        $r231 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String pressureInhPa>;

        if $r231 == null goto label137;

     label135:
        $r232 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String pressureInhPa>;

        $i32 = virtualinvoke $r232.<java.lang.String: int length()>();

     label136:
        if $i32 != 0 goto label090;

     label137:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String pressureInhPa> = "Not Available";

        goto label090;

     label138:
        $z11 = virtualinvoke $r195.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("wind");

        if $z11 == 0 goto label152;

        $r233 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        interfaceinvoke $r233.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r234 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        interfaceinvoke $r234.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r235 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r236 = interfaceinvoke $r235.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z12 = virtualinvoke $r236.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("speed");

     label139:
        if $z12 == 0 goto label145;

     label140:
        $r237 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r238 = interfaceinvoke $r237.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

     label141:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String windSpeedInmps> = $r238;

        $r239 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String windSpeedInmps>;

        if $r239 == null goto label144;

     label142:
        $r240 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String windSpeedInmps>;

        $i33 = virtualinvoke $r240.<java.lang.String: int length()>();

     label143:
        if $i33 != 0 goto label145;

     label144:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String windSpeedInmps> = "Not Available";

     label145:
        $r241 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        interfaceinvoke $r241.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r242 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        interfaceinvoke $r242.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r243 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        interfaceinvoke $r243.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r244 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r245 = interfaceinvoke $r244.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z13 = virtualinvoke $r245.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("direction");

     label146:
        if $z13 == 0 goto label090;

     label147:
        $r246 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r247 = interfaceinvoke $r246.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label148:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String windDirection> = $r247;

        $r248 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String windDirection>;

        if $r248 == null goto label151;

     label149:
        $r249 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String windDirection>;

        $i34 = virtualinvoke $r249.<java.lang.String: int length()>();

     label150:
        if $i34 != 0 goto label090;

     label151:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String windDirection> = "Not Available";

        goto label090;

     label152:
        $z14 = virtualinvoke $r195.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("clouds");

        if $z14 == 0 goto label157;

        $r250 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r251 = interfaceinvoke $r250.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

     label153:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String cloudsPercentage> = $r251;

        $r252 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String cloudsPercentage>;

        if $r252 == null goto label156;

     label154:
        $r253 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String cloudsPercentage>;

        $i35 = virtualinvoke $r253.<java.lang.String: int length()>();

     label155:
        if $i35 != 0 goto label090;

     label156:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String cloudsPercentage> = "Not Available";

        goto label090;

     label157:
        $z15 = virtualinvoke $r195.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("precipitation");

        if $z15 == 0 goto label172;

        $r254 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r255 = interfaceinvoke $r254.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "mode");

     label158:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationMode> = $r255;

     label159:
        $r256 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationMode>;

        $z16 = virtualinvoke $r256.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("no");

     label160:
        if $z16 == 0 goto label161;

        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationInfo> = "No Precipitation";

        goto label090;

     label161:
        $r257 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r258 = interfaceinvoke $r257.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

     label162:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationValue> = $r258;

     label163:
        $r259 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r260 = interfaceinvoke $r259.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "unit");

     label164:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationUnit> = $r260;

        $r261 = new java.lang.StringBuilder;

     label165:
        $r262 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationMode>;

        $r263 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r262);

        specialinvoke $r261.<java.lang.StringBuilder: void <init>(java.lang.String)>($r263);

        $r264 = virtualinvoke $r261.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r265 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationValue>;

        $r266 = virtualinvoke $r264.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r265);

        $r267 = virtualinvoke $r266.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mm/");

        $r268 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationUnit>;

        $r269 = virtualinvoke $r267.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r268);

        $r270 = virtualinvoke $r269.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r271 = virtualinvoke $r270.<java.lang.StringBuilder: java.lang.String toString()>();

     label166:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationInfo> = $r271;

        $r272 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationValue>;

        if $r272 == null goto label171;

     label167:
        $r273 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationValue>;

        $i36 = virtualinvoke $r273.<java.lang.String: int length()>();

     label168:
        if $i36 == 0 goto label171;

        $r274 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationUnit>;

        if $r274 == null goto label171;

     label169:
        $r275 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationUnit>;

        $i37 = virtualinvoke $r275.<java.lang.String: int length()>();

     label170:
        if $i37 != 0 goto label090;

     label171:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String precipitationInfo> = "Not Available";

        goto label090;

     label172:
        $z17 = virtualinvoke $r195.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("weather");

        if $z17 == 0 goto label179;

        $r276 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r277 = interfaceinvoke $r276.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "number");

        $r278 = virtualinvoke $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String makeWeatherConditionString(java.lang.String)>($r277);

     label173:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String weatherCondition> = $r278;

     label174:
        if $r277 == null goto label178;

        $i38 = virtualinvoke $r277.<java.lang.String: int length()>();

     label175:
        if $i38 == 0 goto label178;

        $r279 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String weatherCondition>;

        if $r279 == null goto label178;

     label176:
        $r280 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String weatherCondition>;

        $i39 = virtualinvoke $r280.<java.lang.String: int length()>();

     label177:
        if $i39 != 0 goto label090;

     label178:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String weatherCondition> = "Weather Not Available";

        goto label090;

     label179:
        $z18 = virtualinvoke $r195.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lastupdate");

     label180:
        if $z18 == 0 goto label090;

     label181:
        $r281 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parser>;

        $r282 = interfaceinvoke $r281.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

     label182:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String lastUpdate> = $r282;

        goto label090;

     label183:
        lookupswitch($i4)
        {
            case 0: goto label184;
            case 1: goto label184;
            case 2: goto label186;
            default: goto label184;
        };

     label184:
        $r283 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserFor5daysdata>;

        $i40 = interfaceinvoke $r283.<org.xmlpull.v1.XmlPullParser: int next()>();

     label185:
        $i4 = $i40;

        goto label010;

     label186:
        $r284 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserFor5daysdata>;

        $r285 = interfaceinvoke $r284.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z19 = virtualinvoke $r285.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("weatherdata");

        if $z19 != 0 goto label184;

        $z20 = virtualinvoke $r285.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("time");

        if $z20 == 0 goto label195;

     label187:
        $r286 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] dates>;

     label188:
        $r287 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserFor5daysdata>;

        $r288 = interfaceinvoke $r287.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "day");

     label189:
        $r286[$i5] = $r288;

        $r289 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] dates>;

        $r290 = $r289[$i5];

        if $r290 == null goto label192;

        $r291 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] dates>;

     label190:
        $r292 = $r291[$i5];

        $i41 = virtualinvoke $r292.<java.lang.String: int length()>();

     label191:
        if $i41 != 0 goto label193;

     label192:
        $r293 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] dates>;

        $r293[$i5] = "Not Available";

     label193:
        $i5 = $i5 + 1;

     label194:
        goto label184;

     label195:
        $z21 = virtualinvoke $r285.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("symbol");

        if $z21 == 0 goto label202;

        $r294 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserFor5daysdata>;

        $r295 = interfaceinvoke $r294.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "number");

     label196:
        $r296 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] weatherConditions>;

     label197:
        $i42 = $i5 + -1;

        $r297 = virtualinvoke $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String makeWeatherConditionString(java.lang.String)>($r295);

     label198:
        $r296[$i42] = $r297;

        $r298 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] weatherConditions>;

        $i43 = $i5 + -1;

        $r299 = $r298[$i43];

        if $r299 == null goto label201;

        $r300 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] weatherConditions>;

        $i44 = $i5 + -1;

     label199:
        $r301 = $r300[$i44];

        $i45 = virtualinvoke $r301.<java.lang.String: int length()>();

     label200:
        if $i45 != 0 goto label184;

     label201:
        $r302 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] weatherConditions>;

        $i46 = $i5 + -1;

        $r302[$i46] = "Not Available";

        goto label184;

     label202:
        $z22 = virtualinvoke $r285.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("temperature");

     label203:
        if $z22 == 0 goto label184;

        $r303 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] temperaturesCelcius>;

        $i47 = $i5 + -1;

     label204:
        $r304 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserFor5daysdata>;

        $r305 = interfaceinvoke $r304.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "day");

     label205:
        $r303[$i47] = $r305;

        $r306 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] minTemperaturesCelcius>;

        $i48 = $i5 + -1;

     label206:
        $r307 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserFor5daysdata>;

        $r308 = interfaceinvoke $r307.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "min");

     label207:
        $r306[$i48] = $r308;

        $r309 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] maxTemperaturesCelcius>;

        $i49 = $i5 + -1;

     label208:
        $r310 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserFor5daysdata>;

        $r311 = interfaceinvoke $r310.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "max");

     label209:
        $r309[$i49] = $r311;

        $r312 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] temperaturesCelcius>;

        $i50 = $i5 + -1;

     label210:
        $r313 = $r312[$i50];

        $z23 = virtualinvoke $r313.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

     label211:
        if $z23 == 0 goto label214;

        $r314 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] temperaturesCelcius>;

        $i51 = $i5 + -1;

        $r3 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] temperaturesCelcius>;

        $i52 = $i5 + -1;

        $r315 = $r3[$i52];

        $r316 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] temperaturesCelcius>;

        $i53 = $i5 + -1;

     label212:
        $r317 = $r316[$i53];

        $i54 = virtualinvoke $r317.<java.lang.String: int indexOf(java.lang.String)>(".");

        $r318 = virtualinvoke $r315.<java.lang.String: java.lang.String substring(int,int)>(0, $i54);

     label213:
        $r314[$i51] = $r318;

     label214:
        $r319 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] minTemperaturesCelcius>;

        $i55 = $i5 + -1;

     label215:
        $r320 = $r319[$i55];

        $z24 = virtualinvoke $r320.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

     label216:
        if $z24 == 0 goto label219;

        $r321 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] minTemperaturesCelcius>;

        $i56 = $i5 + -1;

        $r322 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] minTemperaturesCelcius>;

        $i57 = $i5 + -1;

        $r323 = $r322[$i57];

        $r324 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] minTemperaturesCelcius>;

        $i58 = $i5 + -1;

     label217:
        $r325 = $r324[$i58];

        $i59 = virtualinvoke $r325.<java.lang.String: int indexOf(java.lang.String)>(".");

        $r326 = virtualinvoke $r323.<java.lang.String: java.lang.String substring(int,int)>(0, $i59);

     label218:
        $r321[$i56] = $r326;

     label219:
        $r327 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] maxTemperaturesCelcius>;

        $i60 = $i5 + -1;

     label220:
        $r328 = $r327[$i60];

        $z25 = virtualinvoke $r328.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

     label221:
        if $z25 == 0 goto label224;

        $r329 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] maxTemperaturesCelcius>;

        $i61 = $i5 + -1;

        $r330 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] maxTemperaturesCelcius>;

        $i62 = $i5 + -1;

        $r331 = $r330[$i62];

        $r332 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] maxTemperaturesCelcius>;

        $i63 = $i5 + -1;

     label222:
        $r333 = $r332[$i63];

        $i64 = virtualinvoke $r333.<java.lang.String: int indexOf(java.lang.String)>(".");

        $r334 = virtualinvoke $r331.<java.lang.String: java.lang.String substring(int,int)>(0, $i64);

     label223:
        $r329[$i61] = $r334;

     label224:
        $r335 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] temperaturesCelcius>;

        $i65 = $i5 + -1;

        $r336 = $r335[$i65];

        if $r336 == null goto label227;

        $r337 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] temperaturesCelcius>;

        $i66 = $i5 + -1;

     label225:
        $r338 = $r337[$i66];

        $i67 = virtualinvoke $r338.<java.lang.String: int length()>();

     label226:
        if $i67 != 0 goto label228;

     label227:
        $r339 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] temperaturesCelcius>;

        $i68 = $i5 + -1;

        $r339[$i68] = "Not Available";

     label228:
        $r340 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] minTemperaturesCelcius>;

        $i69 = $i5 + -1;

        $r341 = $r340[$i69];

        if $r341 == null goto label231;

        $r342 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] minTemperaturesCelcius>;

        $i70 = $i5 + -1;

     label229:
        $r343 = $r342[$i70];

        $i71 = virtualinvoke $r343.<java.lang.String: int length()>();

     label230:
        if $i71 != 0 goto label232;

     label231:
        $r344 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] minTemperaturesCelcius>;

        $i72 = $i5 + -1;

        $r344[$i72] = "Not Available";

     label232:
        $r345 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] maxTemperaturesCelcius>;

        $i73 = $i5 + -1;

        $r346 = $r345[$i73];

        if $r346 == null goto label235;

        $r347 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] maxTemperaturesCelcius>;

        $i74 = $i5 + -1;

     label233:
        $r348 = $r347[$i74];

        $i75 = virtualinvoke $r348.<java.lang.String: int length()>();

     label234:
        if $i75 != 0 goto label184;

     label235:
        $r349 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String[] maxTemperaturesCelcius>;

        $i76 = $i5 + -1;

        $r349[$i76] = "Not Available";

        goto label184;

     label236:
        lookupswitch($i6)
        {
            case 0: goto label237;
            case 1: goto label237;
            case 2: goto label239;
            default: goto label237;
        };

     label237:
        $r350 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserForTime>;

        $i77 = interfaceinvoke $r350.<org.xmlpull.v1.XmlPullParser: int next()>();

     label238:
        $i6 = $i77;

        goto label014;

     label239:
        $r351 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserForTime>;

        $r352 = interfaceinvoke $r351.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z26 = virtualinvoke $r352.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("localtime");

        if $z26 == 0 goto label245;

        $r353 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserForTime>;

        interfaceinvoke $r353.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r354 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserForTime>;

        $r355 = interfaceinvoke $r354.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label240:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String localTime> = $r355;

        $r356 = new java.util.StringTokenizer;

     label241:
        $r357 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String localTime>;

        specialinvoke $r356.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r357, " ");

        $r358 = virtualinvoke $r356.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String date> = $r358;

        $r359 = virtualinvoke $r356.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label242:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String time> = $r359;

        $r360 = new java.util.StringTokenizer;

     label243:
        $r361 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String time>;

        specialinvoke $r360.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r361, ":");

        $r362 = virtualinvoke $r360.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i78 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r362);

        $r363 = virtualinvoke $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String findCondition(int)>($i78);

     label244:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String dayTime> = $r363;

        goto label237;

     label245:
        $z27 = virtualinvoke $r352.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("utcOffset");

     label246:
        if $z27 == 0 goto label237;

     label247:
        $r364 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserForTime>;

        interfaceinvoke $r364.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r365 = $r16.<com.bobcares.BobsWeather.XMLFeedParser: org.xmlpull.v1.XmlPullParser parserForTime>;

        $r366 = interfaceinvoke $r365.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label248:
        $r16.<com.bobcares.BobsWeather.XMLFeedParser: java.lang.String utcOffset> = $r366;

        goto label237;

     label249:
        $r367 = new java.lang.StringBuilder;

        $r368 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r49);

        specialinvoke $r367.<java.lang.StringBuilder: void <init>(java.lang.String)>($r368);

        $r369 = virtualinvoke $r367.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r370 = virtualinvoke $r369.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r371 = virtualinvoke $r370.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AM");

        $r372 = virtualinvoke $r371.<java.lang.StringBuilder: java.lang.String toString()>();

     label250:
        $r65 = $r372;

        goto label035;

     label251:
        $r373 = new java.lang.StringBuilder;

        $r374 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r82);

        specialinvoke $r373.<java.lang.StringBuilder: void <init>(java.lang.String)>($r374);

        $r375 = virtualinvoke $r373.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r376 = virtualinvoke $r375.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r377 = virtualinvoke $r376.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AM");

        $r378 = virtualinvoke $r377.<java.lang.StringBuilder: java.lang.String toString()>();

     label252:
        $r98 = $r378;

        goto label056;

        catch org.xmlpull.v1.XmlPullParserException from label001 to label002 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label003 to label004 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label006 to label007 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label008 to label009 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label011 to label012 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label013 to label014 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label016 to label017 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label018 to label019 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label023 to label024 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label025 to label026 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label027 to label028 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label030 to label031 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label033 to label034 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label036 to label037 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label039 to label040 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label044 to label045 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label046 to label047 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label048 to label049 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label051 to label052 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label054 to label055 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label057 to label058 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label059 to label060 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label061 to label062 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label063 to label064 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label065 to label066 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label067 to label068 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label069 to label070 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label071 to label072 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label073 to label074 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label075 to label076 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label077 to label078 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label079 to label080 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label081 to label082 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label083 to label084 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label085 to label086 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label087 to label088 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label090 to label091 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label092 to label093 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label094 to label095 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label098 to label099 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label100 to label101 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label103 to label104 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label105 to label106 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label107 to label108 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label109 to label110 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label111 to label112 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label113 to label114 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label115 to label116 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label117 to label118 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label119 to label120 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label122 to label123 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label126 to label127 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label128 to label129 with label097;
        catch java.net.SocketTimeoutException from label001 to label002 with label102;
        catch java.net.SocketTimeoutException from label003 to label004 with label102;
        catch java.net.SocketTimeoutException from label006 to label007 with label102;
        catch java.net.SocketTimeoutException from label008 to label009 with label102;
        catch java.net.SocketTimeoutException from label011 to label012 with label102;
        catch java.net.SocketTimeoutException from label013 to label014 with label102;
        catch java.net.SocketTimeoutException from label016 to label017 with label102;
        catch java.net.SocketTimeoutException from label018 to label019 with label102;
        catch java.net.SocketTimeoutException from label023 to label024 with label102;
        catch java.net.SocketTimeoutException from label025 to label026 with label102;
        catch java.net.SocketTimeoutException from label027 to label028 with label102;
        catch java.net.SocketTimeoutException from label030 to label031 with label102;
        catch java.net.SocketTimeoutException from label033 to label034 with label102;
        catch java.net.SocketTimeoutException from label036 to label037 with label102;
        catch java.net.SocketTimeoutException from label039 to label040 with label102;
        catch java.net.SocketTimeoutException from label044 to label045 with label102;
        catch java.net.SocketTimeoutException from label046 to label047 with label102;
        catch java.net.SocketTimeoutException from label048 to label049 with label102;
        catch java.net.SocketTimeoutException from label051 to label052 with label102;
        catch java.net.SocketTimeoutException from label054 to label055 with label102;
        catch java.net.SocketTimeoutException from label057 to label058 with label102;
        catch java.net.SocketTimeoutException from label059 to label060 with label102;
        catch java.net.SocketTimeoutException from label061 to label062 with label102;
        catch java.net.SocketTimeoutException from label063 to label064 with label102;
        catch java.net.SocketTimeoutException from label065 to label066 with label102;
        catch java.net.SocketTimeoutException from label067 to label068 with label102;
        catch java.net.SocketTimeoutException from label069 to label070 with label102;
        catch java.net.SocketTimeoutException from label071 to label072 with label102;
        catch java.net.SocketTimeoutException from label073 to label074 with label102;
        catch java.net.SocketTimeoutException from label075 to label076 with label102;
        catch java.net.SocketTimeoutException from label077 to label078 with label102;
        catch java.net.SocketTimeoutException from label079 to label080 with label102;
        catch java.net.SocketTimeoutException from label081 to label082 with label102;
        catch java.net.SocketTimeoutException from label083 to label084 with label102;
        catch java.net.SocketTimeoutException from label085 to label086 with label102;
        catch java.net.SocketTimeoutException from label087 to label088 with label102;
        catch java.net.SocketTimeoutException from label090 to label091 with label102;
        catch java.net.SocketTimeoutException from label092 to label093 with label102;
        catch java.net.SocketTimeoutException from label094 to label095 with label102;
        catch java.net.SocketTimeoutException from label098 to label099 with label102;
        catch java.net.SocketTimeoutException from label100 to label101 with label102;
        catch java.net.SocketTimeoutException from label103 to label104 with label102;
        catch java.net.SocketTimeoutException from label105 to label106 with label102;
        catch java.net.SocketTimeoutException from label107 to label108 with label102;
        catch java.net.SocketTimeoutException from label109 to label110 with label102;
        catch java.net.SocketTimeoutException from label111 to label112 with label102;
        catch java.net.SocketTimeoutException from label113 to label114 with label102;
        catch java.net.SocketTimeoutException from label115 to label116 with label102;
        catch java.net.SocketTimeoutException from label117 to label118 with label102;
        catch java.net.SocketTimeoutException from label119 to label120 with label102;
        catch java.net.SocketTimeoutException from label122 to label123 with label102;
        catch java.net.SocketTimeoutException from label126 to label127 with label102;
        catch java.net.SocketTimeoutException from label128 to label129 with label102;
        catch java.io.IOException from label001 to label002 with label125;
        catch java.io.IOException from label003 to label004 with label125;
        catch java.io.IOException from label006 to label007 with label125;
        catch java.io.IOException from label008 to label009 with label125;
        catch java.io.IOException from label011 to label012 with label125;
        catch java.io.IOException from label013 to label014 with label125;
        catch java.io.IOException from label016 to label017 with label125;
        catch java.io.IOException from label018 to label019 with label125;
        catch java.io.IOException from label023 to label024 with label125;
        catch java.io.IOException from label025 to label026 with label125;
        catch java.io.IOException from label027 to label028 with label125;
        catch java.io.IOException from label030 to label031 with label125;
        catch java.io.IOException from label033 to label034 with label125;
        catch java.io.IOException from label036 to label037 with label125;
        catch java.io.IOException from label039 to label040 with label125;
        catch java.io.IOException from label044 to label045 with label125;
        catch java.io.IOException from label046 to label047 with label125;
        catch java.io.IOException from label048 to label049 with label125;
        catch java.io.IOException from label051 to label052 with label125;
        catch java.io.IOException from label054 to label055 with label125;
        catch java.io.IOException from label057 to label058 with label125;
        catch java.io.IOException from label059 to label060 with label125;
        catch java.io.IOException from label061 to label062 with label125;
        catch java.io.IOException from label063 to label064 with label125;
        catch java.io.IOException from label065 to label066 with label125;
        catch java.io.IOException from label067 to label068 with label125;
        catch java.io.IOException from label069 to label070 with label125;
        catch java.io.IOException from label071 to label072 with label125;
        catch java.io.IOException from label073 to label074 with label125;
        catch java.io.IOException from label075 to label076 with label125;
        catch java.io.IOException from label077 to label078 with label125;
        catch java.io.IOException from label079 to label080 with label125;
        catch java.io.IOException from label081 to label082 with label125;
        catch java.io.IOException from label083 to label084 with label125;
        catch java.io.IOException from label085 to label086 with label125;
        catch java.io.IOException from label087 to label088 with label125;
        catch java.io.IOException from label090 to label091 with label125;
        catch java.io.IOException from label092 to label093 with label125;
        catch java.io.IOException from label094 to label095 with label125;
        catch java.io.IOException from label098 to label099 with label125;
        catch java.io.IOException from label100 to label101 with label125;
        catch java.io.IOException from label103 to label104 with label125;
        catch java.io.IOException from label105 to label106 with label125;
        catch java.io.IOException from label107 to label108 with label125;
        catch java.io.IOException from label109 to label110 with label125;
        catch java.io.IOException from label111 to label112 with label125;
        catch java.io.IOException from label113 to label114 with label125;
        catch java.io.IOException from label115 to label116 with label125;
        catch java.io.IOException from label117 to label118 with label125;
        catch java.io.IOException from label119 to label120 with label125;
        catch java.io.IOException from label122 to label123 with label125;
        catch java.io.IOException from label126 to label127 with label125;
        catch java.io.IOException from label128 to label129 with label125;
        catch java.lang.Exception from label001 to label004 with label132;
        catch java.lang.Exception from label005 to label009 with label132;
        catch java.lang.Exception from label010 to label014 with label132;
        catch java.lang.Exception from label015 to label019 with label132;
        catch java.lang.Exception from label023 to label024 with label132;
        catch java.lang.Exception from label025 to label026 with label132;
        catch java.lang.Exception from label027 to label028 with label132;
        catch java.lang.Exception from label030 to label031 with label132;
        catch java.lang.Exception from label033 to label034 with label132;
        catch java.lang.Exception from label035 to label037 with label132;
        catch java.lang.Exception from label038 to label040 with label132;
        catch java.lang.Exception from label044 to label045 with label132;
        catch java.lang.Exception from label046 to label047 with label132;
        catch java.lang.Exception from label048 to label049 with label132;
        catch java.lang.Exception from label051 to label052 with label132;
        catch java.lang.Exception from label054 to label055 with label132;
        catch java.lang.Exception from label056 to label088 with label132;
        catch java.lang.Exception from label089 to label091 with label132;
        catch java.lang.Exception from label092 to label097 with label132;
        catch java.lang.Exception from label098 to label102 with label132;
        catch java.lang.Exception from label103 to label125 with label132;
        catch java.lang.Exception from label126 to label131 with label132;
        catch org.xmlpull.v1.XmlPullParserException from label133 to label134 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label135 to label136 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label138 to label139 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label140 to label141 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label142 to label143 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label145 to label146 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label147 to label148 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label149 to label150 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label152 to label153 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label154 to label155 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label157 to label158 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label159 to label160 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label161 to label162 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label163 to label164 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label165 to label166 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label167 to label168 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label169 to label170 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label172 to label173 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label174 to label175 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label176 to label177 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label179 to label180 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label181 to label182 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label184 to label185 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label186 to label187 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label188 to label189 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label190 to label191 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label195 to label196 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label197 to label198 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label199 to label200 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label202 to label203 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label204 to label205 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label206 to label207 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label208 to label209 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label210 to label211 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label212 to label213 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label215 to label216 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label217 to label218 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label220 to label221 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label222 to label223 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label225 to label226 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label229 to label230 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label233 to label234 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label237 to label238 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label239 to label240 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label241 to label242 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label243 to label244 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label245 to label246 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label247 to label248 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label249 to label250 with label097;
        catch org.xmlpull.v1.XmlPullParserException from label251 to label252 with label097;
        catch java.net.SocketTimeoutException from label133 to label134 with label102;
        catch java.net.SocketTimeoutException from label135 to label136 with label102;
        catch java.net.SocketTimeoutException from label138 to label139 with label102;
        catch java.net.SocketTimeoutException from label140 to label141 with label102;
        catch java.net.SocketTimeoutException from label142 to label143 with label102;
        catch java.net.SocketTimeoutException from label145 to label146 with label102;
        catch java.net.SocketTimeoutException from label147 to label148 with label102;
        catch java.net.SocketTimeoutException from label149 to label150 with label102;
        catch java.net.SocketTimeoutException from label152 to label153 with label102;
        catch java.net.SocketTimeoutException from label154 to label155 with label102;
        catch java.net.SocketTimeoutException from label157 to label158 with label102;
        catch java.net.SocketTimeoutException from label159 to label160 with label102;
        catch java.net.SocketTimeoutException from label161 to label162 with label102;
        catch java.net.SocketTimeoutException from label163 to label164 with label102;
        catch java.net.SocketTimeoutException from label165 to label166 with label102;
        catch java.net.SocketTimeoutException from label167 to label168 with label102;
        catch java.net.SocketTimeoutException from label169 to label170 with label102;
        catch java.net.SocketTimeoutException from label172 to label173 with label102;
        catch java.net.SocketTimeoutException from label174 to label175 with label102;
        catch java.net.SocketTimeoutException from label176 to label177 with label102;
        catch java.net.SocketTimeoutException from label179 to label180 with label102;
        catch java.net.SocketTimeoutException from label181 to label182 with label102;
        catch java.net.SocketTimeoutException from label184 to label185 with label102;
        catch java.net.SocketTimeoutException from label186 to label187 with label102;
        catch java.net.SocketTimeoutException from label188 to label189 with label102;
        catch java.net.SocketTimeoutException from label190 to label191 with label102;
        catch java.net.SocketTimeoutException from label195 to label196 with label102;
        catch java.net.SocketTimeoutException from label197 to label198 with label102;
        catch java.net.SocketTimeoutException from label199 to label200 with label102;
        catch java.net.SocketTimeoutException from label202 to label203 with label102;
        catch java.net.SocketTimeoutException from label204 to label205 with label102;
        catch java.net.SocketTimeoutException from label206 to label207 with label102;
        catch java.net.SocketTimeoutException from label208 to label209 with label102;
        catch java.net.SocketTimeoutException from label210 to label211 with label102;
        catch java.net.SocketTimeoutException from label212 to label213 with label102;
        catch java.net.SocketTimeoutException from label215 to label216 with label102;
        catch java.net.SocketTimeoutException from label217 to label218 with label102;
        catch java.net.SocketTimeoutException from label220 to label221 with label102;
        catch java.net.SocketTimeoutException from label222 to label223 with label102;
        catch java.net.SocketTimeoutException from label225 to label226 with label102;
        catch java.net.SocketTimeoutException from label229 to label230 with label102;
        catch java.net.SocketTimeoutException from label233 to label234 with label102;
        catch java.net.SocketTimeoutException from label237 to label238 with label102;
        catch java.net.SocketTimeoutException from label239 to label240 with label102;
        catch java.net.SocketTimeoutException from label241 to label242 with label102;
        catch java.net.SocketTimeoutException from label243 to label244 with label102;
        catch java.net.SocketTimeoutException from label245 to label246 with label102;
        catch java.net.SocketTimeoutException from label247 to label248 with label102;
        catch java.net.SocketTimeoutException from label249 to label250 with label102;
        catch java.net.SocketTimeoutException from label251 to label252 with label102;
        catch java.io.IOException from label133 to label134 with label125;
        catch java.io.IOException from label135 to label136 with label125;
        catch java.io.IOException from label138 to label139 with label125;
        catch java.io.IOException from label140 to label141 with label125;
        catch java.io.IOException from label142 to label143 with label125;
        catch java.io.IOException from label145 to label146 with label125;
        catch java.io.IOException from label147 to label148 with label125;
        catch java.io.IOException from label149 to label150 with label125;
        catch java.io.IOException from label152 to label153 with label125;
        catch java.io.IOException from label154 to label155 with label125;
        catch java.io.IOException from label157 to label158 with label125;
        catch java.io.IOException from label159 to label160 with label125;
        catch java.io.IOException from label161 to label162 with label125;
        catch java.io.IOException from label163 to label164 with label125;
        catch java.io.IOException from label165 to label166 with label125;
        catch java.io.IOException from label167 to label168 with label125;
        catch java.io.IOException from label169 to label170 with label125;
        catch java.io.IOException from label172 to label173 with label125;
        catch java.io.IOException from label174 to label175 with label125;
        catch java.io.IOException from label176 to label177 with label125;
        catch java.io.IOException from label179 to label180 with label125;
        catch java.io.IOException from label181 to label182 with label125;
        catch java.io.IOException from label184 to label185 with label125;
        catch java.io.IOException from label186 to label187 with label125;
        catch java.io.IOException from label188 to label189 with label125;
        catch java.io.IOException from label190 to label191 with label125;
        catch java.io.IOException from label195 to label196 with label125;
        catch java.io.IOException from label197 to label198 with label125;
        catch java.io.IOException from label199 to label200 with label125;
        catch java.io.IOException from label202 to label203 with label125;
        catch java.io.IOException from label204 to label205 with label125;
        catch java.io.IOException from label206 to label207 with label125;
        catch java.io.IOException from label208 to label209 with label125;
        catch java.io.IOException from label210 to label211 with label125;
        catch java.io.IOException from label212 to label213 with label125;
        catch java.io.IOException from label215 to label216 with label125;
        catch java.io.IOException from label217 to label218 with label125;
        catch java.io.IOException from label220 to label221 with label125;
        catch java.io.IOException from label222 to label223 with label125;
        catch java.io.IOException from label225 to label226 with label125;
        catch java.io.IOException from label229 to label230 with label125;
        catch java.io.IOException from label233 to label234 with label125;
        catch java.io.IOException from label237 to label238 with label125;
        catch java.io.IOException from label239 to label240 with label125;
        catch java.io.IOException from label241 to label242 with label125;
        catch java.io.IOException from label243 to label244 with label125;
        catch java.io.IOException from label245 to label246 with label125;
        catch java.io.IOException from label247 to label248 with label125;
        catch java.io.IOException from label249 to label250 with label125;
        catch java.io.IOException from label251 to label252 with label125;
        catch java.lang.Exception from label133 to label185 with label132;
        catch java.lang.Exception from label186 to label193 with label132;
        catch java.lang.Exception from label194 to label238 with label132;
        catch java.lang.Exception from label239 to label250 with label132;
        catch java.lang.Exception from label251 to label252 with label132;
    }
}
