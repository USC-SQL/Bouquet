class org.simpleframework.xml.stream.StreamReader$Text extends org.simpleframework.xml.stream.EventToken
{
    private final javax.xml.stream.events.Characters text;

    public void <init>(javax.xml.stream.events.XMLEvent)
    {
        javax.xml.stream.events.Characters $r0;
        javax.xml.stream.events.XMLEvent $r1;
        org.simpleframework.xml.stream.StreamReader$Text $r2;

        $r2 := @this: org.simpleframework.xml.stream.StreamReader$Text;

        $r1 := @parameter0: javax.xml.stream.events.XMLEvent;

        specialinvoke $r2.<org.simpleframework.xml.stream.EventToken: void <init>()>();

        $r0 = interfaceinvoke $r1.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.Characters asCharacters()>();

        $r2.<org.simpleframework.xml.stream.StreamReader$Text: javax.xml.stream.events.Characters text> = $r0;

        return;
    }

    public java.lang.Object getSource()
    {
        javax.xml.stream.events.Characters r0;
        org.simpleframework.xml.stream.StreamReader$Text $r1;

        $r1 := @this: org.simpleframework.xml.stream.StreamReader$Text;

        r0 = $r1.<org.simpleframework.xml.stream.StreamReader$Text: javax.xml.stream.events.Characters text>;

        return r0;
    }

    public java.lang.String getValue()
    {
        java.lang.String $r0;
        javax.xml.stream.events.Characters $r1;
        org.simpleframework.xml.stream.StreamReader$Text $r2;

        $r2 := @this: org.simpleframework.xml.stream.StreamReader$Text;

        $r1 = $r2.<org.simpleframework.xml.stream.StreamReader$Text: javax.xml.stream.events.Characters text>;

        $r0 = interfaceinvoke $r1.<javax.xml.stream.events.Characters: java.lang.String getData()>();

        return $r0;
    }

    public boolean isText()
    {
        org.simpleframework.xml.stream.StreamReader$Text $r0;

        $r0 := @this: org.simpleframework.xml.stream.StreamReader$Text;

        return 1;
    }
}
