class org.simpleframework.xml.stream.OutputNodeMap extends java.util.LinkedHashMap implements org.simpleframework.xml.stream.NodeMap
{
    private final org.simpleframework.xml.stream.OutputNode source;

    public void <init>(org.simpleframework.xml.stream.OutputNode)
    {
        org.simpleframework.xml.stream.OutputNode $r0;
        org.simpleframework.xml.stream.OutputNodeMap $r1;

        $r1 := @this: org.simpleframework.xml.stream.OutputNodeMap;

        $r0 := @parameter0: org.simpleframework.xml.stream.OutputNode;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        $r1.<org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.OutputNode source> = $r0;

        return;
    }

    public volatile org.simpleframework.xml.stream.Node get(java.lang.String)
    {
        org.simpleframework.xml.stream.OutputNode $r0;
        java.lang.String $r1;
        org.simpleframework.xml.stream.OutputNodeMap $r2;

        $r2 := @this: org.simpleframework.xml.stream.OutputNodeMap;

        $r1 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r2.<org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.OutputNode get(java.lang.String)>($r1);

        return $r0;
    }

    public org.simpleframework.xml.stream.OutputNode get(java.lang.String)
    {
        org.simpleframework.xml.stream.OutputNode $r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        org.simpleframework.xml.stream.OutputNodeMap $r3;

        $r3 := @this: org.simpleframework.xml.stream.OutputNodeMap;

        $r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke $r3.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r0 = (org.simpleframework.xml.stream.OutputNode) $r1;

        return $r0;
    }

    public java.lang.String getName()
    {
        java.lang.String $r0;
        org.simpleframework.xml.stream.OutputNode $r1;
        org.simpleframework.xml.stream.OutputNodeMap $r2;

        $r2 := @this: org.simpleframework.xml.stream.OutputNodeMap;

        $r1 = $r2.<org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.OutputNode source>;

        $r0 = interfaceinvoke $r1.<org.simpleframework.xml.stream.OutputNode: java.lang.String getName()>();

        return $r0;
    }

    public volatile org.simpleframework.xml.stream.Node getNode()
    {
        org.simpleframework.xml.stream.OutputNode $r0;
        org.simpleframework.xml.stream.OutputNodeMap $r1;

        $r1 := @this: org.simpleframework.xml.stream.OutputNodeMap;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.OutputNode getNode()>();

        return $r0;
    }

    public org.simpleframework.xml.stream.OutputNode getNode()
    {
        org.simpleframework.xml.stream.OutputNode r0;
        org.simpleframework.xml.stream.OutputNodeMap $r1;

        $r1 := @this: org.simpleframework.xml.stream.OutputNodeMap;

        r0 = $r1.<org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.OutputNode source>;

        return r0;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r0;
        java.util.Set $r1;
        org.simpleframework.xml.stream.OutputNodeMap $r2;

        $r2 := @this: org.simpleframework.xml.stream.OutputNodeMap;

        $r1 = virtualinvoke $r2.<org.simpleframework.xml.stream.OutputNodeMap: java.util.Set keySet()>();

        $r0 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        return $r0;
    }

    public volatile org.simpleframework.xml.stream.Node put(java.lang.String, java.lang.String)
    {
        org.simpleframework.xml.stream.OutputNode $r0;
        java.lang.String $r1, $r2;
        org.simpleframework.xml.stream.OutputNodeMap $r3;

        $r3 := @this: org.simpleframework.xml.stream.OutputNodeMap;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r0 = virtualinvoke $r3.<org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.OutputNode put(java.lang.String,java.lang.String)>($r1, $r2);

        return $r0;
    }

    public org.simpleframework.xml.stream.OutputNode put(java.lang.String, java.lang.String)
    {
        org.simpleframework.xml.stream.OutputNode $r0, $r5;
        org.simpleframework.xml.stream.OutputAttribute $r1;
        java.lang.String $r2, $r3;
        org.simpleframework.xml.stream.OutputNodeMap $r4;

        $r4 := @this: org.simpleframework.xml.stream.OutputNodeMap;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $r1 = new org.simpleframework.xml.stream.OutputAttribute;

        $r0 = $r4.<org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.OutputNode source>;

        specialinvoke $r1.<org.simpleframework.xml.stream.OutputAttribute: void <init>(org.simpleframework.xml.stream.OutputNode,java.lang.String,java.lang.String)>($r0, $r2, $r3);

        $r5 = $r4.<org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.OutputNode source>;

        if $r5 == null goto label1;

        virtualinvoke $r4.<org.simpleframework.xml.stream.OutputNodeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        return $r1;

     label1:
        return $r1;
    }

    public volatile org.simpleframework.xml.stream.Node remove(java.lang.String)
    {
        org.simpleframework.xml.stream.OutputNode $r0;
        java.lang.String $r1;
        org.simpleframework.xml.stream.OutputNodeMap $r2;

        $r2 := @this: org.simpleframework.xml.stream.OutputNodeMap;

        $r1 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r2.<org.simpleframework.xml.stream.OutputNodeMap: org.simpleframework.xml.stream.OutputNode remove(java.lang.String)>($r1);

        return $r0;
    }

    public org.simpleframework.xml.stream.OutputNode remove(java.lang.String)
    {
        org.simpleframework.xml.stream.OutputNode $r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        org.simpleframework.xml.stream.OutputNodeMap $r3;

        $r3 := @this: org.simpleframework.xml.stream.OutputNodeMap;

        $r2 := @parameter0: java.lang.String;

        $r1 = specialinvoke $r3.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r2);

        $r0 = (org.simpleframework.xml.stream.OutputNode) $r1;

        return $r0;
    }
}
