class org.simpleframework.xml.core.Introspector extends java.lang.Object
{
    private final org.simpleframework.xml.core.Contact contact;
    private final org.simpleframework.xml.stream.Format format;
    private final org.simpleframework.xml.core.Label label;
    private final java.lang.annotation.Annotation marker;

    public void <init>(org.simpleframework.xml.core.Contact, org.simpleframework.xml.core.Label, org.simpleframework.xml.stream.Format)
    {
        java.lang.annotation.Annotation $r0;
        org.simpleframework.xml.stream.Format $r1;
        org.simpleframework.xml.core.Label $r2;
        org.simpleframework.xml.core.Contact $r3;
        org.simpleframework.xml.core.Introspector $r4;

        $r4 := @this: org.simpleframework.xml.core.Introspector;

        $r3 := @parameter0: org.simpleframework.xml.core.Contact;

        $r2 := @parameter1: org.simpleframework.xml.core.Label;

        $r1 := @parameter2: org.simpleframework.xml.stream.Format;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        $r0 = interfaceinvoke $r3.<org.simpleframework.xml.core.Contact: java.lang.annotation.Annotation getAnnotation()>();

        $r4.<org.simpleframework.xml.core.Introspector: java.lang.annotation.Annotation marker> = $r0;

        $r4.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Contact contact> = $r3;

        $r4.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.stream.Format format> = $r1;

        $r4.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Label label> = $r2;

        return;
    }

    private java.lang.String getDefault() throws java.lang.Exception
    {
        org.simpleframework.xml.core.Contact $r0;
        boolean $z0;
        java.lang.String $r1, $r4;
        org.simpleframework.xml.core.Label $r2;
        org.simpleframework.xml.core.Introspector $r3;

        $r3 := @this: org.simpleframework.xml.core.Introspector;

        $r2 = $r3.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Label label>;

        $r1 = interfaceinvoke $r2.<org.simpleframework.xml.core.Label: java.lang.String getOverride()>();

        $z0 = virtualinvoke $r3.<org.simpleframework.xml.core.Introspector: boolean isEmpty(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r0 = $r3.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Contact contact>;

        $r4 = interfaceinvoke $r0.<org.simpleframework.xml.core.Contact: java.lang.String getName()>();

        return $r4;
    }

    private java.lang.String getName(java.lang.Class) throws java.lang.Exception
    {
        java.lang.String $r0, $r3, $r4;
        java.lang.Class $r1;
        org.simpleframework.xml.core.Introspector $r2;

        $r2 := @this: org.simpleframework.xml.core.Introspector;

        $r1 := @parameter0: java.lang.Class;

        $r0 = specialinvoke $r2.<org.simpleframework.xml.core.Introspector: java.lang.String getRoot(java.lang.Class)>($r1);

        if $r0 == null goto label1;

        return $r0;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = staticinvoke <org.simpleframework.xml.core.Reflector: java.lang.String getName(java.lang.String)>($r3);

        return $r4;
    }

    private java.lang.String getRoot(java.lang.Class)
    {
        java.lang.String $r0;
        java.lang.Class $r1, $r2;
        org.simpleframework.xml.core.Introspector $r3;

        $r3 := @this: org.simpleframework.xml.core.Introspector;

        $r1 := @parameter0: java.lang.Class;

        $r2 = $r1;

     label1:
        if $r1 == null goto label3;

        $r0 = specialinvoke $r3.<org.simpleframework.xml.core.Introspector: java.lang.String getRoot(java.lang.Class,java.lang.Class)>($r2, $r1);

        if $r0 == null goto label2;

        return $r0;

     label2:
        $r1 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label3:
        return null;
    }

    private java.lang.String getRoot(java.lang.Class, java.lang.Class)
    {
        org.simpleframework.xml.Root $r0;
        java.lang.annotation.Annotation $r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r3, $r7;
        java.lang.Class $r4, $r5;
        org.simpleframework.xml.core.Introspector $r6;

        $r6 := @this: org.simpleframework.xml.core.Introspector;

        $r4 := @parameter0: java.lang.Class;

        $r5 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>();

        $z0 = virtualinvoke $r5.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "org/simpleframework/xml/Root");

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke $r5.<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "org/simpleframework/xml/Root");

        $r0 = (org.simpleframework.xml.Root) $r1;

        $r3 = interfaceinvoke $r0.<org.simpleframework.xml.Root: java.lang.String name()>();

        $z1 = virtualinvoke $r6.<org.simpleframework.xml.core.Introspector: boolean isEmpty(java.lang.String)>($r3);

        if $z1 != 0 goto label1;

        return $r3;

     label1:
        $r7 = staticinvoke <org.simpleframework.xml.core.Reflector: java.lang.String getName(java.lang.String)>($r2);

        return $r7;

     label2:
        return null;
    }

    public org.simpleframework.xml.core.Contact getContact()
    {
        org.simpleframework.xml.core.Contact r0;
        org.simpleframework.xml.core.Introspector $r1;

        $r1 := @this: org.simpleframework.xml.core.Introspector;

        r0 = $r1.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Contact contact>;

        return r0;
    }

    public org.simpleframework.xml.strategy.Type getDependent() throws java.lang.Exception
    {
        org.simpleframework.xml.strategy.Type $r0;
        org.simpleframework.xml.core.Label $r1;
        org.simpleframework.xml.core.Introspector $r2;

        $r2 := @this: org.simpleframework.xml.core.Introspector;

        $r1 = $r2.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Label label>;

        $r0 = interfaceinvoke $r1.<org.simpleframework.xml.core.Label: org.simpleframework.xml.strategy.Type getDependent()>();

        return $r0;
    }

    public java.lang.String getEntry() throws java.lang.Exception
    {
        java.lang.String $r0, $r5;
        boolean $z0;
        org.simpleframework.xml.strategy.Type $r1;
        java.lang.Class $r2, $r3;
        org.simpleframework.xml.core.Introspector $r4;

        $r4 := @this: org.simpleframework.xml.core.Introspector;

        $r1 = virtualinvoke $r4.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.strategy.Type getDependent()>();

        $r3 = interfaceinvoke $r1.<org.simpleframework.xml.strategy.Type: java.lang.Class getType()>();

        $r2 = $r3;

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

     label1:
        $r0 = specialinvoke $r4.<org.simpleframework.xml.core.Introspector: java.lang.String getName(java.lang.Class)>($r2);

        if $r0 != null goto label2;

        return null;

     label2:
        $r5 = virtualinvoke $r0.<java.lang.String: java.lang.String intern()>();

        return $r5;
    }

    public org.simpleframework.xml.core.Expression getExpression() throws java.lang.Exception
    {
        java.lang.String $r0;
        org.simpleframework.xml.stream.Format $r1, $r7;
        org.simpleframework.xml.core.Contact $r2, $r6;
        org.simpleframework.xml.core.PathParser $r3, $r5;
        org.simpleframework.xml.core.Introspector $r4;

        $r4 := @this: org.simpleframework.xml.core.Introspector;

        $r0 = virtualinvoke $r4.<org.simpleframework.xml.core.Introspector: java.lang.String getPath()>();

        if $r0 == null goto label1;

        $r3 = new org.simpleframework.xml.core.PathParser;

        $r2 = $r4.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Contact contact>;

        $r1 = $r4.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.stream.Format format>;

        specialinvoke $r3.<org.simpleframework.xml.core.PathParser: void <init>(java.lang.String,org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.Format)>($r0, $r2, $r1);

        return $r3;

     label1:
        $r5 = new org.simpleframework.xml.core.PathParser;

        $r6 = $r4.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Contact contact>;

        $r7 = $r4.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.stream.Format format>;

        specialinvoke $r5.<org.simpleframework.xml.core.PathParser: void <init>(java.lang.String,org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.Format)>(".", $r6, $r7);

        return $r5;
    }

    public java.lang.String getName() throws java.lang.Exception
    {
        boolean $z0;
        org.simpleframework.xml.core.Label $r0, $r3;
        java.lang.String $r1, $r4;
        org.simpleframework.xml.core.Introspector $r2;

        $r2 := @this: org.simpleframework.xml.core.Introspector;

        $r0 = $r2.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Label label>;

        $r1 = interfaceinvoke $r0.<org.simpleframework.xml.core.Label: java.lang.String getEntry()>();

        $r3 = $r2.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Label label>;

        $z0 = interfaceinvoke $r3.<org.simpleframework.xml.core.Label: boolean isInline()>();

        if $z0 != 0 goto label1;

        $r1 = specialinvoke $r2.<org.simpleframework.xml.core.Introspector: java.lang.String getDefault()>();

     label1:
        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String intern()>();

        return $r4;
    }

    public java.lang.String getPath() throws java.lang.Exception
    {
        java.lang.String $r0;
        org.simpleframework.xml.Path $r1;
        java.lang.annotation.Annotation $r2;
        org.simpleframework.xml.core.Contact $r3;
        org.simpleframework.xml.core.Introspector $r4;

        $r4 := @this: org.simpleframework.xml.core.Introspector;

        $r3 = $r4.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Contact contact>;

        $r2 = interfaceinvoke $r3.<org.simpleframework.xml.core.Contact: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class "org/simpleframework/xml/Path");

        $r1 = (org.simpleframework.xml.Path) $r2;

        if $r1 != null goto label1;

        return null;

     label1:
        $r0 = interfaceinvoke $r1.<org.simpleframework.xml.Path: java.lang.String value()>();

        return $r0;
    }

    public boolean isEmpty(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;
        org.simpleframework.xml.core.Introspector $r1;

        $r1 := @this: org.simpleframework.xml.core.Introspector;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label2;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 1;
    }

    public java.lang.String toString()
    {
        org.simpleframework.xml.core.Contact $r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;
        java.lang.annotation.Annotation $r3;
        org.simpleframework.xml.core.Introspector $r4;

        $r4 := @this: org.simpleframework.xml.core.Introspector;

        $r1 = newarray (java.lang.Object)[2];

        $r3 = $r4.<org.simpleframework.xml.core.Introspector: java.lang.annotation.Annotation marker>;

        $r1[0] = $r3;

        $r0 = $r4.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Contact contact>;

        $r1[1] = $r0;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s on %s", $r1);

        return $r2;
    }
}
