public abstract class com.oopsconsultancy.xmltask.Action extends java.lang.Object
{
    protected org.w3c.dom.Document doc;
    private java.util.List removals;

    public void <init>()
    {
        java.util.ArrayList $r0;
        com.oopsconsultancy.xmltask.Action $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.Action;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1.<com.oopsconsultancy.xmltask.Action: java.util.List removals> = $r0;

        $r1.<com.oopsconsultancy.xmltask.Action: org.w3c.dom.Document doc> = null;

        return;
    }

    public abstract boolean apply(org.w3c.dom.Node) throws java.lang.Exception;

    protected final void complete()
    {
        java.util.ArrayList $r0;
        org.w3c.dom.Element $r1;
        org.w3c.dom.Attr $r2;
        short $s0;
        org.w3c.dom.Node $r3, $r4;
        java.lang.Object $r5;
        java.util.List $r6, $r8;
        int $i1, $i2;
        com.oopsconsultancy.xmltask.Action $r7;

        $r7 := @this: com.oopsconsultancy.xmltask.Action;

        virtualinvoke $r7.<com.oopsconsultancy.xmltask.Action: void completeAction()>();

        $i1 = 0;

     label1:
        $r6 = $r7.<com.oopsconsultancy.xmltask.Action: java.util.List removals>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i1 >= $i2 goto label4;

        $r8 = $r7.<com.oopsconsultancy.xmltask.Action: java.util.List removals>;

        $r5 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (org.w3c.dom.Node) $r5;

        $s0 = interfaceinvoke $r3.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 2 goto label3;

        $r2 = (org.w3c.dom.Attr) $r3;

        $r1 = interfaceinvoke $r2.<org.w3c.dom.Attr: org.w3c.dom.Element getOwnerElement()>();

        interfaceinvoke $r1.<org.w3c.dom.Element: org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr)>($r2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r4 = interfaceinvoke $r3.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        interfaceinvoke $r4.<org.w3c.dom.Node: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($r3);

        goto label2;

     label4:
        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r7.<com.oopsconsultancy.xmltask.Action: java.util.List removals> = $r0;

        return;
    }

    protected void completeAction()
    {
        com.oopsconsultancy.xmltask.Action $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.Action;

        return;
    }

    public org.w3c.dom.Document getDocument()
    {
        org.w3c.dom.Document r0;
        com.oopsconsultancy.xmltask.Action $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.Action;

        r0 = $r1.<com.oopsconsultancy.xmltask.Action: org.w3c.dom.Document doc>;

        return r0;
    }

    protected void remove(org.w3c.dom.Node)
    {
        java.util.List $r0;
        org.w3c.dom.Node $r1;
        com.oopsconsultancy.xmltask.Action $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.Action;

        $r1 := @parameter0: org.w3c.dom.Node;

        $r0 = $r2.<com.oopsconsultancy.xmltask.Action: java.util.List removals>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void setDocument(org.w3c.dom.Document)
    {
        org.w3c.dom.Document $r0;
        com.oopsconsultancy.xmltask.Action $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.Action;

        $r0 := @parameter0: org.w3c.dom.Document;

        $r1.<com.oopsconsultancy.xmltask.Action: org.w3c.dom.Document doc> = $r0;

        return;
    }
}
