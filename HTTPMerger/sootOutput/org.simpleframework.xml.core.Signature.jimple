class org.simpleframework.xml.core.Signature extends java.lang.Object implements java.lang.Iterable
{
    private final java.lang.reflect.Constructor factory;
    private final org.simpleframework.xml.core.ParameterMap parameters;
    private final java.lang.Class type;

    public void <init>(java.lang.reflect.Constructor)
    {
        java.lang.Class $r0;
        java.lang.reflect.Constructor $r1;
        org.simpleframework.xml.core.Signature $r2;

        $r2 := @this: org.simpleframework.xml.core.Signature;

        $r1 := @parameter0: java.lang.reflect.Constructor;

        $r0 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>();

        specialinvoke $r2.<org.simpleframework.xml.core.Signature: void <init>(java.lang.reflect.Constructor,java.lang.Class)>($r1, $r0);

        return;
    }

    public void <init>(java.lang.reflect.Constructor, java.lang.Class)
    {
        org.simpleframework.xml.core.ParameterMap $r0;
        java.lang.Class $r1;
        java.lang.reflect.Constructor $r2;
        org.simpleframework.xml.core.Signature $r3;

        $r3 := @this: org.simpleframework.xml.core.Signature;

        $r2 := @parameter0: java.lang.reflect.Constructor;

        $r1 := @parameter1: java.lang.Class;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        $r0 = new org.simpleframework.xml.core.ParameterMap;

        specialinvoke $r0.<org.simpleframework.xml.core.ParameterMap: void <init>()>();

        $r3.<org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.ParameterMap parameters> = $r0;

        $r3.<org.simpleframework.xml.core.Signature: java.lang.reflect.Constructor factory> = $r2;

        $r3.<org.simpleframework.xml.core.Signature: java.lang.Class type> = $r1;

        return;
    }

    public void <init>(org.simpleframework.xml.core.Signature)
    {
        java.lang.Class $r0;
        java.lang.reflect.Constructor $r1;
        org.simpleframework.xml.core.Signature $r2, $r3;

        $r2 := @this: org.simpleframework.xml.core.Signature;

        $r3 := @parameter0: org.simpleframework.xml.core.Signature;

        $r1 = $r3.<org.simpleframework.xml.core.Signature: java.lang.reflect.Constructor factory>;

        $r0 = $r3.<org.simpleframework.xml.core.Signature: java.lang.Class type>;

        specialinvoke $r2.<org.simpleframework.xml.core.Signature: void <init>(java.lang.reflect.Constructor,java.lang.Class)>($r1, $r0);

        return;
    }

    public void add(org.simpleframework.xml.core.Parameter)
    {
        java.lang.Object $r0;
        org.simpleframework.xml.core.ParameterMap $r1;
        org.simpleframework.xml.core.Parameter $r2;
        org.simpleframework.xml.core.Signature $r3;

        $r3 := @this: org.simpleframework.xml.core.Signature;

        $r2 := @parameter0: org.simpleframework.xml.core.Parameter;

        $r0 = interfaceinvoke $r2.<org.simpleframework.xml.core.Parameter: java.lang.Object getKey()>();

        if $r0 == null goto label1;

        $r1 = $r3.<org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.ParameterMap parameters>;

        virtualinvoke $r1.<org.simpleframework.xml.core.ParameterMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r2);

        return;

     label1:
        return;
    }

    public boolean contains(java.lang.Object)
    {
        boolean $z0;
        org.simpleframework.xml.core.ParameterMap $r0;
        java.lang.Object $r1;
        org.simpleframework.xml.core.Signature $r2;

        $r2 := @this: org.simpleframework.xml.core.Signature;

        $r1 := @parameter0: java.lang.Object;

        $r0 = $r2.<org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.ParameterMap parameters>;

        $z0 = virtualinvoke $r0.<org.simpleframework.xml.core.ParameterMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public org.simpleframework.xml.core.Signature copy() throws java.lang.Exception
    {
        org.simpleframework.xml.core.Parameter $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.util.Iterator $r2;
        org.simpleframework.xml.core.Signature $r3, $r4;

        $r3 := @this: org.simpleframework.xml.core.Signature;

        $r4 = new org.simpleframework.xml.core.Signature;

        specialinvoke $r4.<org.simpleframework.xml.core.Signature: void <init>(org.simpleframework.xml.core.Signature)>($r3);

        $r2 = virtualinvoke $r3.<org.simpleframework.xml.core.Signature: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r0 = (org.simpleframework.xml.core.Parameter) $r1;

        virtualinvoke $r4.<org.simpleframework.xml.core.Signature: void add(org.simpleframework.xml.core.Parameter)>($r0);

        goto label1;

     label2:
        return $r4;
    }

    public java.lang.Object create() throws java.lang.Exception
    {
        java.lang.Object $r0;
        java.lang.Object[] $r1;
        boolean $z0;
        java.lang.reflect.Constructor $r2, $r4, $r5;
        org.simpleframework.xml.core.Signature $r3;

        $r3 := @this: org.simpleframework.xml.core.Signature;

        $r2 = $r3.<org.simpleframework.xml.core.Signature: java.lang.reflect.Constructor factory>;

        $z0 = virtualinvoke $r2.<java.lang.reflect.Constructor: boolean isAccessible()>();

        if $z0 != 0 goto label1;

        $r4 = $r3.<org.simpleframework.xml.core.Signature: java.lang.reflect.Constructor factory>;

        virtualinvoke $r4.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label1:
        $r5 = $r3.<org.simpleframework.xml.core.Signature: java.lang.reflect.Constructor factory>;

        $r1 = newarray (java.lang.Object)[0];

        $r0 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r1);

        return $r0;
    }

    public java.lang.Object create(java.lang.Object[]) throws java.lang.Exception
    {
        java.lang.Object $r0;
        boolean $z0;
        java.lang.reflect.Constructor $r1, $r4, $r5;
        java.lang.Object[] $r2;
        org.simpleframework.xml.core.Signature $r3;

        $r3 := @this: org.simpleframework.xml.core.Signature;

        $r2 := @parameter0: java.lang.Object[];

        $r1 = $r3.<org.simpleframework.xml.core.Signature: java.lang.reflect.Constructor factory>;

        $z0 = virtualinvoke $r1.<java.lang.reflect.Constructor: boolean isAccessible()>();

        if $z0 != 0 goto label1;

        $r4 = $r3.<org.simpleframework.xml.core.Signature: java.lang.reflect.Constructor factory>;

        virtualinvoke $r4.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label1:
        $r5 = $r3.<org.simpleframework.xml.core.Signature: java.lang.reflect.Constructor factory>;

        $r0 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r2);

        return $r0;
    }

    public org.simpleframework.xml.core.Parameter get(int)
    {
        org.simpleframework.xml.core.Parameter $r0;
        org.simpleframework.xml.core.ParameterMap $r1;
        int $i0;
        org.simpleframework.xml.core.Signature $r2;

        $r2 := @this: org.simpleframework.xml.core.Signature;

        $i0 := @parameter0: int;

        $r1 = $r2.<org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.ParameterMap parameters>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.ParameterMap: org.simpleframework.xml.core.Parameter get(int)>($i0);

        return $r0;
    }

    public org.simpleframework.xml.core.Parameter get(java.lang.Object)
    {
        org.simpleframework.xml.core.Parameter $r0;
        org.simpleframework.xml.core.ParameterMap $r1;
        java.lang.Object $r2, $r4;
        org.simpleframework.xml.core.Signature $r3;

        $r3 := @this: org.simpleframework.xml.core.Signature;

        $r2 := @parameter0: java.lang.Object;

        $r1 = $r3.<org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.ParameterMap parameters>;

        $r4 = virtualinvoke $r1.<org.simpleframework.xml.core.ParameterMap: java.lang.Object get(java.lang.Object)>($r2);

        $r0 = (org.simpleframework.xml.core.Parameter) $r4;

        return $r0;
    }

    public java.util.List getAll()
    {
        java.util.List $r0;
        org.simpleframework.xml.core.ParameterMap $r1;
        org.simpleframework.xml.core.Signature $r2;

        $r2 := @this: org.simpleframework.xml.core.Signature;

        $r1 = $r2.<org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.ParameterMap parameters>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.ParameterMap: java.util.List getAll()>();

        return $r0;
    }

    public java.lang.Class getType()
    {
        java.lang.Class r0;
        org.simpleframework.xml.core.Signature $r1;

        $r1 := @this: org.simpleframework.xml.core.Signature;

        r0 = $r1.<org.simpleframework.xml.core.Signature: java.lang.Class type>;

        return r0;
    }

    public boolean isEmpty()
    {
        boolean $z0;
        org.simpleframework.xml.core.ParameterMap $r0;
        org.simpleframework.xml.core.Signature $r1;

        $r1 := @this: org.simpleframework.xml.core.Signature;

        $r0 = $r1.<org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.ParameterMap parameters>;

        $z0 = virtualinvoke $r0.<org.simpleframework.xml.core.ParameterMap: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r0;
        org.simpleframework.xml.core.ParameterMap $r1;
        org.simpleframework.xml.core.Signature $r2;

        $r2 := @this: org.simpleframework.xml.core.Signature;

        $r1 = $r2.<org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.ParameterMap parameters>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.ParameterMap: java.util.Iterator iterator()>();

        return $r0;
    }

    public org.simpleframework.xml.core.Parameter remove(java.lang.Object)
    {
        org.simpleframework.xml.core.Parameter $r0;
        org.simpleframework.xml.core.ParameterMap $r1;
        java.lang.Object $r2, $r4;
        org.simpleframework.xml.core.Signature $r3;

        $r3 := @this: org.simpleframework.xml.core.Signature;

        $r2 := @parameter0: java.lang.Object;

        $r1 = $r3.<org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.ParameterMap parameters>;

        $r4 = virtualinvoke $r1.<org.simpleframework.xml.core.ParameterMap: java.lang.Object remove(java.lang.Object)>($r2);

        $r0 = (org.simpleframework.xml.core.Parameter) $r4;

        return $r0;
    }

    public void set(java.lang.Object, org.simpleframework.xml.core.Parameter)
    {
        org.simpleframework.xml.core.ParameterMap $r0;
        org.simpleframework.xml.core.Parameter $r1;
        java.lang.Object $r2;
        org.simpleframework.xml.core.Signature $r3;

        $r3 := @this: org.simpleframework.xml.core.Signature;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: org.simpleframework.xml.core.Parameter;

        $r0 = $r3.<org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.ParameterMap parameters>;

        virtualinvoke $r0.<org.simpleframework.xml.core.ParameterMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        return;
    }

    public int size()
    {
        int $i0;
        org.simpleframework.xml.core.ParameterMap $r0;
        org.simpleframework.xml.core.Signature $r1;

        $r1 := @this: org.simpleframework.xml.core.Signature;

        $r0 = $r1.<org.simpleframework.xml.core.Signature: org.simpleframework.xml.core.ParameterMap parameters>;

        $i0 = virtualinvoke $r0.<org.simpleframework.xml.core.ParameterMap: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r0;
        java.lang.reflect.Constructor $r1;
        org.simpleframework.xml.core.Signature $r2;

        $r2 := @this: org.simpleframework.xml.core.Signature;

        $r1 = $r2.<org.simpleframework.xml.core.Signature: java.lang.reflect.Constructor factory>;

        $r0 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.String toString()>();

        return $r0;
    }
}
