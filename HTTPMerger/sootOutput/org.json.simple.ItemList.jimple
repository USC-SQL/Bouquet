public class org.json.simple.ItemList extends java.lang.Object
{
    java.util.List items;
    private java.lang.String sp;

    public void <init>()
    {
        java.util.ArrayList $r0;
        org.json.simple.ItemList $r1;

        $r1 := @this: org.json.simple.ItemList;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r1.<org.json.simple.ItemList: java.lang.String sp> = ",";

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1.<org.json.simple.ItemList: java.util.List items> = $r0;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.util.ArrayList $r0;
        java.util.List $r1;
        java.lang.String $r2, $r3;
        org.json.simple.ItemList $r4;

        $r4 := @this: org.json.simple.ItemList;

        $r2 := @parameter0: java.lang.String;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        $r4.<org.json.simple.ItemList: java.lang.String sp> = ",";

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r4.<org.json.simple.ItemList: java.util.List items> = $r0;

        $r3 = $r4.<org.json.simple.ItemList: java.lang.String sp>;

        $r1 = $r4.<org.json.simple.ItemList: java.util.List items>;

        virtualinvoke $r4.<org.json.simple.ItemList: void split(java.lang.String,java.lang.String,java.util.List)>($r2, $r3, $r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        java.util.List $r0;
        java.util.ArrayList $r1;
        java.lang.String $r2, $r3;
        org.json.simple.ItemList $r4;

        $r4 := @this: org.json.simple.ItemList;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        $r4.<org.json.simple.ItemList: java.lang.String sp> = ",";

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r4.<org.json.simple.ItemList: java.util.List items> = $r1;

        $r4.<org.json.simple.ItemList: java.lang.String sp> = $r2;

        $r0 = $r4.<org.json.simple.ItemList: java.util.List items>;

        virtualinvoke $r4.<org.json.simple.ItemList: void split(java.lang.String,java.lang.String,java.util.List)>($r2, $r3, $r0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, boolean)
    {
        java.util.List $r0;
        java.util.ArrayList $r1;
        boolean $z0;
        java.lang.String $r2, $r3;
        org.json.simple.ItemList $r4;

        $r4 := @this: org.json.simple.ItemList;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        $r4.<org.json.simple.ItemList: java.lang.String sp> = ",";

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r4.<org.json.simple.ItemList: java.util.List items> = $r1;

        $r0 = $r4.<org.json.simple.ItemList: java.util.List items>;

        virtualinvoke $r4.<org.json.simple.ItemList: void split(java.lang.String,java.lang.String,java.util.List,boolean)>($r2, $r3, $r0, $z0);

        return;
    }

    public void add(int, java.lang.String)
    {
        java.util.List $r0;
        java.lang.String $r1, $r3;
        int $i0;
        org.json.simple.ItemList $r2;

        $r2 := @this: org.json.simple.ItemList;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        return;

     label1:
        $r0 = $r2.<org.json.simple.ItemList: java.util.List items>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r0.<java.util.List: void add(int,java.lang.Object)>($i0, $r3);

        return;
    }

    public void add(java.lang.String)
    {
        java.util.List $r0;
        java.lang.String $r1, $r3;
        org.json.simple.ItemList $r2;

        $r2 := @this: org.json.simple.ItemList;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return;

     label1:
        $r0 = $r2.<org.json.simple.ItemList: java.util.List items>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    public void addAll(java.lang.String)
    {
        java.util.List $r0;
        java.lang.String $r1, $r2;
        org.json.simple.ItemList $r3;

        $r3 := @this: org.json.simple.ItemList;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r3.<org.json.simple.ItemList: java.lang.String sp>;

        $r0 = $r3.<org.json.simple.ItemList: java.util.List items>;

        virtualinvoke $r3.<org.json.simple.ItemList: void split(java.lang.String,java.lang.String,java.util.List)>($r1, $r2, $r0);

        return;
    }

    public void addAll(java.lang.String, java.lang.String)
    {
        java.util.List $r0;
        java.lang.String $r1, $r2;
        org.json.simple.ItemList $r3;

        $r3 := @this: org.json.simple.ItemList;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r0 = $r3.<org.json.simple.ItemList: java.util.List items>;

        virtualinvoke $r3.<org.json.simple.ItemList: void split(java.lang.String,java.lang.String,java.util.List)>($r1, $r2, $r0);

        return;
    }

    public void addAll(java.lang.String, java.lang.String, boolean)
    {
        java.util.List $r0;
        boolean $z0;
        java.lang.String $r1, $r2;
        org.json.simple.ItemList $r3;

        $r3 := @this: org.json.simple.ItemList;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r0 = $r3.<org.json.simple.ItemList: java.util.List items>;

        virtualinvoke $r3.<org.json.simple.ItemList: void split(java.lang.String,java.lang.String,java.util.List,boolean)>($r1, $r2, $r0, $z0);

        return;
    }

    public void addAll(org.json.simple.ItemList)
    {
        java.util.List $r0, $r1;
        org.json.simple.ItemList $r2, $r3;

        $r2 := @this: org.json.simple.ItemList;

        $r3 := @parameter0: org.json.simple.ItemList;

        $r0 = $r2.<org.json.simple.ItemList: java.util.List items>;

        $r1 = $r3.<org.json.simple.ItemList: java.util.List items>;

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r1);

        return;
    }

    public void clear()
    {
        java.util.List $r0;
        org.json.simple.ItemList $r1;

        $r1 := @this: org.json.simple.ItemList;

        $r0 = $r1.<org.json.simple.ItemList: java.util.List items>;

        interfaceinvoke $r0.<java.util.List: void clear()>();

        return;
    }

    public java.lang.String get(int)
    {
        java.lang.String $r0;
        java.lang.Object $r1;
        java.util.List $r2;
        int $i0;
        org.json.simple.ItemList $r3;

        $r3 := @this: org.json.simple.ItemList;

        $i0 := @parameter0: int;

        $r2 = $r3.<org.json.simple.ItemList: java.util.List items>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r0 = (java.lang.String) $r1;

        return $r0;
    }

    public java.lang.String[] getArray()
    {
        java.lang.String[] $r0, $r4;
        java.lang.Object[] $r1;
        java.util.List $r2;
        org.json.simple.ItemList $r3;

        $r3 := @this: org.json.simple.ItemList;

        $r2 = $r3.<org.json.simple.ItemList: java.util.List items>;

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray()>();

        $r0 = (java.lang.String[]) $r1;

        $r4 = (java.lang.String[]) $r0;

        return $r4;
    }

    public java.util.List getItems()
    {
        java.util.List r0;
        org.json.simple.ItemList $r1;

        $r1 := @this: org.json.simple.ItemList;

        r0 = $r1.<org.json.simple.ItemList: java.util.List items>;

        return r0;
    }

    public void reset()
    {
        java.util.List $r0;
        org.json.simple.ItemList $r1;

        $r1 := @this: org.json.simple.ItemList;

        $r1.<org.json.simple.ItemList: java.lang.String sp> = ",";

        $r0 = $r1.<org.json.simple.ItemList: java.util.List items>;

        interfaceinvoke $r0.<java.util.List: void clear()>();

        return;
    }

    public void setSP(java.lang.String)
    {
        java.lang.String $r0;
        org.json.simple.ItemList $r1;

        $r1 := @this: org.json.simple.ItemList;

        $r0 := @parameter0: java.lang.String;

        $r1.<org.json.simple.ItemList: java.lang.String sp> = $r0;

        return;
    }

    public int size()
    {
        int $i0;
        java.util.List $r0;
        org.json.simple.ItemList $r1;

        $r1 := @this: org.json.simple.ItemList;

        $r0 = $r1.<org.json.simple.ItemList: java.util.List items>;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        return $i0;
    }

    public void split(java.lang.String, java.lang.String, java.util.List)
    {
        int $i0, $i1, $i2, $i3;
        java.util.List $r0;
        java.lang.String $r1, $r2, $r3, $r5, $r6, $r7;
        org.json.simple.ItemList $r4;

        $r4 := @this: org.json.simple.ItemList;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.util.List;

        if $r1 == null goto label5;

        if $r2 != null goto label1;

        return;

     label1:
        $i0 = 0;

     label2:
        $i1 = $i0;

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>($r2, $i0);

        if $i2 != -1 goto label4;

     label3:
        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;

     label4:
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

        $r7 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        $i3 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i2 + $i3;

        if $i0 != -1 goto label2;

        goto label3;

     label5:
        return;
    }

    public void split(java.lang.String, java.lang.String, java.util.List, boolean)
    {
        java.util.StringTokenizer $r0;
        boolean $z0, $z1;
        java.util.List $r1;
        java.lang.String $r2, $r3, $r5, $r6;
        org.json.simple.ItemList $r4;

        $r4 := @this: org.json.simple.ItemList;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.util.List;

        $z0 := @parameter3: boolean;

        if $r2 == null goto label4;

        if $r3 != null goto label1;

        return;

     label1:
        if $z0 == 0 goto label3;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

     label2:
        $z1 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label5;

        $r5 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        virtualinvoke $r4.<org.json.simple.ItemList: void split(java.lang.String,java.lang.String,java.util.List)>($r2, $r3, $r1);

        return;

     label4:
        return;

     label5:
        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r0, $r2;
        org.json.simple.ItemList $r1;

        $r1 := @this: org.json.simple.ItemList;

        $r0 = $r1.<org.json.simple.ItemList: java.lang.String sp>;

        $r2 = virtualinvoke $r1.<org.json.simple.ItemList: java.lang.String toString(java.lang.String)>($r0);

        return $r2;
    }

    public java.lang.String toString(java.lang.String)
    {
        java.lang.Object $r0, $r7;
        java.util.List $r1, $r5, $r6;
        java.lang.StringBuffer $r2;
        int $i0, $i1;
        java.lang.String $r3, $r8;
        org.json.simple.ItemList $r4;

        $r4 := @this: org.json.simple.ItemList;

        $r3 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label1:
        $r1 = $r4.<org.json.simple.ItemList: java.util.List items>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label4;

        if $i0 != 0 goto label3;

        $r5 = $r4.<org.json.simple.ItemList: java.util.List items>;

        $r0 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r0);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r6 = $r4.<org.json.simple.ItemList: java.util.List items>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        goto label2;

     label4:
        $r8 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }
}
