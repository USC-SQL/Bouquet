class org.simpleframework.xml.transform.ArrayTransform extends java.lang.Object implements org.simpleframework.xml.transform.Transform
{
    private final org.simpleframework.xml.transform.Transform delegate;
    private final java.lang.Class entry;
    private final org.simpleframework.xml.transform.StringArrayTransform split;

    public void <init>(org.simpleframework.xml.transform.Transform, java.lang.Class)
    {
        org.simpleframework.xml.transform.StringArrayTransform $r0;
        java.lang.Class $r1;
        org.simpleframework.xml.transform.Transform $r2;
        org.simpleframework.xml.transform.ArrayTransform $r3;

        $r3 := @this: org.simpleframework.xml.transform.ArrayTransform;

        $r2 := @parameter0: org.simpleframework.xml.transform.Transform;

        $r1 := @parameter1: java.lang.Class;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        $r0 = new org.simpleframework.xml.transform.StringArrayTransform;

        specialinvoke $r0.<org.simpleframework.xml.transform.StringArrayTransform: void <init>()>();

        $r3.<org.simpleframework.xml.transform.ArrayTransform: org.simpleframework.xml.transform.StringArrayTransform split> = $r0;

        $r3.<org.simpleframework.xml.transform.ArrayTransform: org.simpleframework.xml.transform.Transform delegate> = $r2;

        $r3.<org.simpleframework.xml.transform.ArrayTransform: java.lang.Class entry> = $r1;

        return;
    }

    private java.lang.Object read(java.lang.String[], int) throws java.lang.Exception
    {
        org.simpleframework.xml.transform.Transform $r0;
        java.lang.Object $r1, $r2;
        java.lang.String $r3;
        java.lang.Class $r4;
        int $i0, $i1;
        java.lang.String[] $r5;
        org.simpleframework.xml.transform.ArrayTransform $r6;

        $r6 := @this: org.simpleframework.xml.transform.ArrayTransform;

        $r5 := @parameter0: java.lang.String[];

        $i0 := @parameter1: int;

        $r4 = $r6.<org.simpleframework.xml.transform.ArrayTransform: java.lang.Class entry>;

        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r4, $i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r0 = $r6.<org.simpleframework.xml.transform.ArrayTransform: org.simpleframework.xml.transform.Transform delegate>;

        $r3 = $r5[$i1];

        $r2 = interfaceinvoke $r0.<org.simpleframework.xml.transform.Transform: java.lang.Object read(java.lang.String)>($r3);

        if $r2 == null goto label2;

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r1, $i1, $r2);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    private java.lang.String write(java.lang.Object, int) throws java.lang.Exception
    {
        org.simpleframework.xml.transform.StringArrayTransform $r0;
        java.lang.String $r1, $r7;
        org.simpleframework.xml.transform.Transform $r2;
        java.lang.String[] $r3;
        int $i0, $i1;
        java.lang.Object $r4, $r5;
        org.simpleframework.xml.transform.ArrayTransform $r6;

        $r6 := @this: org.simpleframework.xml.transform.ArrayTransform;

        $r4 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r3 = newarray (java.lang.String)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r4, $i1);

        if $r5 == null goto label2;

        $r2 = $r6.<org.simpleframework.xml.transform.ArrayTransform: org.simpleframework.xml.transform.Transform delegate>;

        $r1 = interfaceinvoke $r2.<org.simpleframework.xml.transform.Transform: java.lang.String write(java.lang.Object)>($r5);

        $r3[$i1] = $r1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r0 = $r6.<org.simpleframework.xml.transform.ArrayTransform: org.simpleframework.xml.transform.StringArrayTransform split>;

        $r7 = virtualinvoke $r0.<org.simpleframework.xml.transform.StringArrayTransform: java.lang.String write(java.lang.String[])>($r3);

        return $r7;
    }

    public java.lang.Object read(java.lang.String) throws java.lang.Exception
    {
        java.lang.Object $r0;
        java.lang.String[] $r1;
        org.simpleframework.xml.transform.StringArrayTransform $r2;
        int $i0;
        java.lang.String $r3;
        org.simpleframework.xml.transform.ArrayTransform $r4;

        $r4 := @this: org.simpleframework.xml.transform.ArrayTransform;

        $r3 := @parameter0: java.lang.String;

        $r2 = $r4.<org.simpleframework.xml.transform.ArrayTransform: org.simpleframework.xml.transform.StringArrayTransform split>;

        $r1 = virtualinvoke $r2.<org.simpleframework.xml.transform.StringArrayTransform: java.lang.String[] read(java.lang.String)>($r3);

        $i0 = lengthof $r1;

        $r0 = specialinvoke $r4.<org.simpleframework.xml.transform.ArrayTransform: java.lang.Object read(java.lang.String[],int)>($r1, $i0);

        return $r0;
    }

    public java.lang.String write(java.lang.Object) throws java.lang.Exception
    {
        java.lang.String $r0;
        int $i0;
        java.lang.Object $r1;
        org.simpleframework.xml.transform.ArrayTransform $r2;

        $r2 := @this: org.simpleframework.xml.transform.ArrayTransform;

        $r1 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r1);

        $r0 = specialinvoke $r2.<org.simpleframework.xml.transform.ArrayTransform: java.lang.String write(java.lang.Object,int)>($r1, $i0);

        return $r0;
    }
}
