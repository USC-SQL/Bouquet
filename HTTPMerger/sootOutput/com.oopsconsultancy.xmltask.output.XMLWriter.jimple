public class com.oopsconsultancy.xmltask.output.XMLWriter extends org.xml.sax.helpers.XMLFilterImpl
{
    private final org.xml.sax.Attributes EMPTY_ATTS;
    private java.util.Hashtable doneDeclTable;
    private int elementLevel;
    private java.util.Hashtable forcedDeclTable;
    private org.xml.sax.helpers.NamespaceSupport nsSupport;
    private java.io.Writer output;
    private int prefixCounter;
    private java.util.Hashtable prefixTable;

    public void <init>()
    {
        org.xml.sax.helpers.AttributesImpl $r0;
        com.oopsconsultancy.xmltask.output.XMLWriter $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        specialinvoke $r1.<org.xml.sax.helpers.XMLFilterImpl: void <init>()>();

        $r0 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r0.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        $r1.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS> = $r0;

        $r1.<com.oopsconsultancy.xmltask.output.XMLWriter: int elementLevel> = 0;

        $r1.<com.oopsconsultancy.xmltask.output.XMLWriter: int prefixCounter> = 0;

        virtualinvoke $r1.<com.oopsconsultancy.xmltask.output.XMLWriter: void init(java.io.Writer)>(null);

        return;
    }

    public void <init>(java.io.Writer)
    {
        org.xml.sax.helpers.AttributesImpl $r0;
        java.io.Writer $r1;
        com.oopsconsultancy.xmltask.output.XMLWriter $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r1 := @parameter0: java.io.Writer;

        specialinvoke $r2.<org.xml.sax.helpers.XMLFilterImpl: void <init>()>();

        $r0 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r0.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS> = $r0;

        $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: int elementLevel> = 0;

        $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: int prefixCounter> = 0;

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void init(java.io.Writer)>($r1);

        return;
    }

    public void <init>(org.xml.sax.XMLReader)
    {
        org.xml.sax.helpers.AttributesImpl $r0;
        org.xml.sax.XMLReader $r1;
        com.oopsconsultancy.xmltask.output.XMLWriter $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r1 := @parameter0: org.xml.sax.XMLReader;

        specialinvoke $r2.<org.xml.sax.helpers.XMLFilterImpl: void <init>(org.xml.sax.XMLReader)>($r1);

        $r0 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r0.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS> = $r0;

        $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: int elementLevel> = 0;

        $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: int prefixCounter> = 0;

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void init(java.io.Writer)>(null);

        return;
    }

    public void <init>(org.xml.sax.XMLReader, java.io.Writer)
    {
        org.xml.sax.helpers.AttributesImpl $r0;
        java.io.Writer $r1;
        org.xml.sax.XMLReader $r2;
        com.oopsconsultancy.xmltask.output.XMLWriter $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r2 := @parameter0: org.xml.sax.XMLReader;

        $r1 := @parameter1: java.io.Writer;

        specialinvoke $r3.<org.xml.sax.helpers.XMLFilterImpl: void <init>(org.xml.sax.XMLReader)>($r2);

        $r0 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r0.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS> = $r0;

        $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: int elementLevel> = 0;

        $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: int prefixCounter> = 0;

        virtualinvoke $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: void init(java.io.Writer)>($r1);

        return;
    }

    private java.lang.String doPrefix(java.lang.String, java.lang.String, boolean)
    {
        java.lang.StringBuilder $r0, $r23, $r24;
        int $i0, $i1, $i2;
        java.lang.Object $r1, $r16;
        java.util.Hashtable $r2, $r15, $r27;
        org.xml.sax.helpers.NamespaceSupport $r3, $r10, $r13, $r18, $r21, $r25, $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r14, $r17, $r19, $r20, $r22;
        com.oopsconsultancy.xmltask.output.XMLWriter $r9;

        $r9 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r4 := @parameter0: java.lang.String;

        $r5 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 = $r9.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        $r7 = virtualinvoke $r3.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>("");

        $r6 = "";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label02;

        if $z0 == 0 goto label01;

        if $r7 == null goto label01;

        $r10 = $r9.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        virtualinvoke $r10.<org.xml.sax.helpers.NamespaceSupport: boolean declarePrefix(java.lang.String,java.lang.String)>("", "");

     label01:
        return null;

     label02:
        if $z0 == 0 goto label14;

        if $r7 == null goto label14;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label14;

        $r11 = "";

     label03:
        if $r11 != null goto label17;

        $r2 = $r9.<com.oopsconsultancy.xmltask.output.XMLWriter: java.util.Hashtable doneDeclTable>;

        $r1 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r4);

        $r12 = (java.lang.String) $r1;

        if $r12 == null goto label07;

        if $z0 == 0 goto label04;

        if $r7 == null goto label05;

     label04:
        $r8 = "";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z3 != 0 goto label06;

     label05:
        $r13 = $r9.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        $r14 = virtualinvoke $r13.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>($r12);

        if $r14 == null goto label07;

     label06:
        $r12 = null;

     label07:
        if $r12 != null goto label11;

        $r15 = $r9.<com.oopsconsultancy.xmltask.output.XMLWriter: java.util.Hashtable prefixTable>;

        $r16 = virtualinvoke $r15.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r4);

        $r12 = (java.lang.String) $r16;

        if $r12 == null goto label11;

        if $z0 == 0 goto label08;

        if $r7 == null goto label09;

     label08:
        $r17 = "";

        $z4 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z4 != 0 goto label10;

     label09:
        $r18 = $r9.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        $r19 = virtualinvoke $r18.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>($r12);

        if $r19 == null goto label11;

     label10:
        $r12 = null;

     label11:
        if $r12 != null goto label12;

        if $r5 == null goto label12;

        $r20 = "";

        $z5 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z5 != 0 goto label12;

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(58);

        if $i0 != -1 goto label15;

        if $z0 == 0 goto label12;

        if $r7 != null goto label12;

        $r12 = "";

     label12:
        if $r12 == null goto label13;

        $r21 = $r9.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        $r22 = virtualinvoke $r21.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>($r12);

        if $r22 == null goto label16;

     label13:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__NS");

        $i1 = $r9.<com.oopsconsultancy.xmltask.output.XMLWriter: int prefixCounter>;

        $i2 = $i1 + 1;

        $r9.<com.oopsconsultancy.xmltask.output.XMLWriter: int prefixCounter> = $i2;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label14:
        $r25 = $r9.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        $r11 = virtualinvoke $r25.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getPrefix(java.lang.String)>($r4);

        goto label03;

     label15:
        $r12 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        goto label12;

     label16:
        $r26 = $r9.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        virtualinvoke $r26.<org.xml.sax.helpers.NamespaceSupport: boolean declarePrefix(java.lang.String,java.lang.String)>($r12, $r4);

        $r27 = $r9.<com.oopsconsultancy.xmltask.output.XMLWriter: java.util.Hashtable doneDeclTable>;

        virtualinvoke $r27.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r12);

        return $r12;

     label17:
        return $r11;
    }

    private void forceNSDecls()
    {
        java.lang.String $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.util.Enumeration $r2;
        java.util.Hashtable $r3;
        com.oopsconsultancy.xmltask.output.XMLWriter $r4;

        $r4 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r3 = $r4.<com.oopsconsultancy.xmltask.output.XMLWriter: java.util.Hashtable forcedDeclTable>;

        $r2 = virtualinvoke $r3.<java.util.Hashtable: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r0 = (java.lang.String) $r1;

        specialinvoke $r4.<com.oopsconsultancy.xmltask.output.XMLWriter: java.lang.String doPrefix(java.lang.String,java.lang.String,boolean)>($r0, null, 1);

        goto label1;

     label2:
        return;
    }

    private void writeAttributes(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        char[] $r0;
        boolean $z0;
        java.lang.String $r1, $r2, $r3, $r6, $r7;
        int $i0, $i1, $i2;
        org.xml.sax.Attributes $r4;
        com.oopsconsultancy.xmltask.output.XMLWriter $r5;

        $r5 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r4 := @parameter0: org.xml.sax.Attributes;

        $i1 = interfaceinvoke $r4.<org.xml.sax.Attributes: int getLength()>();

        $i0 = 0;

     label1:
        if $i0 >= $i1 goto label3;

        $r1 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getQName(int)>($i0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z0 != 0 goto label2;

        $r6 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getValue(int)>($i0);

        $r0 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(32);

        $r7 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getURI(int)>($i0);

        $r2 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>($i0);

        $r3 = interfaceinvoke $r4.<org.xml.sax.Attributes: java.lang.String getQName(int)>($i0);

        specialinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void writeName(java.lang.String,java.lang.String,java.lang.String,boolean)>($r7, $r2, $r3, 0);

        virtualinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>("=\"");

        $i2 = lengthof $r0;

        virtualinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void writeEsc(char[],int,int,boolean)>($r0, 0, $i2, 1);

        virtualinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(34);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    private void writeNSDecls() throws org.xml.sax.SAXException
    {
        char[] $r0;
        java.lang.Object $r1;
        boolean $z0, $z1;
        java.util.Enumeration $r2;
        int $i0;
        org.xml.sax.helpers.NamespaceSupport $r3, $r8;
        java.lang.String $r4, $r5, $r6, $r9;
        com.oopsconsultancy.xmltask.output.XMLWriter $r7;

        $r7 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r3 = $r7.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        $r2 = virtualinvoke $r3.<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getDeclaredPrefixes()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r1 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r5 = (java.lang.String) $r1;

        $r8 = $r7.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        $r6 = virtualinvoke $r8.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>($r5);

        $r4 = $r6;

        if $r6 != null goto label2;

        $r4 = "";

     label2:
        $r0 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r7.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(32);

        $r9 = "";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label4;

        virtualinvoke $r7.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>("xmlns=\"");

     label3:
        $i0 = lengthof $r0;

        virtualinvoke $r7.<com.oopsconsultancy.xmltask.output.XMLWriter: void writeEsc(char[],int,int,boolean)>($r0, 0, $i0, 1);

        virtualinvoke $r7.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(34);

        goto label1;

     label4:
        virtualinvoke $r7.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>("xmlns:");

        virtualinvoke $r7.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>($r5);

        virtualinvoke $r7.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>("=\"");

        goto label3;

     label5:
        return;
    }

    private void writeName(java.lang.String, java.lang.String, java.lang.String, boolean) throws org.xml.sax.SAXException
    {
        boolean $z0, $z1;
        java.lang.String $r0, $r1, $r2, $r4, $r5;
        com.oopsconsultancy.xmltask.output.XMLWriter $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r4 = specialinvoke $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: java.lang.String doPrefix(java.lang.String,java.lang.String,boolean)>($r0, $r2, $z0);

        if $r4 == null goto label1;

        $r5 = "";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label1;

        virtualinvoke $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>($r4);

        virtualinvoke $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(58);

     label1:
        virtualinvoke $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>($r1);

        return;
    }

    public void characters(java.lang.String) throws org.xml.sax.SAXException
    {
        char[] $r0;
        int $i0;
        java.lang.String $r1;
        com.oopsconsultancy.xmltask.output.XMLWriter $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r1 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $i0 = lengthof $r0;

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void characters(char[],int,int)>($r0, 0, $i0);

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        int $i0, $i1;
        char[] $r0;
        com.oopsconsultancy.xmltask.output.XMLWriter $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r1.<com.oopsconsultancy.xmltask.output.XMLWriter: void writeEsc(char[],int,int,boolean)>($r0, $i0, $i1, 0);

        specialinvoke $r1.<org.xml.sax.helpers.XMLFilterImpl: void characters(char[],int,int)>($r0, $i0, $i1);

        return;
    }

    public void dataElement(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.Attributes $r0;
        java.lang.String $r1, $r2;
        com.oopsconsultancy.xmltask.output.XMLWriter $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r0 = $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS>;

        virtualinvoke $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: void dataElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,java.lang.String)>("", $r1, "", $r0, $r2);

        return;
    }

    public void dataElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.Attributes $r0;
        java.lang.String $r1, $r2, $r3;
        com.oopsconsultancy.xmltask.output.XMLWriter $r4;

        $r4 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r0 = $r4.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS>;

        virtualinvoke $r4.<com.oopsconsultancy.xmltask.output.XMLWriter: void dataElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,java.lang.String)>($r1, $r2, "", $r0, $r3);

        return;
    }

    public void dataElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.Attributes $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        com.oopsconsultancy.xmltask.output.XMLWriter $r5;

        $r5 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r0 := @parameter3: org.xml.sax.Attributes;

        $r4 := @parameter4: java.lang.String;

        virtualinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>($r1, $r2, $r3, $r0);

        virtualinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void characters(java.lang.String)>($r4);

        virtualinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return;
    }

    public void emptyElement(java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.Attributes $r0;
        java.lang.String $r1;
        com.oopsconsultancy.xmltask.output.XMLWriter $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r1 := @parameter0: java.lang.String;

        $r0 = $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS>;

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void emptyElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>("", $r1, "", $r0);

        return;
    }

    public void emptyElement(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.Attributes $r0;
        java.lang.String $r1, $r2;
        com.oopsconsultancy.xmltask.output.XMLWriter $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r0 = $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS>;

        virtualinvoke $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: void emptyElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>($r1, $r2, "", $r0);

        return;
    }

    public void emptyElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        int $i0;
        org.xml.sax.helpers.NamespaceSupport $r0;
        org.xml.sax.Attributes $r1;
        java.lang.String $r2, $r3, $r4;
        com.oopsconsultancy.xmltask.output.XMLWriter $r5;

        $r5 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $r4 := @parameter2: java.lang.String;

        $r1 := @parameter3: org.xml.sax.Attributes;

        $r0 = $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        virtualinvoke $r0.<org.xml.sax.helpers.NamespaceSupport: void pushContext()>();

        virtualinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(60);

        specialinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void writeName(java.lang.String,java.lang.String,java.lang.String,boolean)>($r2, $r3, $r4, 1);

        specialinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void writeAttributes(org.xml.sax.Attributes)>($r1);

        $i0 = $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: int elementLevel>;

        if $i0 != 1 goto label1;

        specialinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void forceNSDecls()>();

     label1:
        specialinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void writeNSDecls()>();

        virtualinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>("/>");

        specialinvoke $r5.<org.xml.sax.helpers.XMLFilterImpl: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>($r2, $r3, $r4, $r1);

        specialinvoke $r5.<org.xml.sax.helpers.XMLFilterImpl: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4);

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r0;
        java.io.IOException $r1;
        com.oopsconsultancy.xmltask.output.XMLWriter $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(10);

        specialinvoke $r2.<org.xml.sax.helpers.XMLFilterImpl: void endDocument()>();

     label1:
        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void flush()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r0 = new org.xml.sax.SAXException;

        specialinvoke $r0.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r1);

        throw $r0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void endElement(java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.output.XMLWriter $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r0 := @parameter0: java.lang.String;

        virtualinvoke $r1.<com.oopsconsultancy.xmltask.output.XMLWriter: void endElement(java.lang.String,java.lang.String,java.lang.String)>("", $r0, "");

        return;
    }

    public void endElement(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.String $r0, $r1;
        com.oopsconsultancy.xmltask.output.XMLWriter $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r0, $r1, "");

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.helpers.NamespaceSupport $r0;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r2, $r3;
        com.oopsconsultancy.xmltask.output.XMLWriter $r4;

        $r4 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        virtualinvoke $r4.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>("</");

        specialinvoke $r4.<com.oopsconsultancy.xmltask.output.XMLWriter: void writeName(java.lang.String,java.lang.String,java.lang.String,boolean)>($r1, $r2, $r3, 1);

        virtualinvoke $r4.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(62);

        $i0 = $r4.<com.oopsconsultancy.xmltask.output.XMLWriter: int elementLevel>;

        if $i0 != 1 goto label1;

        virtualinvoke $r4.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(10);

     label1:
        specialinvoke $r4.<org.xml.sax.helpers.XMLFilterImpl: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        $r0 = $r4.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        virtualinvoke $r0.<org.xml.sax.helpers.NamespaceSupport: void popContext()>();

        $i1 = $r4.<com.oopsconsultancy.xmltask.output.XMLWriter: int elementLevel>;

        $i2 = $i1 + -1;

        $r4.<com.oopsconsultancy.xmltask.output.XMLWriter: int elementLevel> = $i2;

        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.Writer $r0;
        com.oopsconsultancy.xmltask.output.XMLWriter $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r0 = $r1.<com.oopsconsultancy.xmltask.output.XMLWriter: java.io.Writer output>;

        virtualinvoke $r0.<java.io.Writer: void flush()>();

        return;
    }

    public void forceNSDecl(java.lang.String)
    {
        java.lang.Boolean $r0;
        java.util.Hashtable $r1;
        java.lang.String $r2;
        com.oopsconsultancy.xmltask.output.XMLWriter $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r2 := @parameter0: java.lang.String;

        $r1 = $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: java.util.Hashtable forcedDeclTable>;

        $r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r0);

        return;
    }

    public void forceNSDecl(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        com.oopsconsultancy.xmltask.output.XMLWriter $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void setPrefix(java.lang.String,java.lang.String)>($r0, $r1);

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void forceNSDecl(java.lang.String)>($r0);

        return;
    }

    public java.lang.String getPrefix(java.lang.String)
    {
        java.lang.Object $r0;
        java.util.Hashtable $r1;
        java.lang.String $r2, $r4;
        com.oopsconsultancy.xmltask.output.XMLWriter $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r2 := @parameter0: java.lang.String;

        $r1 = $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: java.util.Hashtable prefixTable>;

        $r0 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.lang.String) $r0;

        return $r4;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        int $i0, $i1;
        char[] $r0;
        com.oopsconsultancy.xmltask.output.XMLWriter $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke $r1.<com.oopsconsultancy.xmltask.output.XMLWriter: void writeEsc(char[],int,int,boolean)>($r0, $i0, $i1, 0);

        specialinvoke $r1.<org.xml.sax.helpers.XMLFilterImpl: void ignorableWhitespace(char[],int,int)>($r0, $i0, $i1);

        return;
    }

    protected void init(java.io.Writer)
    {
        java.util.Hashtable $r0, $r4, $r5;
        org.xml.sax.helpers.NamespaceSupport $r1;
        java.io.Writer $r2;
        com.oopsconsultancy.xmltask.output.XMLWriter $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r2 := @parameter0: java.io.Writer;

        virtualinvoke $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: void setOutput(java.io.Writer)>($r2);

        $r1 = new org.xml.sax.helpers.NamespaceSupport;

        specialinvoke $r1.<org.xml.sax.helpers.NamespaceSupport: void <init>()>();

        $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport> = $r1;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: java.util.Hashtable prefixTable> = $r0;

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>()>();

        $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: java.util.Hashtable forcedDeclTable> = $r4;

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: java.util.Hashtable doneDeclTable> = $r5;

        return;
    }

    public void nonescapedcharacters(char[], int, int) throws org.xml.sax.SAXException
    {
        char $c0;
        int $i1, $i2, $i3, $i4;
        char[] $r0;
        com.oopsconsultancy.xmltask.output.XMLWriter $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r0 := @parameter0: char[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = $i1;

     label1:
        $i4 = $i1 + $i2;

        if $i3 >= $i4 goto label2;

        $c0 = $r0[$i3];

        virtualinvoke $r1.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>($c0);

        $i3 = $i3 + 1;

        goto label1;

     label2:
        specialinvoke $r1.<org.xml.sax.helpers.XMLFilterImpl: void characters(char[],int,int)>($r0, $i1, $i2);

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        int $i0;
        java.lang.String $r0, $r1;
        com.oopsconsultancy.xmltask.output.XMLWriter $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>("<?");

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>($r0);

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(32);

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>($r1);

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>("?>");

        $i0 = $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: int elementLevel>;

        if $i0 >= 1 goto label1;

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(10);

     label1:
        specialinvoke $r2.<org.xml.sax.helpers.XMLFilterImpl: void processingInstruction(java.lang.String,java.lang.String)>($r0, $r1);

        return;
    }

    public void reset()
    {
        org.xml.sax.helpers.NamespaceSupport $r0;
        com.oopsconsultancy.xmltask.output.XMLWriter $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r1.<com.oopsconsultancy.xmltask.output.XMLWriter: int elementLevel> = 0;

        $r1.<com.oopsconsultancy.xmltask.output.XMLWriter: int prefixCounter> = 0;

        $r0 = $r1.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        virtualinvoke $r0.<org.xml.sax.helpers.NamespaceSupport: void reset()>();

        return;
    }

    public void setOutput(java.io.Writer)
    {
        java.io.PrintStream $r0;
        java.io.OutputStreamWriter $r1;
        java.io.Writer $r2;
        com.oopsconsultancy.xmltask.output.XMLWriter $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r2 := @parameter0: java.io.Writer;

        if $r2 != null goto label1;

        $r1 = new java.io.OutputStreamWriter;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r0);

        $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: java.io.Writer output> = $r1;

        return;

     label1:
        $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: java.io.Writer output> = $r2;

        return;
    }

    public void setPrefix(java.lang.String, java.lang.String)
    {
        java.util.Hashtable $r0;
        java.lang.String $r1, $r2;
        com.oopsconsultancy.xmltask.output.XMLWriter $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r0 = $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: java.util.Hashtable prefixTable>;

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        com.oopsconsultancy.xmltask.output.XMLWriter $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.output.XMLWriter: void reset()>();

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>("<?xml version=\"1.0\" standalone=\"yes\"?>\n\n");

        specialinvoke $r0.<org.xml.sax.helpers.XMLFilterImpl: void startDocument()>();

        return;
    }

    public void startElement(java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.Attributes $r0;
        java.lang.String $r1;
        com.oopsconsultancy.xmltask.output.XMLWriter $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r1 := @parameter0: java.lang.String;

        $r0 = $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS>;

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>("", $r1, "", $r0);

        return;
    }

    public void startElement(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.Attributes $r0;
        java.lang.String $r1, $r2;
        com.oopsconsultancy.xmltask.output.XMLWriter $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r0 = $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS>;

        virtualinvoke $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>($r1, $r2, "", $r0);

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.xml.sax.helpers.NamespaceSupport $r0;
        int $i0, $i1, $i2;
        org.xml.sax.Attributes $r1;
        java.lang.String $r2, $r3, $r4;
        com.oopsconsultancy.xmltask.output.XMLWriter $r5;

        $r5 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $r4 := @parameter2: java.lang.String;

        $r1 := @parameter3: org.xml.sax.Attributes;

        $i0 = $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: int elementLevel>;

        $i1 = $i0 + 1;

        $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: int elementLevel> = $i1;

        $r0 = $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        virtualinvoke $r0.<org.xml.sax.helpers.NamespaceSupport: void pushContext()>();

        virtualinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(60);

        specialinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void writeName(java.lang.String,java.lang.String,java.lang.String,boolean)>($r2, $r3, $r4, 1);

        specialinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void writeAttributes(org.xml.sax.Attributes)>($r1);

        $i2 = $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: int elementLevel>;

        if $i2 != 1 goto label1;

        specialinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void forceNSDecls()>();

     label1:
        specialinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void writeNSDecls()>();

        virtualinvoke $r5.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(62);

        specialinvoke $r5.<org.xml.sax.helpers.XMLFilterImpl: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>($r2, $r3, $r4, $r1);

        return;
    }

    protected void write(char) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r0;
        java.io.Writer $r1;
        java.io.IOException $r2;
        char $c0;
        com.oopsconsultancy.xmltask.output.XMLWriter $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $c0 := @parameter0: char;

        $r1 = $r3.<com.oopsconsultancy.xmltask.output.XMLWriter: java.io.Writer output>;

     label1:
        virtualinvoke $r1.<java.io.Writer: void write(int)>($c0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r0 = new org.xml.sax.SAXException;

        specialinvoke $r0.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r2);

        throw $r0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected void write(java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r0;
        java.io.Writer $r1;
        java.io.IOException $r2;
        java.lang.String $r3;
        com.oopsconsultancy.xmltask.output.XMLWriter $r4;

        $r4 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r3 := @parameter0: java.lang.String;

        $r1 = $r4.<com.oopsconsultancy.xmltask.output.XMLWriter: java.io.Writer output>;

     label1:
        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r3);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r0 = new org.xml.sax.SAXException;

        specialinvoke $r0.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r2);

        throw $r0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected void writeEsc(char[], int, int, boolean) throws org.xml.sax.SAXException
    {
        char $c0, $c5, $c6, $c7;
        java.lang.String $r0;
        boolean $z0;
        int $i1, $i2, $i3, $i4;
        char[] $r1;
        com.oopsconsultancy.xmltask.output.XMLWriter $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.output.XMLWriter;

        $r1 := @parameter0: char[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i3 = $i1;

     label01:
        $i4 = $i1 + $i2;

        if $i3 >= $i4 goto label10;

        $c0 = $r1[$i3];

        lookupswitch($c0)
        {
            case 34: goto label07;
            case 38: goto label04;
            case 60: goto label05;
            case 62: goto label06;
            default: goto label02;
        };

     label02:
        $c5 = $r1[$i3];

        if $c5 <= 127 goto label09;

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>("&#");

        $c6 = $r1[$i3];

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($c6);

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>($r0);

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(59);

     label03:
        $i3 = $i3 + 1;

        goto label01;

     label04:
        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>("&amp;");

        goto label03;

     label05:
        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>("&lt;");

        goto label03;

     label06:
        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>("&gt;");

        goto label03;

     label07:
        if $z0 == 0 goto label08;

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(java.lang.String)>("&quot;");

        goto label03;

     label08:
        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>(34);

        goto label03;

     label09:
        $c7 = $r1[$i3];

        virtualinvoke $r2.<com.oopsconsultancy.xmltask.output.XMLWriter: void write(char)>($c7);

        goto label03;

     label10:
        return;
    }
}
