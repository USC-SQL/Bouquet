public class org.json.simple.parser.Yytoken extends java.lang.Object
{
    public static final int TYPE_COLON;
    public static final int TYPE_COMMA;
    public static final int TYPE_EOF;
    public static final int TYPE_LEFT_BRACE;
    public static final int TYPE_LEFT_SQUARE;
    public static final int TYPE_RIGHT_BRACE;
    public static final int TYPE_RIGHT_SQUARE;
    public static final int TYPE_VALUE;
    public int type;
    public java.lang.Object value;

    public void <init>(int, java.lang.Object)
    {
        java.lang.Object $r0;
        int $i0;
        org.json.simple.parser.Yytoken $r1;

        $r1 := @this: org.json.simple.parser.Yytoken;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r1.<org.json.simple.parser.Yytoken: int type> = 0;

        $r1.<org.json.simple.parser.Yytoken: java.lang.Object value> = null;

        $r1.<org.json.simple.parser.Yytoken: int type> = $i0;

        $r1.<org.json.simple.parser.Yytoken: java.lang.Object value> = $r0;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r0;
        java.lang.Object $r1;
        int $i0;
        java.lang.StringBuffer $r2, $r3, $r5;
        org.json.simple.parser.Yytoken $r4;

        $r4 := @this: org.json.simple.parser.Yytoken;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $i0 = $r4.<org.json.simple.parser.Yytoken: int type>;

        lookupswitch($i0)
        {
            case -1: goto label9;
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label8;
            default: goto label1;
        };

     label1:
        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label2:
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("VALUE(");

        $r1 = $r4.<org.json.simple.parser.Yytoken: java.lang.Object value>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        goto label1;

     label3:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("LEFT BRACE({)");

        goto label1;

     label4:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RIGHT BRACE(})");

        goto label1;

     label5:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("LEFT SQUARE([)");

        goto label1;

     label6:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RIGHT SQUARE(])");

        goto label1;

     label7:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("COMMA(,)");

        goto label1;

     label8:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("COLON(:)");

        goto label1;

     label9:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("END OF FILE");

        goto label1;
    }

    public static void <clinit>()
    {
        <org.json.simple.parser.Yytoken: int TYPE_COLON> = 6;

        <org.json.simple.parser.Yytoken: int TYPE_RIGHT_SQUARE> = 4;

        <org.json.simple.parser.Yytoken: int TYPE_RIGHT_BRACE> = 2;

        <org.json.simple.parser.Yytoken: int TYPE_LEFT_SQUARE> = 3;

        <org.json.simple.parser.Yytoken: int TYPE_LEFT_BRACE> = 1;

        <org.json.simple.parser.Yytoken: int TYPE_EOF> = -1;

        <org.json.simple.parser.Yytoken: int TYPE_COMMA> = 5;

        <org.json.simple.parser.Yytoken: int TYPE_COLON> = 6;

        return;
    }
}
