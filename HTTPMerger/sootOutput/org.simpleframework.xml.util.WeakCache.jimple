public class org.simpleframework.xml.util.WeakCache extends java.lang.Object implements org.simpleframework.xml.util.Cache
{
    private org.simpleframework.xml.util.WeakCache$SegmentList list;

    public void <init>()
    {
        org.simpleframework.xml.util.WeakCache $r0;

        $r0 := @this: org.simpleframework.xml.util.WeakCache;

        specialinvoke $r0.<org.simpleframework.xml.util.WeakCache: void <init>(int)>(10);

        return;
    }

    public void <init>(int)
    {
        org.simpleframework.xml.util.WeakCache$SegmentList $r0;
        int $i0;
        org.simpleframework.xml.util.WeakCache $r1;

        $r1 := @this: org.simpleframework.xml.util.WeakCache;

        $i0 := @parameter0: int;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r0 = new org.simpleframework.xml.util.WeakCache$SegmentList;

        specialinvoke $r0.<org.simpleframework.xml.util.WeakCache$SegmentList: void <init>(org.simpleframework.xml.util.WeakCache,int)>($r1, $i0);

        $r1.<org.simpleframework.xml.util.WeakCache: org.simpleframework.xml.util.WeakCache$SegmentList list> = $r0;

        return;
    }

    private org.simpleframework.xml.util.WeakCache$Segment map(java.lang.Object)
    {
        org.simpleframework.xml.util.WeakCache$Segment $r0;
        org.simpleframework.xml.util.WeakCache$SegmentList $r1;
        java.lang.Object $r2;
        org.simpleframework.xml.util.WeakCache $r3;

        $r3 := @this: org.simpleframework.xml.util.WeakCache;

        $r2 := @parameter0: java.lang.Object;

        $r1 = $r3.<org.simpleframework.xml.util.WeakCache: org.simpleframework.xml.util.WeakCache$SegmentList list>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.util.WeakCache$SegmentList: org.simpleframework.xml.util.WeakCache$Segment get(java.lang.Object)>($r2);

        return $r0;
    }

    public void cache(java.lang.Object, java.lang.Object)
    {
        org.simpleframework.xml.util.WeakCache$Segment $r0;
        java.lang.Object $r1, $r2;
        org.simpleframework.xml.util.WeakCache $r3;

        $r3 := @this: org.simpleframework.xml.util.WeakCache;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r0 = specialinvoke $r3.<org.simpleframework.xml.util.WeakCache: org.simpleframework.xml.util.WeakCache$Segment map(java.lang.Object)>($r1);

        virtualinvoke $r0.<org.simpleframework.xml.util.WeakCache$Segment: void cache(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public boolean contains(java.lang.Object)
    {
        boolean $z0;
        org.simpleframework.xml.util.WeakCache$Segment $r0;
        java.lang.Object $r1;
        org.simpleframework.xml.util.WeakCache $r2;

        $r2 := @this: org.simpleframework.xml.util.WeakCache;

        $r1 := @parameter0: java.lang.Object;

        $r0 = specialinvoke $r2.<org.simpleframework.xml.util.WeakCache: org.simpleframework.xml.util.WeakCache$Segment map(java.lang.Object)>($r1);

        $z0 = virtualinvoke $r0.<org.simpleframework.xml.util.WeakCache$Segment: boolean contains(java.lang.Object)>($r1);

        return $z0;
    }

    public java.lang.Object fetch(java.lang.Object)
    {
        org.simpleframework.xml.util.WeakCache$Segment $r0;
        java.lang.Object $r1, $r3;
        org.simpleframework.xml.util.WeakCache $r2;

        $r2 := @this: org.simpleframework.xml.util.WeakCache;

        $r1 := @parameter0: java.lang.Object;

        $r0 = specialinvoke $r2.<org.simpleframework.xml.util.WeakCache: org.simpleframework.xml.util.WeakCache$Segment map(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r0.<org.simpleframework.xml.util.WeakCache$Segment: java.lang.Object fetch(java.lang.Object)>($r1);

        return $r3;
    }

    public java.lang.Object take(java.lang.Object)
    {
        org.simpleframework.xml.util.WeakCache$Segment $r0;
        java.lang.Object $r1, $r3;
        org.simpleframework.xml.util.WeakCache $r2;

        $r2 := @this: org.simpleframework.xml.util.WeakCache;

        $r1 := @parameter0: java.lang.Object;

        $r0 = specialinvoke $r2.<org.simpleframework.xml.util.WeakCache: org.simpleframework.xml.util.WeakCache$Segment map(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r0.<org.simpleframework.xml.util.WeakCache$Segment: java.lang.Object take(java.lang.Object)>($r1);

        return $r3;
    }
}
