public class com.oopsconsultancy.xmltask.XmlReplacement extends java.lang.Object
{
    private final org.w3c.dom.Document doc;
    private int failures;
    private final java.util.List replacements;
    private boolean report;
    private final org.apache.tools.ant.Task task;

    public void <init>(org.w3c.dom.Document, org.apache.tools.ant.Task)
    {
        java.util.ArrayList $r0;
        org.apache.tools.ant.Task $r1;
        org.w3c.dom.Document $r2;
        com.oopsconsultancy.xmltask.XmlReplacement $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.XmlReplacement;

        $r2 := @parameter0: org.w3c.dom.Document;

        $r1 := @parameter1: org.apache.tools.ant.Task;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3.<com.oopsconsultancy.xmltask.XmlReplacement: java.util.List replacements> = $r0;

        $r3.<com.oopsconsultancy.xmltask.XmlReplacement: boolean report> = 0;

        $r3.<com.oopsconsultancy.xmltask.XmlReplacement: int failures> = 0;

        $r3.<com.oopsconsultancy.xmltask.XmlReplacement: org.w3c.dom.Document doc> = $r2;

        $r3.<com.oopsconsultancy.xmltask.XmlReplacement: org.apache.tools.ant.Task task> = $r1;

        return;
    }

    private void output() throws java.lang.Exception
    {
        org.w3c.dom.Document $r0;
        com.oopsconsultancy.xmltask.XmlReplacement $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.XmlReplacement;

        $r0 = $r1.<com.oopsconsultancy.xmltask.XmlReplacement: org.w3c.dom.Document doc>;

        specialinvoke $r1.<com.oopsconsultancy.xmltask.XmlReplacement: void output(java.lang.String,org.w3c.dom.Document)>("Document", $r0);

        return;
    }

    private void output(java.lang.String, org.w3c.dom.Document) throws java.lang.Exception
    {
        java.io.PrintStream $r0;
        javax.xml.transform.stream.StreamResult $r1;
        javax.xml.transform.dom.DOMSource $r2;
        javax.xml.transform.Transformer $r3;
        javax.xml.transform.TransformerFactory $r4;
        java.lang.StringBuilder $r5, $r11, $r12, $r15, $r16, $r17;
        org.apache.tools.ant.Task $r6, $r13, $r14;
        org.w3c.dom.Document $r7;
        java.lang.String $r8, $r9, $r18;
        com.oopsconsultancy.xmltask.XmlReplacement $r10;

        $r10 := @this: com.oopsconsultancy.xmltask.XmlReplacement;

        $r8 := @parameter0: java.lang.String;

        $r7 := @parameter1: org.w3c.dom.Document;

        $r6 = $r10.<com.oopsconsultancy.xmltask.XmlReplacement: org.apache.tools.ant.Task task>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -->");

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.tools.ant.Task: void log(java.lang.String)>($r9);

        $r4 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r3 = virtualinvoke $r4.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r3.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("omit-xml-declaration", "yes");

        $r2 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r2.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r7);

        $r1 = new javax.xml.transform.stream.StreamResult;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r1.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>($r0);

        virtualinvoke $r3.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r2, $r1);

        $r13 = $r10.<com.oopsconsultancy.xmltask.XmlReplacement: org.apache.tools.ant.Task task>;

        virtualinvoke $r13.<org.apache.tools.ant.Task: void log(java.lang.String)>("");

        $r14 = $r10.<com.oopsconsultancy.xmltask.XmlReplacement: org.apache.tools.ant.Task task>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <--");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<org.apache.tools.ant.Task: void log(java.lang.String)>($r18);

        return;
    }

    public void add(com.oopsconsultancy.xmltask.XmlReplace)
    {
        java.util.List $r0;
        com.oopsconsultancy.xmltask.XmlReplace $r1;
        com.oopsconsultancy.xmltask.XmlReplacement $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.XmlReplacement;

        $r1 := @parameter0: com.oopsconsultancy.xmltask.XmlReplace;

        $r0 = $r2.<com.oopsconsultancy.xmltask.XmlReplacement: java.util.List replacements>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public org.w3c.dom.Document apply()
    {
        java.lang.Throwable r0;
        java.lang.Exception $r1;
        org.w3c.dom.Element $r2, $r17;
        java.lang.String $r3;
        org.apache.tools.ant.Task $r4;
        int $i0, $i1, $i2, $i3, $i4;
        org.w3c.dom.Document $r5, $r15, $r16, $r18;
        com.oopsconsultancy.xmltask.XmlReplace $r6;
        java.lang.Object $r7;
        java.util.Iterator $r8;
        java.lang.StringBuilder $r9, r10, $r14;
        java.util.List $r11;
        boolean $z0, $z1, $z2;
        org.apache.tools.ant.BuildException $r12;
        com.oopsconsultancy.xmltask.XmlReplacement $r13;

        $r13 := @this: com.oopsconsultancy.xmltask.XmlReplacement;

        $r11 = $r13.<com.oopsconsultancy.xmltask.XmlReplacement: java.util.List replacements>;

        $r8 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

        $z0 = 1;

     label01:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label15;

        if $z0 == 0 goto label15;

        $r7 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.oopsconsultancy.xmltask.XmlReplace) $r7;

     label02:
        $r5 = $r13.<com.oopsconsultancy.xmltask.XmlReplacement: org.w3c.dom.Document doc>;

     label03:
        $i0 = virtualinvoke $r6.<com.oopsconsultancy.xmltask.XmlReplace: int apply(org.w3c.dom.Document)>($r5);

     label04:
        if $i0 != 0 goto label07;

        $i1 = $r13.<com.oopsconsultancy.xmltask.XmlReplacement: int failures>;

        $i2 = $i1 + 1;

        $r13.<com.oopsconsultancy.xmltask.XmlReplacement: int failures> = $i2;

        $r4 = $r13.<com.oopsconsultancy.xmltask.XmlReplacement: org.apache.tools.ant.Task task>;

     label05:
        r10 = new java.lang.StringBuilder;

     label06:
        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed to match");

        $r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.tools.ant.Task: void log(java.lang.String,int)>($r3, 3);

     label07:
        $r15 = $r13.<com.oopsconsultancy.xmltask.XmlReplacement: org.w3c.dom.Document doc>;

        $r2 = interfaceinvoke $r15.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

     label08:
        if $r2 == null goto label10;

     label09:
        $r16 = $r13.<com.oopsconsultancy.xmltask.XmlReplacement: org.w3c.dom.Document doc>;

        $r17 = interfaceinvoke $r16.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        interfaceinvoke $r17.<org.w3c.dom.Element: void normalize()>();

     label10:
        $z2 = $r13.<com.oopsconsultancy.xmltask.XmlReplacement: boolean report>;

     label11:
        if $z2 == 0 goto label01;

        specialinvoke $r13.<com.oopsconsultancy.xmltask.XmlReplacement: void output()>();

     label12:
        goto label01;

     label13:
        $r12 := @caughtexception;

        r0 = (java.lang.Throwable) $r12;

        throw r0;

     label14:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        $z0 = 0;

        $i3 = $r13.<com.oopsconsultancy.xmltask.XmlReplacement: int failures>;

        $i4 = $i3 + 1;

        $r13.<com.oopsconsultancy.xmltask.XmlReplacement: int failures> = $i4;

        goto label01;

     label15:
        $r18 = $r13.<com.oopsconsultancy.xmltask.XmlReplacement: org.w3c.dom.Document doc>;

        return $r18;

        catch org.apache.tools.ant.BuildException from label03 to label04 with label13;
        catch org.apache.tools.ant.BuildException from label06 to label08 with label13;
        catch org.apache.tools.ant.BuildException from label09 to label10 with label13;
        catch org.apache.tools.ant.BuildException from label11 to label12 with label13;
        catch java.lang.Exception from label02 to label05 with label14;
        catch java.lang.Exception from label06 to label12 with label14;
    }

    public int getFailures()
    {
        int i0;
        com.oopsconsultancy.xmltask.XmlReplacement $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.XmlReplacement;

        i0 = $r0.<com.oopsconsultancy.xmltask.XmlReplacement: int failures>;

        return i0;
    }

    public void setReport(boolean)
    {
        boolean $z0;
        com.oopsconsultancy.xmltask.XmlReplacement $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.XmlReplacement;

        $z0 := @parameter0: boolean;

        $r0.<com.oopsconsultancy.xmltask.XmlReplacement: boolean report> = $z0;

        return;
    }
}
