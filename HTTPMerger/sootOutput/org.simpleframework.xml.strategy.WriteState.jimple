class org.simpleframework.xml.strategy.WriteState extends org.simpleframework.xml.util.WeakCache
{
    private org.simpleframework.xml.strategy.Contract contract;

    public void <init>(org.simpleframework.xml.strategy.Contract)
    {
        org.simpleframework.xml.strategy.Contract $r0;
        org.simpleframework.xml.strategy.WriteState $r1;

        $r1 := @this: org.simpleframework.xml.strategy.WriteState;

        $r0 := @parameter0: org.simpleframework.xml.strategy.Contract;

        specialinvoke $r1.<org.simpleframework.xml.util.WeakCache: void <init>()>();

        $r1.<org.simpleframework.xml.strategy.WriteState: org.simpleframework.xml.strategy.Contract contract> = $r0;

        return;
    }

    public org.simpleframework.xml.strategy.WriteGraph find(java.lang.Object)
    {
        org.simpleframework.xml.strategy.WriteGraph $r0, $r5;
        org.simpleframework.xml.strategy.Contract $r1;
        java.lang.Object $r2, $r3;
        org.simpleframework.xml.strategy.WriteState $r4;

        $r4 := @this: org.simpleframework.xml.strategy.WriteState;

        $r2 := @parameter0: java.lang.Object;

        $r3 = virtualinvoke $r4.<org.simpleframework.xml.strategy.WriteState: java.lang.Object fetch(java.lang.Object)>($r2);

        $r0 = (org.simpleframework.xml.strategy.WriteGraph) $r3;

        if $r0 != null goto label1;

        $r5 = new org.simpleframework.xml.strategy.WriteGraph;

        $r1 = $r4.<org.simpleframework.xml.strategy.WriteState: org.simpleframework.xml.strategy.Contract contract>;

        specialinvoke $r5.<org.simpleframework.xml.strategy.WriteGraph: void <init>(org.simpleframework.xml.strategy.Contract)>($r1);

        virtualinvoke $r4.<org.simpleframework.xml.strategy.WriteState: void cache(java.lang.Object,java.lang.Object)>($r2, $r5);

        return $r5;

     label1:
        return $r0;
    }
}
