public class usc.edu.AgentURLConnection extends java.lang.Object
{
    public static java.util.Hashtable contentcache;

    public void <init>()
    {
        usc.edu.AgentURLConnection r0;

        r0 := @this: usc.edu.AgentURLConnection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String getStringFromInputStream(java.io.InputStream)
    {
        java.io.InputStreamReader $r0;
        java.lang.Throwable r1, $r2;
        java.io.IOException r3, r4, $r5, $r6, $r7, $r8, r9, r10;
        java.lang.String r11, $r12, $r13;
        java.lang.StringBuilder r14, $r15;
        java.io.BufferedReader r16, $r17;
        java.io.InputStream r18;

        r18 := @parameter0: java.io.InputStream;

        r16 = null;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        r14 = $r15;

     label01:
        $r17 = new java.io.BufferedReader;

        $r0 = new java.io.InputStreamReader;

        specialinvoke $r0.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r18);

        specialinvoke $r17.<java.io.BufferedReader: void <init>(java.io.Reader)>($r0);

        r16 = $r17;

     label02:
        $r12 = virtualinvoke r16.<java.io.BufferedReader: java.lang.String readLine()>();

        r11 = $r12;

        if $r12 == null goto label03;

        virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        goto label02;

     label03:
        if r16 == null goto label18;

     label04:
        virtualinvoke r16.<java.io.BufferedReader: void close()>();

     label05:
        goto label18;

     label06:
        $r7 := @caughtexception;

        r3 = $r7;

        virtualinvoke r3.<java.io.IOException: void printStackTrace()>();

        goto label18;

     label07:
        $r6 := @caughtexception;

        r9 = $r6;

        virtualinvoke r9.<java.io.IOException: void printStackTrace()>();

     label08:
        if r16 == null goto label18;

     label09:
        virtualinvoke r16.<java.io.BufferedReader: void close()>();

     label10:
        goto label18;

     label11:
        $r8 := @caughtexception;

        r10 = $r8;

        virtualinvoke r10.<java.io.IOException: void printStackTrace()>();

        goto label18;

     label12:
        $r2 := @caughtexception;

        r1 = $r2;

     label13:
        if r16 == null goto label17;

     label14:
        virtualinvoke r16.<java.io.BufferedReader: void close()>();

     label15:
        goto label17;

     label16:
        $r5 := @caughtexception;

        r4 = $r5;

        virtualinvoke r4.<java.io.IOException: void printStackTrace()>();

     label17:
        throw r1;

     label18:
        $r13 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label01 to label03 with label07;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label03 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public static boolean getAllowUserInteraction(java.net.URLConnection)
    {
        boolean $z0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        $z0 = virtualinvoke r0.<java.net.URLConnection: boolean getAllowUserInteraction()>();

        return $z0;
    }

    public static java.lang.Object getContent(java.net.URLConnection) throws java.io.IOException
    {
        java.lang.Object $r0;
        java.net.URLConnection r1;

        r1 := @parameter0: java.net.URLConnection;

        $r0 = virtualinvoke r1.<java.net.URLConnection: java.lang.Object getContent()>();

        return $r0;
    }

    public static java.lang.Object getContent(java.net.URLConnection, java.lang.Class[]) throws java.io.IOException
    {
        java.lang.Object $r0;
        java.lang.Class[] r1;
        java.net.URLConnection r2;

        r2 := @parameter0: java.net.URLConnection;

        r1 := @parameter1: java.lang.Class[];

        $r0 = virtualinvoke r2.<java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])>(r1);

        return $r0;
    }

    public static java.lang.String getContentEncoding(java.net.URLConnection)
    {
        java.lang.String $r0;
        java.net.URLConnection r1;

        r1 := @parameter0: java.net.URLConnection;

        $r0 = virtualinvoke r1.<java.net.URLConnection: java.lang.String getContentEncoding()>();

        return $r0;
    }

    public static int getContentLength(java.net.URLConnection)
    {
        int $i0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        $i0 = virtualinvoke r0.<java.net.URLConnection: int getContentLength()>();

        return $i0;
    }

    public static java.lang.String getContentType(java.net.URLConnection)
    {
        java.lang.String $r0;
        java.net.URLConnection r1;

        r1 := @parameter0: java.net.URLConnection;

        $r0 = virtualinvoke r1.<java.net.URLConnection: java.lang.String getContentType()>();

        return $r0;
    }

    public static long getDate(java.net.URLConnection)
    {
        long $l0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        $l0 = virtualinvoke r0.<java.net.URLConnection: long getDate()>();

        return $l0;
    }

    public static boolean getDefaultUseCaches(java.net.URLConnection)
    {
        boolean $z0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        $z0 = virtualinvoke r0.<java.net.URLConnection: boolean getDefaultUseCaches()>();

        return $z0;
    }

    public static boolean getDoInput(java.net.URLConnection)
    {
        boolean $z0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        $z0 = virtualinvoke r0.<java.net.URLConnection: boolean getDoInput()>();

        return $z0;
    }

    public static boolean getDoOutput(java.net.URLConnection)
    {
        boolean $z0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        $z0 = virtualinvoke r0.<java.net.URLConnection: boolean getDoOutput()>();

        return $z0;
    }

    public static long getExpiration(java.net.URLConnection)
    {
        long $l0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        $l0 = virtualinvoke r0.<java.net.URLConnection: long getExpiration()>();

        return $l0;
    }

    public static java.lang.String getHeaderField(java.net.URLConnection, int)
    {
        java.lang.String $r0;
        int i0;
        java.net.URLConnection r1;

        r1 := @parameter0: java.net.URLConnection;

        i0 := @parameter1: int;

        $r0 = virtualinvoke r1.<java.net.URLConnection: java.lang.String getHeaderField(int)>(i0);

        return $r0;
    }

    public static java.util.Map getHeaderFields(java.net.URLConnection)
    {
        java.util.Map $r0;
        java.net.URLConnection r1;

        r1 := @parameter0: java.net.URLConnection;

        $r0 = virtualinvoke r1.<java.net.URLConnection: java.util.Map getHeaderFields()>();

        return $r0;
    }

    public static java.util.Map getRequestProperties(java.net.URLConnection)
    {
        java.util.Map $r0;
        java.net.URLConnection r1;

        r1 := @parameter0: java.net.URLConnection;

        $r0 = virtualinvoke r1.<java.net.URLConnection: java.util.Map getRequestProperties()>();

        return $r0;
    }

    public static void addRequestProperty(java.net.URLConnection, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.net.URLConnection r2;

        r2 := @parameter0: java.net.URLConnection;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        virtualinvoke r2.<java.net.URLConnection: void addRequestProperty(java.lang.String,java.lang.String)>(r0, r1);

        return;
    }

    public static java.lang.String getHeaderField(java.net.URLConnection, java.lang.String)
    {
        java.lang.String r0, $r1;
        java.net.URLConnection r2;

        r2 := @parameter0: java.net.URLConnection;

        r0 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r2.<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>(r0);

        return $r1;
    }

    public static long getHeaderFieldDate(java.net.URLConnection, java.lang.String, long)
    {
        long l0, $l1;
        java.lang.String r0;
        java.net.URLConnection r1;

        r1 := @parameter0: java.net.URLConnection;

        r0 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $l1 = virtualinvoke r1.<java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)>(r0, l0);

        return $l1;
    }

    public static int getHeaderFieldInt(java.net.URLConnection, java.lang.String, int)
    {
        int i0, $i1;
        java.lang.String r0;
        java.net.URLConnection r1;

        r1 := @parameter0: java.net.URLConnection;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i1 = virtualinvoke r1.<java.net.URLConnection: int getHeaderFieldInt(java.lang.String,int)>(r0, i0);

        return $i1;
    }

    public static java.lang.String getHeaderFieldKey(java.net.URLConnection, int)
    {
        java.lang.String $r0;
        int i0;
        java.net.URLConnection r1;

        r1 := @parameter0: java.net.URLConnection;

        i0 := @parameter1: int;

        $r0 = virtualinvoke r1.<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)>(i0);

        return $r0;
    }

    public static long getIfModifiedSince(java.net.URLConnection)
    {
        long $l0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        $l0 = virtualinvoke r0.<java.net.URLConnection: long getIfModifiedSince()>();

        return $l0;
    }

    public static java.io.InputStream getInputStream(java.net.URLConnection) throws java.io.IOException
    {
        java.util.Hashtable $r0;
        byte[] $r1;
        boolean $z0;
        java.net.URL $r2;
        java.io.PrintStream $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String[] r10;
        java.io.ByteArrayInputStream r11, $r12;
        java.lang.String r13, $r14, $r15, $r16, $r17;
        java.io.InputStream r18;
        long l0, l1, $l2;
        java.net.URLConnection r19;

        r19 := @parameter0: java.net.URLConnection;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("It works! ");

        $r2 = virtualinvoke r19.<java.net.URLConnection: java.net.URL getURL()>();

        $r14 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $z0 = virtualinvoke r19.<java.net.URLConnection: boolean getDoOutput()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r15);

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r18 = virtualinvoke r19.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        r13 = staticinvoke <usc.edu.AgentURLConnection: java.lang.String getStringFromInputStream(java.io.InputStream)>(r18);

        $r12 = new java.io.ByteArrayInputStream;

        $r1 = virtualinvoke r13.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r12.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        r11 = $r12;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r10 = virtualinvoke r13.<java.lang.String: java.lang.String[] split(java.lang.String)>("<");

        $r0 = <usc.edu.AgentURLConnection: java.util.Hashtable contentcache>;

        $r16 = r10[0];

        $r17 = r10[1];

        virtualinvoke $r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $l2 = l1 - l0;

        virtualinvoke $r4.<java.io.PrintStream: void println(long)>($l2);

        return r11;
    }

    public static long getLastModified(java.net.URLConnection)
    {
        long $l0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        $l0 = virtualinvoke r0.<java.net.URLConnection: long getLastModified()>();

        return $l0;
    }

    public static java.io.OutputStream getOutputStream(java.net.URLConnection) throws java.io.IOException
    {
        java.io.OutputStream $r0;
        java.net.URLConnection r1;

        r1 := @parameter0: java.net.URLConnection;

        $r0 = virtualinvoke r1.<java.net.URLConnection: java.io.OutputStream getOutputStream()>();

        return $r0;
    }

    public static java.security.Permission getPermission(java.net.URLConnection) throws java.io.IOException
    {
        java.security.Permission $r0;
        java.net.URLConnection r1;

        r1 := @parameter0: java.net.URLConnection;

        $r0 = virtualinvoke r1.<java.net.URLConnection: java.security.Permission getPermission()>();

        return $r0;
    }

    public static java.lang.String getRequestProperty(java.net.URLConnection, java.lang.String)
    {
        java.lang.String r0, $r1;
        java.net.URLConnection r2;

        r2 := @parameter0: java.net.URLConnection;

        r0 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r2.<java.net.URLConnection: java.lang.String getRequestProperty(java.lang.String)>(r0);

        return $r1;
    }

    public static java.net.URL getURL(java.net.URLConnection)
    {
        java.net.URL $r0;
        java.net.URLConnection r1;

        r1 := @parameter0: java.net.URLConnection;

        $r0 = virtualinvoke r1.<java.net.URLConnection: java.net.URL getURL()>();

        return $r0;
    }

    public static boolean getUseCaches(java.net.URLConnection)
    {
        boolean $z0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        $z0 = virtualinvoke r0.<java.net.URLConnection: boolean getUseCaches()>();

        return $z0;
    }

    public static void setAllowUserInteraction(java.net.URLConnection, boolean)
    {
        boolean z0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<java.net.URLConnection: void setAllowUserInteraction(boolean)>(z0);

        return;
    }

    public static void setDefaultUseCaches(java.net.URLConnection, boolean)
    {
        boolean z0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<java.net.URLConnection: void setDefaultUseCaches(boolean)>(z0);

        return;
    }

    public static void setDoInput(java.net.URLConnection, boolean)
    {
        boolean z0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<java.net.URLConnection: void setDoInput(boolean)>(z0);

        return;
    }

    public static void setDoOutput(java.net.URLConnection, boolean)
    {
        boolean z0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<java.net.URLConnection: void setDoOutput(boolean)>(z0);

        return;
    }

    public static void setIfModifiedSince(java.net.URLConnection, long)
    {
        long l0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        l0 := @parameter1: long;

        virtualinvoke r0.<java.net.URLConnection: void setIfModifiedSince(long)>(l0);

        return;
    }

    public static void setRequestProperty(java.net.URLConnection, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.net.URLConnection r2;

        r2 := @parameter0: java.net.URLConnection;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        virtualinvoke r2.<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(r0, r1);

        return;
    }

    public static void setUseCaches(java.net.URLConnection, boolean)
    {
        boolean z0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<java.net.URLConnection: void setUseCaches(boolean)>(z0);

        return;
    }

    public static void setConnectTimeout(java.net.URLConnection, int)
    {
        int i0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        i0 := @parameter1: int;

        virtualinvoke r0.<java.net.URLConnection: void setConnectTimeout(int)>(i0);

        return;
    }

    public static int getConnectTimeout(java.net.URLConnection)
    {
        int $i0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        $i0 = virtualinvoke r0.<java.net.URLConnection: int getConnectTimeout()>();

        return $i0;
    }

    public static void setReadTimeout(java.net.URLConnection, int)
    {
        int i0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        i0 := @parameter1: int;

        virtualinvoke r0.<java.net.URLConnection: void setReadTimeout(int)>(i0);

        return;
    }

    public static int getReadTimeout(java.net.URLConnection)
    {
        int $i0;
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        $i0 = virtualinvoke r0.<java.net.URLConnection: int getReadTimeout()>();

        return $i0;
    }

    public static java.lang.String toString(java.net.URLConnection)
    {
        java.lang.String $r0;
        java.net.URLConnection r1;

        r1 := @parameter0: java.net.URLConnection;

        $r0 = virtualinvoke r1.<java.net.URLConnection: java.lang.String toString()>();

        return $r0;
    }

    public static void connect(java.net.URLConnection) throws java.io.IOException
    {
        java.net.URLConnection r0;

        r0 := @parameter0: java.net.URLConnection;

        virtualinvoke r0.<java.net.URLConnection: void connect()>();

        return;
    }

    public static org.apache.http.HttpResponse HttpResponseexecute(org.apache.http.client.HttpClient, org.apache.http.client.methods.HttpUriRequest) throws java.io.IOException
    {
        org.apache.http.HttpResponse $r0;
        java.io.PrintStream $r1;
        org.apache.http.client.methods.HttpUriRequest r2;
        org.apache.http.client.HttpClient r3;

        r3 := @parameter0: org.apache.http.client.HttpClient;

        r2 := @parameter1: org.apache.http.client.methods.HttpUriRequest;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("it works");

        $r0 = interfaceinvoke r3.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r2);

        return $r0;
    }

    static void <clinit>()
    {
        java.util.Hashtable $r0;

        $r0 = new java.util.Hashtable;

        specialinvoke $r0.<java.util.Hashtable: void <init>()>();

        <usc.edu.AgentURLConnection: java.util.Hashtable contentcache> = $r0;

        return;
    }
}
