class org.simpleframework.xml.transform.CharacterTransform extends java.lang.Object implements org.simpleframework.xml.transform.Transform
{

    void <init>()
    {
        org.simpleframework.xml.transform.CharacterTransform $r0;

        $r0 := @this: org.simpleframework.xml.transform.CharacterTransform;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Character read(java.lang.String) throws java.lang.Exception
    {
        java.lang.Character $r0;
        char $c0;
        java.lang.Object[] $r1;
        org.simpleframework.xml.transform.InvalidFormatException $r2;
        int $i1;
        java.lang.String $r3;
        org.simpleframework.xml.transform.CharacterTransform $r4;

        $r4 := @this: org.simpleframework.xml.transform.CharacterTransform;

        $r3 := @parameter0: java.lang.String;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i1 == 1 goto label1;

        $r2 = new org.simpleframework.xml.transform.InvalidFormatException;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r3;

        specialinvoke $r2.<org.simpleframework.xml.transform.InvalidFormatException: void <init>(java.lang.String,java.lang.Object[])>("Cannot convert \'%s\' to a character", $r1);

        throw $r2;

     label1:
        $c0 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $r0 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        return $r0;
    }

    public volatile java.lang.Object read(java.lang.String) throws java.lang.Exception
    {
        java.lang.Character $r0;
        java.lang.String $r1;
        org.simpleframework.xml.transform.CharacterTransform $r2;

        $r2 := @this: org.simpleframework.xml.transform.CharacterTransform;

        $r1 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r2.<org.simpleframework.xml.transform.CharacterTransform: java.lang.Character read(java.lang.String)>($r1);

        return $r0;
    }

    public java.lang.String write(java.lang.Character) throws java.lang.Exception
    {
        java.lang.String $r0;
        java.lang.Character $r1;
        org.simpleframework.xml.transform.CharacterTransform $r2;

        $r2 := @this: org.simpleframework.xml.transform.CharacterTransform;

        $r1 := @parameter0: java.lang.Character;

        $r0 = virtualinvoke $r1.<java.lang.Character: java.lang.String toString()>();

        return $r0;
    }

    public volatile java.lang.String write(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Character $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        org.simpleframework.xml.transform.CharacterTransform $r3;

        $r3 := @this: org.simpleframework.xml.transform.CharacterTransform;

        $r2 := @parameter0: java.lang.Object;

        $r0 = (java.lang.Character) $r2;

        $r1 = virtualinvoke $r3.<org.simpleframework.xml.transform.CharacterTransform: java.lang.String write(java.lang.Character)>($r0);

        return $r1;
    }
}
