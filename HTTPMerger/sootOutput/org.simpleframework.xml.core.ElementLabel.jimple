class org.simpleframework.xml.core.ElementLabel extends org.simpleframework.xml.core.TemplateLabel
{
    private org.simpleframework.xml.core.Decorator decorator;
    private org.simpleframework.xml.core.Introspector detail;
    private org.simpleframework.xml.stream.Format format;
    private org.simpleframework.xml.Element label;
    private java.lang.String name;
    private java.lang.Class override;
    private java.lang.Class type;

    public void <init>(org.simpleframework.xml.core.Contact, org.simpleframework.xml.Element, org.simpleframework.xml.stream.Format)
    {
        java.lang.String $r0;
        org.simpleframework.xml.core.Qualifier $r1;
        java.lang.Class $r2, $r8;
        org.simpleframework.xml.core.Introspector $r3;
        org.simpleframework.xml.stream.Format $r4;
        org.simpleframework.xml.Element $r5;
        org.simpleframework.xml.core.Contact $r6;
        org.simpleframework.xml.core.ElementLabel $r7;

        $r7 := @this: org.simpleframework.xml.core.ElementLabel;

        $r6 := @parameter0: org.simpleframework.xml.core.Contact;

        $r5 := @parameter1: org.simpleframework.xml.Element;

        $r4 := @parameter2: org.simpleframework.xml.stream.Format;

        specialinvoke $r7.<org.simpleframework.xml.core.TemplateLabel: void <init>()>();

        $r3 = new org.simpleframework.xml.core.Introspector;

        specialinvoke $r3.<org.simpleframework.xml.core.Introspector: void <init>(org.simpleframework.xml.core.Contact,org.simpleframework.xml.core.Label,org.simpleframework.xml.stream.Format)>($r6, $r7, $r4);

        $r7.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Introspector detail> = $r3;

        $r1 = new org.simpleframework.xml.core.Qualifier;

        specialinvoke $r1.<org.simpleframework.xml.core.Qualifier: void <init>(org.simpleframework.xml.core.Contact)>($r6);

        $r7.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Decorator decorator> = $r1;

        $r2 = interfaceinvoke $r6.<org.simpleframework.xml.core.Contact: java.lang.Class getType()>();

        $r7.<org.simpleframework.xml.core.ElementLabel: java.lang.Class type> = $r2;

        $r8 = interfaceinvoke $r5.<org.simpleframework.xml.Element: java.lang.Class type()>();

        $r7.<org.simpleframework.xml.core.ElementLabel: java.lang.Class override> = $r8;

        $r0 = interfaceinvoke $r5.<org.simpleframework.xml.Element: java.lang.String name()>();

        $r7.<org.simpleframework.xml.core.ElementLabel: java.lang.String name> = $r0;

        $r7.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.stream.Format format> = $r4;

        $r7.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.Element label> = $r5;

        return;
    }

    public java.lang.annotation.Annotation getAnnotation()
    {
        org.simpleframework.xml.Element r0;
        org.simpleframework.xml.core.ElementLabel $r1;

        $r1 := @this: org.simpleframework.xml.core.ElementLabel;

        r0 = $r1.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.Element label>;

        return r0;
    }

    public org.simpleframework.xml.core.Contact getContact()
    {
        org.simpleframework.xml.core.Contact $r0;
        org.simpleframework.xml.core.Introspector $r1;
        org.simpleframework.xml.core.ElementLabel $r2;

        $r2 := @this: org.simpleframework.xml.core.ElementLabel;

        $r1 = $r2.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Introspector detail>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Contact getContact()>();

        return $r0;
    }

    public org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context) throws java.lang.Exception
    {
        org.simpleframework.xml.core.Composite r0, r7;
        org.simpleframework.xml.core.Primitive r1;
        boolean $z0;
        org.simpleframework.xml.core.Contact $r2;
        java.lang.Class $r3, $r4, $r8;
        org.simpleframework.xml.core.Context $r5;
        org.simpleframework.xml.core.ElementLabel $r6;

        $r6 := @this: org.simpleframework.xml.core.ElementLabel;

        $r5 := @parameter0: org.simpleframework.xml.core.Context;

        $r2 = virtualinvoke $r6.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Contact getContact()>();

        $z0 = interfaceinvoke $r5.<org.simpleframework.xml.core.Context: boolean isPrimitive(org.simpleframework.xml.strategy.Type)>($r2);

        if $z0 == 0 goto label1;

        r1 = new org.simpleframework.xml.core.Primitive;

        specialinvoke r1.<org.simpleframework.xml.core.Primitive: void <init>(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type)>($r5, $r2);

        return r1;

     label1:
        $r4 = $r6.<org.simpleframework.xml.core.ElementLabel: java.lang.Class override>;

        $r3 = <java.lang.Void: java.lang.Class TYPE>;

        if $r4 != $r3 goto label2;

        r0 = new org.simpleframework.xml.core.Composite;

        specialinvoke r0.<org.simpleframework.xml.core.Composite: void <init>(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type)>($r5, $r2);

        return r0;

     label2:
        r7 = new org.simpleframework.xml.core.Composite;

        $r8 = $r6.<org.simpleframework.xml.core.ElementLabel: java.lang.Class override>;

        specialinvoke r7.<org.simpleframework.xml.core.Composite: void <init>(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type,java.lang.Class)>($r5, $r2, $r8);

        return r7;
    }

    public org.simpleframework.xml.core.Decorator getDecorator() throws java.lang.Exception
    {
        org.simpleframework.xml.core.Decorator r0;
        org.simpleframework.xml.core.ElementLabel $r1;

        $r1 := @this: org.simpleframework.xml.core.ElementLabel;

        r0 = $r1.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Decorator decorator>;

        return r0;
    }

    public java.lang.Object getEmpty(org.simpleframework.xml.core.Context)
    {
        org.simpleframework.xml.core.Context $r0;
        org.simpleframework.xml.core.ElementLabel $r1;

        $r1 := @this: org.simpleframework.xml.core.ElementLabel;

        $r0 := @parameter0: org.simpleframework.xml.core.Context;

        return null;
    }

    public org.simpleframework.xml.core.Expression getExpression() throws java.lang.Exception
    {
        org.simpleframework.xml.core.Expression $r0;
        org.simpleframework.xml.core.Introspector $r1;
        org.simpleframework.xml.core.ElementLabel $r2;

        $r2 := @this: org.simpleframework.xml.core.ElementLabel;

        $r1 = $r2.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Introspector detail>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Expression getExpression()>();

        return $r0;
    }

    public java.lang.String getName() throws java.lang.Exception
    {
        java.lang.String $r0, $r5;
        org.simpleframework.xml.core.Introspector $r1;
        org.simpleframework.xml.stream.Style $r2;
        org.simpleframework.xml.stream.Format $r3;
        org.simpleframework.xml.core.ElementLabel $r4;

        $r4 := @this: org.simpleframework.xml.core.ElementLabel;

        $r3 = $r4.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.stream.Format format>;

        $r2 = virtualinvoke $r3.<org.simpleframework.xml.stream.Format: org.simpleframework.xml.stream.Style getStyle()>();

        $r1 = $r4.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Introspector detail>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.Introspector: java.lang.String getName()>();

        $r5 = interfaceinvoke $r2.<org.simpleframework.xml.stream.Style: java.lang.String getElement(java.lang.String)>($r0);

        return $r5;
    }

    public java.lang.String getOverride()
    {
        java.lang.String r0;
        org.simpleframework.xml.core.ElementLabel $r1;

        $r1 := @this: org.simpleframework.xml.core.ElementLabel;

        r0 = $r1.<org.simpleframework.xml.core.ElementLabel: java.lang.String name>;

        return r0;
    }

    public java.lang.String getPath() throws java.lang.Exception
    {
        java.lang.String $r0, $r3;
        org.simpleframework.xml.core.Expression $r1;
        org.simpleframework.xml.core.ElementLabel $r2;

        $r2 := @this: org.simpleframework.xml.core.ElementLabel;

        $r1 = virtualinvoke $r2.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Expression getExpression()>();

        $r0 = virtualinvoke $r2.<org.simpleframework.xml.core.ElementLabel: java.lang.String getName()>();

        $r3 = interfaceinvoke $r1.<org.simpleframework.xml.core.Expression: java.lang.String getElement(java.lang.String)>($r0);

        return $r3;
    }

    public java.lang.Class getType()
    {
        java.lang.Class $r0, $r1, $r3, $r4;
        org.simpleframework.xml.core.ElementLabel $r2;

        $r2 := @this: org.simpleframework.xml.core.ElementLabel;

        $r0 = $r2.<org.simpleframework.xml.core.ElementLabel: java.lang.Class override>;

        $r1 = <java.lang.Void: java.lang.Class TYPE>;

        if $r0 != $r1 goto label1;

        $r3 = $r2.<org.simpleframework.xml.core.ElementLabel: java.lang.Class type>;

        return $r3;

     label1:
        $r4 = $r2.<org.simpleframework.xml.core.ElementLabel: java.lang.Class override>;

        return $r4;
    }

    public org.simpleframework.xml.strategy.Type getType(java.lang.Class)
    {
        org.simpleframework.xml.core.OverrideType $r0;
        org.simpleframework.xml.core.Contact $r1;
        java.lang.Class $r2, $r3, $r5, $r6;
        org.simpleframework.xml.core.ElementLabel $r4;

        $r4 := @this: org.simpleframework.xml.core.ElementLabel;

        $r2 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke $r4.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Contact getContact()>();

        $r5 = $r4.<org.simpleframework.xml.core.ElementLabel: java.lang.Class override>;

        $r3 = <java.lang.Void: java.lang.Class TYPE>;

        if $r5 != $r3 goto label1;

        return $r1;

     label1:
        $r0 = new org.simpleframework.xml.core.OverrideType;

        $r6 = $r4.<org.simpleframework.xml.core.ElementLabel: java.lang.Class override>;

        specialinvoke $r0.<org.simpleframework.xml.core.OverrideType: void <init>(org.simpleframework.xml.strategy.Type,java.lang.Class)>($r1, $r6);

        return $r0;
    }

    public boolean isData()
    {
        boolean $z0;
        org.simpleframework.xml.Element $r0;
        org.simpleframework.xml.core.ElementLabel $r1;

        $r1 := @this: org.simpleframework.xml.core.ElementLabel;

        $r0 = $r1.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.Element label>;

        $z0 = interfaceinvoke $r0.<org.simpleframework.xml.Element: boolean data()>();

        return $z0;
    }

    public boolean isRequired()
    {
        boolean $z0;
        org.simpleframework.xml.Element $r0;
        org.simpleframework.xml.core.ElementLabel $r1;

        $r1 := @this: org.simpleframework.xml.core.ElementLabel;

        $r0 = $r1.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.Element label>;

        $z0 = interfaceinvoke $r0.<org.simpleframework.xml.Element: boolean required()>();

        return $z0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r0;
        org.simpleframework.xml.core.Introspector $r1;
        org.simpleframework.xml.core.ElementLabel $r2;

        $r2 := @this: org.simpleframework.xml.core.ElementLabel;

        $r1 = $r2.<org.simpleframework.xml.core.ElementLabel: org.simpleframework.xml.core.Introspector detail>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.Introspector: java.lang.String toString()>();

        return $r0;
    }
}
