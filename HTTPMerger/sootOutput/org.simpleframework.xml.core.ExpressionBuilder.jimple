class org.simpleframework.xml.core.ExpressionBuilder extends java.lang.Object
{
    private final org.simpleframework.xml.core.ExpressionBuilder$Cache cache;
    private final org.simpleframework.xml.stream.Format format;
    private final org.simpleframework.xml.strategy.Type type;

    public void <init>(java.lang.Class, org.simpleframework.xml.stream.Format)
    {
        org.simpleframework.xml.core.ClassType $r0;
        org.simpleframework.xml.stream.Format $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.core.ExpressionBuilder $r3;

        $r3 := @this: org.simpleframework.xml.core.ExpressionBuilder;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: org.simpleframework.xml.stream.Format;

        $r0 = new org.simpleframework.xml.core.ClassType;

        specialinvoke $r0.<org.simpleframework.xml.core.ClassType: void <init>(java.lang.Class)>($r2);

        specialinvoke $r3.<org.simpleframework.xml.core.ExpressionBuilder: void <init>(org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.Format)>($r0, $r1);

        return;
    }

    public void <init>(org.simpleframework.xml.strategy.Type, org.simpleframework.xml.stream.Format)
    {
        org.simpleframework.xml.core.ExpressionBuilder$Cache $r0;
        org.simpleframework.xml.stream.Format $r1;
        org.simpleframework.xml.strategy.Type $r2;
        org.simpleframework.xml.core.ExpressionBuilder $r3;

        $r3 := @this: org.simpleframework.xml.core.ExpressionBuilder;

        $r2 := @parameter0: org.simpleframework.xml.strategy.Type;

        $r1 := @parameter1: org.simpleframework.xml.stream.Format;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        $r0 = new org.simpleframework.xml.core.ExpressionBuilder$Cache;

        specialinvoke $r0.<org.simpleframework.xml.core.ExpressionBuilder$Cache: void <init>(org.simpleframework.xml.core.ExpressionBuilder)>($r3);

        $r3.<org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.core.ExpressionBuilder$Cache cache> = $r0;

        $r3.<org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.stream.Format format> = $r1;

        $r3.<org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.strategy.Type type> = $r2;

        return;
    }

    private org.simpleframework.xml.core.Expression create(java.lang.String) throws java.lang.Exception
    {
        org.simpleframework.xml.core.ExpressionBuilder$Cache $r0, $r6;
        org.simpleframework.xml.stream.Format $r1;
        org.simpleframework.xml.strategy.Type $r2;
        org.simpleframework.xml.core.PathParser $r3;
        java.lang.String $r4;
        org.simpleframework.xml.core.ExpressionBuilder $r5;

        $r5 := @this: org.simpleframework.xml.core.ExpressionBuilder;

        $r4 := @parameter0: java.lang.String;

        $r3 = new org.simpleframework.xml.core.PathParser;

        $r2 = $r5.<org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.strategy.Type type>;

        $r1 = $r5.<org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.stream.Format format>;

        specialinvoke $r3.<org.simpleframework.xml.core.PathParser: void <init>(java.lang.String,org.simpleframework.xml.strategy.Type,org.simpleframework.xml.stream.Format)>($r4, $r2, $r1);

        $r0 = $r5.<org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.core.ExpressionBuilder$Cache cache>;

        if $r0 == null goto label1;

        $r6 = $r5.<org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.core.ExpressionBuilder$Cache cache>;

        virtualinvoke $r6.<org.simpleframework.xml.core.ExpressionBuilder$Cache: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        return $r3;

     label1:
        return $r3;
    }

    public org.simpleframework.xml.core.Expression build(java.lang.String) throws java.lang.Exception
    {
        org.simpleframework.xml.core.Expression $r0, $r5;
        java.lang.Object $r1;
        org.simpleframework.xml.core.ExpressionBuilder$Cache $r2;
        java.lang.String $r3;
        org.simpleframework.xml.core.ExpressionBuilder $r4;

        $r4 := @this: org.simpleframework.xml.core.ExpressionBuilder;

        $r3 := @parameter0: java.lang.String;

        $r2 = $r4.<org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.core.ExpressionBuilder$Cache cache>;

        $r1 = virtualinvoke $r2.<org.simpleframework.xml.core.ExpressionBuilder$Cache: java.lang.Object get(java.lang.Object)>($r3);

        $r0 = (org.simpleframework.xml.core.Expression) $r1;

        if $r0 != null goto label1;

        $r5 = specialinvoke $r4.<org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.core.Expression create(java.lang.String)>($r3);

        return $r5;

     label1:
        return $r0;
    }
}
