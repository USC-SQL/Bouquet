class org.simpleframework.xml.core.VersionLabel extends org.simpleframework.xml.core.TemplateLabel
{
    private org.simpleframework.xml.core.Decorator decorator;
    private org.simpleframework.xml.core.Introspector detail;
    private org.simpleframework.xml.stream.Format format;
    private org.simpleframework.xml.Version label;
    private java.lang.String name;
    private java.lang.Class type;

    public void <init>(org.simpleframework.xml.core.Contact, org.simpleframework.xml.Version, org.simpleframework.xml.stream.Format)
    {
        java.lang.String $r0;
        org.simpleframework.xml.core.Qualifier $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.core.Introspector $r3;
        org.simpleframework.xml.stream.Format $r4;
        org.simpleframework.xml.Version $r5;
        org.simpleframework.xml.core.Contact $r6;
        org.simpleframework.xml.core.VersionLabel $r7;

        $r7 := @this: org.simpleframework.xml.core.VersionLabel;

        $r6 := @parameter0: org.simpleframework.xml.core.Contact;

        $r5 := @parameter1: org.simpleframework.xml.Version;

        $r4 := @parameter2: org.simpleframework.xml.stream.Format;

        specialinvoke $r7.<org.simpleframework.xml.core.TemplateLabel: void <init>()>();

        $r3 = new org.simpleframework.xml.core.Introspector;

        specialinvoke $r3.<org.simpleframework.xml.core.Introspector: void <init>(org.simpleframework.xml.core.Contact,org.simpleframework.xml.core.Label,org.simpleframework.xml.stream.Format)>($r6, $r7, $r4);

        $r7.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Introspector detail> = $r3;

        $r1 = new org.simpleframework.xml.core.Qualifier;

        specialinvoke $r1.<org.simpleframework.xml.core.Qualifier: void <init>(org.simpleframework.xml.core.Contact)>($r6);

        $r7.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Decorator decorator> = $r1;

        $r2 = interfaceinvoke $r6.<org.simpleframework.xml.core.Contact: java.lang.Class getType()>();

        $r7.<org.simpleframework.xml.core.VersionLabel: java.lang.Class type> = $r2;

        $r0 = interfaceinvoke $r5.<org.simpleframework.xml.Version: java.lang.String name()>();

        $r7.<org.simpleframework.xml.core.VersionLabel: java.lang.String name> = $r0;

        $r7.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.stream.Format format> = $r4;

        $r7.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.Version label> = $r5;

        return;
    }

    public java.lang.annotation.Annotation getAnnotation()
    {
        org.simpleframework.xml.Version r0;
        org.simpleframework.xml.core.VersionLabel $r1;

        $r1 := @this: org.simpleframework.xml.core.VersionLabel;

        r0 = $r1.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.Version label>;

        return r0;
    }

    public org.simpleframework.xml.core.Contact getContact()
    {
        org.simpleframework.xml.core.Contact $r0;
        org.simpleframework.xml.core.Introspector $r1;
        org.simpleframework.xml.core.VersionLabel $r2;

        $r2 := @this: org.simpleframework.xml.core.VersionLabel;

        $r1 = $r2.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Introspector detail>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Contact getContact()>();

        return $r0;
    }

    public org.simpleframework.xml.core.Converter getConverter(org.simpleframework.xml.core.Context) throws java.lang.Exception
    {
        org.simpleframework.xml.core.Primitive $r0;
        java.lang.Object[] $r1;
        org.simpleframework.xml.core.AttributeException $r2;
        boolean $z0;
        org.simpleframework.xml.core.Contact $r3;
        java.lang.String $r4;
        org.simpleframework.xml.Version $r5;
        org.simpleframework.xml.core.Context $r6;
        org.simpleframework.xml.core.VersionLabel $r7;

        $r7 := @this: org.simpleframework.xml.core.VersionLabel;

        $r6 := @parameter0: org.simpleframework.xml.core.Context;

        $r4 = virtualinvoke $r7.<org.simpleframework.xml.core.VersionLabel: java.lang.String getEmpty(org.simpleframework.xml.core.Context)>($r6);

        $r3 = virtualinvoke $r7.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Contact getContact()>();

        $z0 = interfaceinvoke $r6.<org.simpleframework.xml.core.Context: boolean isFloat(org.simpleframework.xml.strategy.Type)>($r3);

        if $z0 != 0 goto label1;

        $r2 = new org.simpleframework.xml.core.AttributeException;

        $r1 = newarray (java.lang.Object)[2];

        $r5 = $r7.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.Version label>;

        $r1[0] = $r5;

        $r1[1] = $r3;

        specialinvoke $r2.<org.simpleframework.xml.core.AttributeException: void <init>(java.lang.String,java.lang.Object[])>("Cannot use %s to represent %s", $r1);

        throw $r2;

     label1:
        $r0 = new org.simpleframework.xml.core.Primitive;

        specialinvoke $r0.<org.simpleframework.xml.core.Primitive: void <init>(org.simpleframework.xml.core.Context,org.simpleframework.xml.strategy.Type,java.lang.String)>($r6, $r3, $r4);

        return $r0;
    }

    public org.simpleframework.xml.core.Decorator getDecorator() throws java.lang.Exception
    {
        org.simpleframework.xml.core.Decorator r0;
        org.simpleframework.xml.core.VersionLabel $r1;

        $r1 := @this: org.simpleframework.xml.core.VersionLabel;

        r0 = $r1.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Decorator decorator>;

        return r0;
    }

    public volatile java.lang.Object getEmpty(org.simpleframework.xml.core.Context) throws java.lang.Exception
    {
        java.lang.String $r0;
        org.simpleframework.xml.core.Context $r1;
        org.simpleframework.xml.core.VersionLabel $r2;

        $r2 := @this: org.simpleframework.xml.core.VersionLabel;

        $r1 := @parameter0: org.simpleframework.xml.core.Context;

        $r0 = virtualinvoke $r2.<org.simpleframework.xml.core.VersionLabel: java.lang.String getEmpty(org.simpleframework.xml.core.Context)>($r1);

        return $r0;
    }

    public java.lang.String getEmpty(org.simpleframework.xml.core.Context)
    {
        org.simpleframework.xml.core.Context $r0;
        org.simpleframework.xml.core.VersionLabel $r1;

        $r1 := @this: org.simpleframework.xml.core.VersionLabel;

        $r0 := @parameter0: org.simpleframework.xml.core.Context;

        return null;
    }

    public org.simpleframework.xml.core.Expression getExpression() throws java.lang.Exception
    {
        org.simpleframework.xml.core.Expression $r0;
        org.simpleframework.xml.core.Introspector $r1;
        org.simpleframework.xml.core.VersionLabel $r2;

        $r2 := @this: org.simpleframework.xml.core.VersionLabel;

        $r1 = $r2.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Introspector detail>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.Introspector: org.simpleframework.xml.core.Expression getExpression()>();

        return $r0;
    }

    public java.lang.String getName() throws java.lang.Exception
    {
        java.lang.String $r0, $r5;
        org.simpleframework.xml.core.Introspector $r1;
        org.simpleframework.xml.stream.Style $r2;
        org.simpleframework.xml.stream.Format $r3;
        org.simpleframework.xml.core.VersionLabel $r4;

        $r4 := @this: org.simpleframework.xml.core.VersionLabel;

        $r3 = $r4.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.stream.Format format>;

        $r2 = virtualinvoke $r3.<org.simpleframework.xml.stream.Format: org.simpleframework.xml.stream.Style getStyle()>();

        $r1 = $r4.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Introspector detail>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.Introspector: java.lang.String getName()>();

        $r5 = interfaceinvoke $r2.<org.simpleframework.xml.stream.Style: java.lang.String getAttribute(java.lang.String)>($r0);

        return $r5;
    }

    public java.lang.String getOverride()
    {
        java.lang.String r0;
        org.simpleframework.xml.core.VersionLabel $r1;

        $r1 := @this: org.simpleframework.xml.core.VersionLabel;

        r0 = $r1.<org.simpleframework.xml.core.VersionLabel: java.lang.String name>;

        return r0;
    }

    public java.lang.String getPath() throws java.lang.Exception
    {
        java.lang.String $r0, $r3;
        org.simpleframework.xml.core.Expression $r1;
        org.simpleframework.xml.core.VersionLabel $r2;

        $r2 := @this: org.simpleframework.xml.core.VersionLabel;

        $r1 = virtualinvoke $r2.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Expression getExpression()>();

        $r0 = virtualinvoke $r2.<org.simpleframework.xml.core.VersionLabel: java.lang.String getName()>();

        $r3 = interfaceinvoke $r1.<org.simpleframework.xml.core.Expression: java.lang.String getAttribute(java.lang.String)>($r0);

        return $r3;
    }

    public java.lang.Class getType()
    {
        java.lang.Class r0;
        org.simpleframework.xml.core.VersionLabel $r1;

        $r1 := @this: org.simpleframework.xml.core.VersionLabel;

        r0 = $r1.<org.simpleframework.xml.core.VersionLabel: java.lang.Class type>;

        return r0;
    }

    public boolean isAttribute()
    {
        org.simpleframework.xml.core.VersionLabel $r0;

        $r0 := @this: org.simpleframework.xml.core.VersionLabel;

        return 1;
    }

    public boolean isData()
    {
        org.simpleframework.xml.core.VersionLabel $r0;

        $r0 := @this: org.simpleframework.xml.core.VersionLabel;

        return 0;
    }

    public boolean isRequired()
    {
        boolean $z0;
        org.simpleframework.xml.Version $r0;
        org.simpleframework.xml.core.VersionLabel $r1;

        $r1 := @this: org.simpleframework.xml.core.VersionLabel;

        $r0 = $r1.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.Version label>;

        $z0 = interfaceinvoke $r0.<org.simpleframework.xml.Version: boolean required()>();

        return $z0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r0;
        org.simpleframework.xml.core.Introspector $r1;
        org.simpleframework.xml.core.VersionLabel $r2;

        $r2 := @this: org.simpleframework.xml.core.VersionLabel;

        $r1 = $r2.<org.simpleframework.xml.core.VersionLabel: org.simpleframework.xml.core.Introspector detail>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.Introspector: java.lang.String toString()>();

        return $r0;
    }
}
