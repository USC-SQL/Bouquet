final enum class org.jsoup.parser.TokeniserState$54 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r0;
        org.jsoup.parser.TokeniserState$54 $r1;

        $r1 := @this: org.jsoup.parser.TokeniserState$54;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r1.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>($r0, $i0, null);

        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        char[] $r0;
        org.jsoup.parser.TokeniserState $r1, $r6, $r7, $r8, $r10;
        org.jsoup.parser.Token$Doctype $r2, $r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jsoup.parser.CharacterReader $r3;
        org.jsoup.parser.Tokeniser $r4;
        org.jsoup.parser.TokeniserState$54 $r5;

        $r5 := @this: org.jsoup.parser.TokeniserState$54;

        $r4 := @parameter0: org.jsoup.parser.Tokeniser;

        $r3 := @parameter1: org.jsoup.parser.CharacterReader;

        $z0 = virtualinvoke $r3.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r4.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>($r5);

        $r2 = $r4.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;

        $r2.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;

        virtualinvoke $r4.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();

        $r1 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState Data>;

        virtualinvoke $r4.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r1);

        return;

     label1:
        $r0 = newarray (char)[4];

        $r0[0] = 9;

        $r0[1] = 10;

        $r0[2] = 12;

        $r0[3] = 32;

        $z1 = virtualinvoke $r3.<org.jsoup.parser.CharacterReader: boolean matchesAny(char[])>($r0);

        if $z1 == 0 goto label2;

        virtualinvoke $r3.<org.jsoup.parser.CharacterReader: void advance()>();

        return;

     label2:
        $z2 = virtualinvoke $r3.<org.jsoup.parser.CharacterReader: boolean matches(char)>(62);

        if $z2 == 0 goto label3;

        virtualinvoke $r4.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();

        $r6 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState Data>;

        virtualinvoke $r4.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r6);

        return;

     label3:
        $z3 = virtualinvoke $r3.<org.jsoup.parser.CharacterReader: boolean matchConsumeIgnoreCase(java.lang.String)>("PUBLIC");

        if $z3 == 0 goto label4;

        $r7 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState AfterDoctypePublicKeyword>;

        virtualinvoke $r4.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r7);

        return;

     label4:
        $z4 = virtualinvoke $r3.<org.jsoup.parser.CharacterReader: boolean matchConsumeIgnoreCase(java.lang.String)>("SYSTEM");

        if $z4 == 0 goto label5;

        $r8 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState AfterDoctypeSystemKeyword>;

        virtualinvoke $r4.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($r8);

        return;

     label5:
        virtualinvoke $r4.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>($r5);

        $r9 = $r4.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;

        $r9.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;

        $r10 = <org.jsoup.parser.TokeniserState$54: org.jsoup.parser.TokeniserState BogusDoctype>;

        virtualinvoke $r4.<org.jsoup.parser.Tokeniser: void advanceTransition(org.jsoup.parser.TokeniserState)>($r10);

        return;
    }
}
