class org.simpleframework.xml.transform.CharacterArrayTransform extends java.lang.Object implements org.simpleframework.xml.transform.Transform
{
    private final java.lang.Class entry;

    public void <init>(java.lang.Class)
    {
        java.lang.Class $r0;
        org.simpleframework.xml.transform.CharacterArrayTransform $r1;

        $r1 := @this: org.simpleframework.xml.transform.CharacterArrayTransform;

        $r0 := @parameter0: java.lang.Class;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r1.<org.simpleframework.xml.transform.CharacterArrayTransform: java.lang.Class entry> = $r0;

        return;
    }

    private java.lang.Object read(char[], int) throws java.lang.Exception
    {
        java.lang.Character $r0;
        char $c0;
        java.lang.Object $r1;
        java.lang.Class $r2;
        int $i1, $i2;
        char[] $r3;
        org.simpleframework.xml.transform.CharacterArrayTransform $r4;

        $r4 := @this: org.simpleframework.xml.transform.CharacterArrayTransform;

        $r3 := @parameter0: char[];

        $i1 := @parameter1: int;

        $r2 = $r4.<org.simpleframework.xml.transform.CharacterArrayTransform: java.lang.Class entry>;

        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r2, $i1);

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $c0 = $r3[$i2];

        $r0 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r1, $i2, $r0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private java.lang.String write(java.lang.Object, int) throws java.lang.Exception
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r3;
        org.simpleframework.xml.transform.CharacterArrayTransform $r4;

        $r4 := @this: org.simpleframework.xml.transform.CharacterArrayTransform;

        $r2 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r2, $i1);

        if $r3 == null goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public java.lang.Object read(java.lang.String) throws java.lang.Exception
    {
        java.lang.Object $r0;
        char[] $r1;
        java.lang.Class $r2, $r3;
        int $i0;
        java.lang.String $r4;
        org.simpleframework.xml.transform.CharacterArrayTransform $r5;

        $r5 := @this: org.simpleframework.xml.transform.CharacterArrayTransform;

        $r4 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        $i0 = lengthof $r1;

        $r2 = $r5.<org.simpleframework.xml.transform.CharacterArrayTransform: java.lang.Class entry>;

        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        if $r2 != $r3 goto label1;

        return $r1;

     label1:
        $r0 = specialinvoke $r5.<org.simpleframework.xml.transform.CharacterArrayTransform: java.lang.Object read(char[],int)>($r1, $i0);

        return $r0;
    }

    public java.lang.String write(java.lang.Object) throws java.lang.Exception
    {
        java.lang.String $r0, $r7;
        char[] $r1, $r6;
        int $i0;
        java.lang.Class $r2, $r3;
        java.lang.Object $r4;
        org.simpleframework.xml.transform.CharacterArrayTransform $r5;

        $r5 := @this: org.simpleframework.xml.transform.CharacterArrayTransform;

        $r4 := @parameter0: java.lang.Object;

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r4);

        $r2 = $r5.<org.simpleframework.xml.transform.CharacterArrayTransform: java.lang.Class entry>;

        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        if $r2 != $r3 goto label1;

        $r1 = (char[]) $r4;

        $r6 = (char[]) $r1;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r6);

        return $r0;

     label1:
        $r7 = specialinvoke $r5.<org.simpleframework.xml.transform.CharacterArrayTransform: java.lang.String write(java.lang.Object,int)>($r4, $i0);

        return $r7;
    }
}
