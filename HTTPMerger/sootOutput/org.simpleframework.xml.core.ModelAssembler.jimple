class org.simpleframework.xml.core.ModelAssembler extends java.lang.Object
{
    private final org.simpleframework.xml.core.ExpressionBuilder builder;
    private final org.simpleframework.xml.stream.Format format;
    private final java.lang.Class type;

    public void <init>(org.simpleframework.xml.core.ExpressionBuilder, java.lang.Class, org.simpleframework.xml.stream.Format) throws java.lang.Exception
    {
        org.simpleframework.xml.stream.Format $r0;
        java.lang.Class $r1;
        org.simpleframework.xml.core.ExpressionBuilder $r2;
        org.simpleframework.xml.core.ModelAssembler $r3;

        $r3 := @this: org.simpleframework.xml.core.ModelAssembler;

        $r2 := @parameter0: org.simpleframework.xml.core.ExpressionBuilder;

        $r1 := @parameter1: java.lang.Class;

        $r0 := @parameter2: org.simpleframework.xml.stream.Format;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        $r3.<org.simpleframework.xml.core.ModelAssembler: org.simpleframework.xml.core.ExpressionBuilder builder> = $r2;

        $r3.<org.simpleframework.xml.core.ModelAssembler: org.simpleframework.xml.stream.Format format> = $r0;

        $r3.<org.simpleframework.xml.core.ModelAssembler: java.lang.Class type> = $r1;

        return;
    }

    private void assembleAttributes(org.simpleframework.xml.core.Model, org.simpleframework.xml.Order) throws java.lang.Exception
    {
        org.simpleframework.xml.stream.Style $r0;
        org.simpleframework.xml.stream.Format $r1;
        java.lang.Object[] $r2;
        org.simpleframework.xml.core.PathException $r3;
        boolean $z0, $z1, $z2;
        org.simpleframework.xml.core.Expression $r4;
        java.lang.String[] $r5;
        java.lang.Class $r6;
        org.simpleframework.xml.core.ExpressionBuilder $r7;
        java.lang.String $r8, $r12;
        int $i0, $i1;
        org.simpleframework.xml.Order $r9;
        org.simpleframework.xml.core.Model $r10;
        org.simpleframework.xml.core.ModelAssembler $r11;

        $r11 := @this: org.simpleframework.xml.core.ModelAssembler;

        $r10 := @parameter0: org.simpleframework.xml.core.Model;

        $r9 := @parameter1: org.simpleframework.xml.Order;

        $r5 = interfaceinvoke $r9.<org.simpleframework.xml.Order: java.lang.String[] attributes()>();

        $i1 = lengthof $r5;

        $i0 = 0;

     label1:
        if $i0 >= $i1 goto label5;

        $r8 = $r5[$i0];

        $r7 = $r11.<org.simpleframework.xml.core.ModelAssembler: org.simpleframework.xml.core.ExpressionBuilder builder>;

        $r4 = virtualinvoke $r7.<org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.core.Expression build(java.lang.String)>($r8);

        $z0 = interfaceinvoke $r4.<org.simpleframework.xml.core.Expression: boolean isAttribute()>();

        if $z0 != 0 goto label2;

        $z1 = interfaceinvoke $r4.<org.simpleframework.xml.core.Expression: boolean isPath()>();

        if $z1 == 0 goto label2;

        $r3 = new org.simpleframework.xml.core.PathException;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = $r4;

        $r6 = $r11.<org.simpleframework.xml.core.ModelAssembler: java.lang.Class type>;

        $r2[1] = $r6;

        specialinvoke $r3.<org.simpleframework.xml.core.PathException: void <init>(java.lang.String,java.lang.Object[])>("Ordered attribute \'%s\' references an element in %s", $r2);

        throw $r3;

     label2:
        $z2 = interfaceinvoke $r4.<org.simpleframework.xml.core.Expression: boolean isPath()>();

        if $z2 != 0 goto label4;

        $r1 = $r11.<org.simpleframework.xml.core.ModelAssembler: org.simpleframework.xml.stream.Format format>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.stream.Format: org.simpleframework.xml.stream.Style getStyle()>();

        $r12 = interfaceinvoke $r0.<org.simpleframework.xml.stream.Style: java.lang.String getAttribute(java.lang.String)>($r8);

        interfaceinvoke $r10.<org.simpleframework.xml.core.Model: void registerAttribute(java.lang.String)>($r12);

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        specialinvoke $r11.<org.simpleframework.xml.core.ModelAssembler: void registerAttributes(org.simpleframework.xml.core.Model,org.simpleframework.xml.core.Expression)>($r10, $r4);

        goto label3;

     label5:
        return;
    }

    private void assembleElements(org.simpleframework.xml.core.Model, org.simpleframework.xml.Order) throws java.lang.Exception
    {
        java.lang.Object[] $r0;
        org.simpleframework.xml.core.PathException $r1;
        boolean $z0;
        org.simpleframework.xml.core.Expression $r2;
        java.lang.String[] $r3;
        java.lang.Class $r4;
        org.simpleframework.xml.core.ExpressionBuilder $r5;
        java.lang.String $r6;
        int $i0, $i1;
        org.simpleframework.xml.Order $r7;
        org.simpleframework.xml.core.Model $r8;
        org.simpleframework.xml.core.ModelAssembler $r9;

        $r9 := @this: org.simpleframework.xml.core.ModelAssembler;

        $r8 := @parameter0: org.simpleframework.xml.core.Model;

        $r7 := @parameter1: org.simpleframework.xml.Order;

        $r3 = interfaceinvoke $r7.<org.simpleframework.xml.Order: java.lang.String[] elements()>();

        $i1 = lengthof $r3;

        $i0 = 0;

     label1:
        if $i0 >= $i1 goto label3;

        $r6 = $r3[$i0];

        $r5 = $r9.<org.simpleframework.xml.core.ModelAssembler: org.simpleframework.xml.core.ExpressionBuilder builder>;

        $r2 = virtualinvoke $r5.<org.simpleframework.xml.core.ExpressionBuilder: org.simpleframework.xml.core.Expression build(java.lang.String)>($r6);

        $z0 = interfaceinvoke $r2.<org.simpleframework.xml.core.Expression: boolean isAttribute()>();

        if $z0 == 0 goto label2;

        $r1 = new org.simpleframework.xml.core.PathException;

        $r0 = newarray (java.lang.Object)[2];

        $r0[0] = $r2;

        $r4 = $r9.<org.simpleframework.xml.core.ModelAssembler: java.lang.Class type>;

        $r0[1] = $r4;

        specialinvoke $r1.<org.simpleframework.xml.core.PathException: void <init>(java.lang.String,java.lang.Object[])>("Ordered element \'%s\' references an attribute in %s", $r0);

        throw $r1;

     label2:
        specialinvoke $r9.<org.simpleframework.xml.core.ModelAssembler: void registerElements(org.simpleframework.xml.core.Model,org.simpleframework.xml.core.Expression)>($r8, $r2);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    private void registerAttribute(org.simpleframework.xml.core.Model, org.simpleframework.xml.core.Expression) throws java.lang.Exception
    {
        java.lang.String $r0;
        org.simpleframework.xml.core.Expression $r1;
        org.simpleframework.xml.core.Model $r2;
        org.simpleframework.xml.core.ModelAssembler $r3;

        $r3 := @this: org.simpleframework.xml.core.ModelAssembler;

        $r2 := @parameter0: org.simpleframework.xml.core.Model;

        $r1 := @parameter1: org.simpleframework.xml.core.Expression;

        $r0 = interfaceinvoke $r1.<org.simpleframework.xml.core.Expression: java.lang.String getFirst()>();

        if $r0 == null goto label1;

        interfaceinvoke $r2.<org.simpleframework.xml.core.Model: void registerAttribute(java.lang.String)>($r0);

        return;

     label1:
        return;
    }

    private void registerAttributes(org.simpleframework.xml.core.Model, org.simpleframework.xml.core.Expression) throws java.lang.Exception
    {
        java.lang.Class $r0;
        java.lang.Object[] $r1;
        org.simpleframework.xml.core.PathException $r2;
        boolean $z0;
        int $i0;
        java.lang.String $r3, $r4;
        org.simpleframework.xml.core.Expression $r5, $r9;
        org.simpleframework.xml.core.Model $r6, $r8;
        org.simpleframework.xml.core.ModelAssembler $r7;

        $r7 := @this: org.simpleframework.xml.core.ModelAssembler;

        $r6 := @parameter0: org.simpleframework.xml.core.Model;

        $r5 := @parameter1: org.simpleframework.xml.core.Expression;

        $r3 = interfaceinvoke $r5.<org.simpleframework.xml.core.Expression: java.lang.String getPrefix()>();

        $r4 = interfaceinvoke $r5.<org.simpleframework.xml.core.Expression: java.lang.String getFirst()>();

        $i0 = interfaceinvoke $r5.<org.simpleframework.xml.core.Expression: int getIndex()>();

        $z0 = interfaceinvoke $r5.<org.simpleframework.xml.core.Expression: boolean isPath()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r6.<org.simpleframework.xml.core.Model: org.simpleframework.xml.core.Model register(java.lang.String,java.lang.String,int)>($r4, $r3, $i0);

        $r9 = interfaceinvoke $r5.<org.simpleframework.xml.core.Expression: org.simpleframework.xml.core.Expression getPath(int)>(1);

        if $r8 != null goto label1;

        $r2 = new org.simpleframework.xml.core.PathException;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = $r4;

        $r0 = $r7.<org.simpleframework.xml.core.ModelAssembler: java.lang.Class type>;

        $r1[1] = $r0;

        specialinvoke $r2.<org.simpleframework.xml.core.PathException: void <init>(java.lang.String,java.lang.Object[])>("Element \'%s\' does not exist in %s", $r1);

        throw $r2;

     label1:
        specialinvoke $r7.<org.simpleframework.xml.core.ModelAssembler: void registerAttributes(org.simpleframework.xml.core.Model,org.simpleframework.xml.core.Expression)>($r8, $r9);

        return;

     label2:
        specialinvoke $r7.<org.simpleframework.xml.core.ModelAssembler: void registerAttribute(org.simpleframework.xml.core.Model,org.simpleframework.xml.core.Expression)>($r6, $r5);

        return;
    }

    private void registerElement(org.simpleframework.xml.core.Model, org.simpleframework.xml.core.Expression) throws java.lang.Exception
    {
        java.lang.Class $r0;
        java.lang.Object[] $r1;
        org.simpleframework.xml.core.PathException $r2;
        java.lang.String $r3, $r4;
        int $i0, $i1;
        org.simpleframework.xml.core.Expression $r5;
        org.simpleframework.xml.core.Model $r6, $r7;
        org.simpleframework.xml.core.ModelAssembler $r8;

        $r8 := @this: org.simpleframework.xml.core.ModelAssembler;

        $r6 := @parameter0: org.simpleframework.xml.core.Model;

        $r5 := @parameter1: org.simpleframework.xml.core.Expression;

        $r3 = interfaceinvoke $r5.<org.simpleframework.xml.core.Expression: java.lang.String getPrefix()>();

        $r4 = interfaceinvoke $r5.<org.simpleframework.xml.core.Expression: java.lang.String getFirst()>();

        $i1 = interfaceinvoke $r5.<org.simpleframework.xml.core.Expression: int getIndex()>();

        if $i1 <= 1 goto label1;

        $i0 = $i1 + -1;

        $r7 = interfaceinvoke $r6.<org.simpleframework.xml.core.Model: org.simpleframework.xml.core.Model lookup(java.lang.String,int)>($r4, $i0);

        if $r7 != null goto label1;

        $r2 = new org.simpleframework.xml.core.PathException;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = $r4;

        $r1[1] = $r5;

        $r0 = $r8.<org.simpleframework.xml.core.ModelAssembler: java.lang.Class type>;

        $r1[2] = $r0;

        specialinvoke $r2.<org.simpleframework.xml.core.PathException: void <init>(java.lang.String,java.lang.Object[])>("Ordered element \'%s\' in path \'%s\' is out of sequence for %s", $r1);

        throw $r2;

     label1:
        interfaceinvoke $r6.<org.simpleframework.xml.core.Model: org.simpleframework.xml.core.Model register(java.lang.String,java.lang.String,int)>($r4, $r3, $i1);

        return;
    }

    private void registerElements(org.simpleframework.xml.core.Model, org.simpleframework.xml.core.Expression) throws java.lang.Exception
    {
        boolean $z0;
        int $i0;
        java.lang.String $r0, $r1;
        org.simpleframework.xml.core.Expression $r2, $r3;
        org.simpleframework.xml.core.Model $r4, $r5;
        org.simpleframework.xml.core.ModelAssembler $r6;

        $r6 := @this: org.simpleframework.xml.core.ModelAssembler;

        $r4 := @parameter0: org.simpleframework.xml.core.Model;

        $r2 := @parameter1: org.simpleframework.xml.core.Expression;

        $r0 = interfaceinvoke $r2.<org.simpleframework.xml.core.Expression: java.lang.String getPrefix()>();

        $r1 = interfaceinvoke $r2.<org.simpleframework.xml.core.Expression: java.lang.String getFirst()>();

        $i0 = interfaceinvoke $r2.<org.simpleframework.xml.core.Expression: int getIndex()>();

        if $r1 == null goto label1;

        $r5 = interfaceinvoke $r4.<org.simpleframework.xml.core.Model: org.simpleframework.xml.core.Model register(java.lang.String,java.lang.String,int)>($r1, $r0, $i0);

        $r3 = interfaceinvoke $r2.<org.simpleframework.xml.core.Expression: org.simpleframework.xml.core.Expression getPath(int)>(1);

        $z0 = interfaceinvoke $r2.<org.simpleframework.xml.core.Expression: boolean isPath()>();

        if $z0 == 0 goto label1;

        specialinvoke $r6.<org.simpleframework.xml.core.ModelAssembler: void registerElements(org.simpleframework.xml.core.Model,org.simpleframework.xml.core.Expression)>($r5, $r3);

     label1:
        specialinvoke $r6.<org.simpleframework.xml.core.ModelAssembler: void registerElement(org.simpleframework.xml.core.Model,org.simpleframework.xml.core.Expression)>($r4, $r2);

        return;
    }

    public void assemble(org.simpleframework.xml.core.Model, org.simpleframework.xml.Order) throws java.lang.Exception
    {
        org.simpleframework.xml.Order $r0;
        org.simpleframework.xml.core.Model $r1;
        org.simpleframework.xml.core.ModelAssembler $r2;

        $r2 := @this: org.simpleframework.xml.core.ModelAssembler;

        $r1 := @parameter0: org.simpleframework.xml.core.Model;

        $r0 := @parameter1: org.simpleframework.xml.Order;

        specialinvoke $r2.<org.simpleframework.xml.core.ModelAssembler: void assembleElements(org.simpleframework.xml.core.Model,org.simpleframework.xml.Order)>($r1, $r0);

        specialinvoke $r2.<org.simpleframework.xml.core.ModelAssembler: void assembleAttributes(org.simpleframework.xml.core.Model,org.simpleframework.xml.Order)>($r1, $r0);

        return;
    }
}
