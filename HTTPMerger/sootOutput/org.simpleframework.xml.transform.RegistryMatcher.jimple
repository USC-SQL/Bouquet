public class org.simpleframework.xml.transform.RegistryMatcher extends java.lang.Object implements org.simpleframework.xml.transform.Matcher
{
    private final org.simpleframework.xml.transform.RegistryMatcher$Cache transforms;
    private final org.simpleframework.xml.transform.RegistryMatcher$Cache types;

    public void <init>()
    {
        org.simpleframework.xml.transform.RegistryMatcher$Cache $r0, $r2;
        org.simpleframework.xml.transform.RegistryMatcher $r1;

        $r1 := @this: org.simpleframework.xml.transform.RegistryMatcher;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r0 = new org.simpleframework.xml.transform.RegistryMatcher$Cache;

        specialinvoke $r0.<org.simpleframework.xml.transform.RegistryMatcher$Cache: void <init>()>();

        $r1.<org.simpleframework.xml.transform.RegistryMatcher: org.simpleframework.xml.transform.RegistryMatcher$Cache transforms> = $r0;

        $r2 = new org.simpleframework.xml.transform.RegistryMatcher$Cache;

        specialinvoke $r2.<org.simpleframework.xml.transform.RegistryMatcher$Cache: void <init>()>();

        $r1.<org.simpleframework.xml.transform.RegistryMatcher: org.simpleframework.xml.transform.RegistryMatcher$Cache types> = $r2;

        return;
    }

    private org.simpleframework.xml.transform.Transform create(java.lang.Class) throws java.lang.Exception
    {
        org.simpleframework.xml.transform.Transform $r0;
        java.lang.Object $r1;
        org.simpleframework.xml.transform.RegistryMatcher$Cache $r2;
        java.lang.Class $r3, $r4;
        org.simpleframework.xml.transform.RegistryMatcher $r5;

        $r5 := @this: org.simpleframework.xml.transform.RegistryMatcher;

        $r3 := @parameter0: java.lang.Class;

        $r2 = $r5.<org.simpleframework.xml.transform.RegistryMatcher: org.simpleframework.xml.transform.RegistryMatcher$Cache types>;

        $r1 = virtualinvoke $r2.<org.simpleframework.xml.transform.RegistryMatcher$Cache: java.lang.Object fetch(java.lang.Object)>($r3);

        $r4 = (java.lang.Class) $r1;

        if $r4 == null goto label1;

        $r0 = specialinvoke $r5.<org.simpleframework.xml.transform.RegistryMatcher: org.simpleframework.xml.transform.Transform create(java.lang.Class,java.lang.Class)>($r3, $r4);

        return $r0;

     label1:
        return null;
    }

    private org.simpleframework.xml.transform.Transform create(java.lang.Class, java.lang.Class) throws java.lang.Exception
    {
        org.simpleframework.xml.transform.Transform $r0;
        java.lang.Object $r1;
        org.simpleframework.xml.transform.RegistryMatcher$Cache $r2;
        java.lang.Class $r3, $r4;
        org.simpleframework.xml.transform.RegistryMatcher $r5;

        $r5 := @this: org.simpleframework.xml.transform.RegistryMatcher;

        $r3 := @parameter0: java.lang.Class;

        $r4 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>();

        $r0 = (org.simpleframework.xml.transform.Transform) $r1;

        if $r0 == null goto label1;

        $r2 = $r5.<org.simpleframework.xml.transform.RegistryMatcher: org.simpleframework.xml.transform.RegistryMatcher$Cache transforms>;

        virtualinvoke $r2.<org.simpleframework.xml.transform.RegistryMatcher$Cache: void cache(java.lang.Object,java.lang.Object)>($r3, $r0);

        return $r0;

     label1:
        return $r0;
    }

    public void bind(java.lang.Class, java.lang.Class)
    {
        org.simpleframework.xml.transform.RegistryMatcher$Cache $r0;
        java.lang.Class $r1, $r2;
        org.simpleframework.xml.transform.RegistryMatcher $r3;

        $r3 := @this: org.simpleframework.xml.transform.RegistryMatcher;

        $r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.Class;

        $r0 = $r3.<org.simpleframework.xml.transform.RegistryMatcher: org.simpleframework.xml.transform.RegistryMatcher$Cache types>;

        virtualinvoke $r0.<org.simpleframework.xml.transform.RegistryMatcher$Cache: void cache(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void bind(java.lang.Class, org.simpleframework.xml.transform.Transform)
    {
        org.simpleframework.xml.transform.RegistryMatcher$Cache $r0;
        org.simpleframework.xml.transform.Transform $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.transform.RegistryMatcher $r3;

        $r3 := @this: org.simpleframework.xml.transform.RegistryMatcher;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: org.simpleframework.xml.transform.Transform;

        $r0 = $r3.<org.simpleframework.xml.transform.RegistryMatcher: org.simpleframework.xml.transform.RegistryMatcher$Cache transforms>;

        virtualinvoke $r0.<org.simpleframework.xml.transform.RegistryMatcher$Cache: void cache(java.lang.Object,java.lang.Object)>($r2, $r1);

        return;
    }

    public org.simpleframework.xml.transform.Transform match(java.lang.Class) throws java.lang.Exception
    {
        org.simpleframework.xml.transform.Transform $r0, $r5;
        java.lang.Object $r1;
        org.simpleframework.xml.transform.RegistryMatcher$Cache $r2;
        java.lang.Class $r3;
        org.simpleframework.xml.transform.RegistryMatcher $r4;

        $r4 := @this: org.simpleframework.xml.transform.RegistryMatcher;

        $r3 := @parameter0: java.lang.Class;

        $r2 = $r4.<org.simpleframework.xml.transform.RegistryMatcher: org.simpleframework.xml.transform.RegistryMatcher$Cache transforms>;

        $r1 = virtualinvoke $r2.<org.simpleframework.xml.transform.RegistryMatcher$Cache: java.lang.Object fetch(java.lang.Object)>($r3);

        $r0 = (org.simpleframework.xml.transform.Transform) $r1;

        if $r0 != null goto label1;

        $r5 = specialinvoke $r4.<org.simpleframework.xml.transform.RegistryMatcher: org.simpleframework.xml.transform.Transform create(java.lang.Class)>($r3);

        return $r5;

     label1:
        return $r0;
    }
}
