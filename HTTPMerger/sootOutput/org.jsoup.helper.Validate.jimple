public final class org.jsoup.helper.Validate extends java.lang.Object
{

    private void <init>()
    {
        org.jsoup.helper.Validate $r0;

        $r0 := @this: org.jsoup.helper.Validate;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void fail(java.lang.String)
    {
        java.lang.IllegalArgumentException $r0;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r0;
    }

    public static void isFalse(boolean)
    {
        java.lang.IllegalArgumentException $r0;
        boolean $z0;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must be false");

        throw $r0;

     label1:
        return;
    }

    public static void isFalse(boolean, java.lang.String)
    {
        java.lang.IllegalArgumentException $r0;
        java.lang.String $r1;
        boolean $z0;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        if $z0 == 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r0;

     label1:
        return;
    }

    public static void isTrue(boolean)
    {
        java.lang.IllegalArgumentException $r0;
        boolean $z0;

        $z0 := @parameter0: boolean;

        if $z0 != 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must be true");

        throw $r0;

     label1:
        return;
    }

    public static void isTrue(boolean, java.lang.String)
    {
        java.lang.IllegalArgumentException $r0;
        java.lang.String $r1;
        boolean $z0;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.String;

        if $z0 != 0 goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r0;

     label1:
        return;
    }

    public static void noNullElements(java.lang.Object[])
    {
        java.lang.Object[] $r0;

        $r0 := @parameter0: java.lang.Object[];

        staticinvoke <org.jsoup.helper.Validate: void noNullElements(java.lang.Object[],java.lang.String)>($r0, "Array must not contain any null objects");

        return;
    }

    public static void noNullElements(java.lang.Object[], java.lang.String)
    {
        java.lang.IllegalArgumentException $r0;
        java.lang.Object $r1;
        int $i0, $i1;
        java.lang.String $r2;
        java.lang.Object[] $r3;

        $r3 := @parameter0: java.lang.Object[];

        $r2 := @parameter1: java.lang.String;

        $i1 = lengthof $r3;

        $i0 = 0;

     label1:
        if $i0 >= $i1 goto label3;

        $r1 = $r3[$i0];

        if $r1 != null goto label2;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    public static void notEmpty(java.lang.String)
    {
        java.lang.IllegalArgumentException $r0;
        int $i0;
        java.lang.String $r1;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("String must not be empty");

        throw $r0;

     label2:
        return;
    }

    public static void notEmpty(java.lang.String, java.lang.String)
    {
        java.lang.IllegalArgumentException $r0;
        int $i0;
        java.lang.String $r1, $r2;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r0;

     label2:
        return;
    }

    public static void notNull(java.lang.Object)
    {
        java.lang.IllegalArgumentException $r0;
        java.lang.Object $r1;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Object must not be null");

        throw $r0;

     label1:
        return;
    }

    public static void notNull(java.lang.Object, java.lang.String)
    {
        java.lang.IllegalArgumentException $r0;
        java.lang.String $r1;
        java.lang.Object $r2;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        if $r2 != null goto label1;

        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r0;

     label1:
        return;
    }
}
