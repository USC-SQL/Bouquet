class org.simpleframework.xml.transform.ClassTransform extends java.lang.Object implements org.simpleframework.xml.transform.Transform
{

    void <init>()
    {
        org.simpleframework.xml.transform.ClassTransform $r0;

        $r0 := @this: org.simpleframework.xml.transform.ClassTransform;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private java.lang.ClassLoader getCallerClassLoader()
    {
        java.lang.ClassLoader $r0;
        java.lang.Class $r1;
        org.simpleframework.xml.transform.ClassTransform $r2;

        $r2 := @this: org.simpleframework.xml.transform.ClassTransform;

        $r1 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        return $r0;
    }

    private static java.lang.ClassLoader getClassLoader()
    {
        java.lang.ClassLoader $r0;
        java.lang.Thread $r1;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r0 = virtualinvoke $r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        return $r0;
    }

    public java.lang.Class read(java.lang.String) throws java.lang.Exception
    {
        java.lang.Class $r0;
        java.lang.ClassLoader $r1, $r2;
        java.lang.String $r3;
        org.simpleframework.xml.transform.ClassTransform $r4;

        $r4 := @this: org.simpleframework.xml.transform.ClassTransform;

        $r3 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.simpleframework.xml.transform.ClassTransform: java.lang.ClassLoader getClassLoader()>();

        $r1 = $r2;

        if $r2 != null goto label1;

        $r1 = specialinvoke $r4.<org.simpleframework.xml.transform.ClassTransform: java.lang.ClassLoader getCallerClassLoader()>();

     label1:
        $r0 = virtualinvoke $r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r3);

        return $r0;
    }

    public volatile java.lang.Object read(java.lang.String) throws java.lang.Exception
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        org.simpleframework.xml.transform.ClassTransform $r2;

        $r2 := @this: org.simpleframework.xml.transform.ClassTransform;

        $r1 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r2.<org.simpleframework.xml.transform.ClassTransform: java.lang.Class read(java.lang.String)>($r1);

        return $r0;
    }

    public java.lang.String write(java.lang.Class) throws java.lang.Exception
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        org.simpleframework.xml.transform.ClassTransform $r2;

        $r2 := @this: org.simpleframework.xml.transform.ClassTransform;

        $r1 := @parameter0: java.lang.Class;

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r0;
    }

    public volatile java.lang.String write(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        org.simpleframework.xml.transform.ClassTransform $r3;

        $r3 := @this: org.simpleframework.xml.transform.ClassTransform;

        $r2 := @parameter0: java.lang.Object;

        $r0 = (java.lang.Class) $r2;

        $r1 = virtualinvoke $r3.<org.simpleframework.xml.transform.ClassTransform: java.lang.String write(java.lang.Class)>($r0);

        return $r1;
    }
}
