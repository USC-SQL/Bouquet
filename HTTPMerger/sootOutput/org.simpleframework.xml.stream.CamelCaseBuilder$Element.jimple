class org.simpleframework.xml.stream.CamelCaseBuilder$Element extends org.simpleframework.xml.stream.CamelCaseBuilder$Attribute
{
    private boolean capital;
    final org.simpleframework.xml.stream.CamelCaseBuilder this$0;

    private void <init>(org.simpleframework.xml.stream.CamelCaseBuilder, java.lang.String)
    {
        java.lang.String $r0;
        org.simpleframework.xml.stream.CamelCaseBuilder $r1;
        org.simpleframework.xml.stream.CamelCaseBuilder$Element $r2;

        $r2 := @this: org.simpleframework.xml.stream.CamelCaseBuilder$Element;

        $r1 := @parameter0: org.simpleframework.xml.stream.CamelCaseBuilder;

        $r0 := @parameter1: java.lang.String;

        $r2.<org.simpleframework.xml.stream.CamelCaseBuilder$Element: org.simpleframework.xml.stream.CamelCaseBuilder this$0> = $r1;

        specialinvoke $r2.<org.simpleframework.xml.stream.CamelCaseBuilder$Attribute: void <init>(org.simpleframework.xml.stream.CamelCaseBuilder,java.lang.String,org.simpleframework.xml.stream.CamelCaseBuilder$1)>($r1, $r0, null);

        return;
    }

    void <init>(org.simpleframework.xml.stream.CamelCaseBuilder, java.lang.String, org.simpleframework.xml.stream.CamelCaseBuilder$1)
    {
        org.simpleframework.xml.stream.CamelCaseBuilder$1 $r0;
        java.lang.String $r1;
        org.simpleframework.xml.stream.CamelCaseBuilder $r2;
        org.simpleframework.xml.stream.CamelCaseBuilder$Element $r3;

        $r3 := @this: org.simpleframework.xml.stream.CamelCaseBuilder$Element;

        $r2 := @parameter0: org.simpleframework.xml.stream.CamelCaseBuilder;

        $r1 := @parameter1: java.lang.String;

        $r0 := @parameter2: org.simpleframework.xml.stream.CamelCaseBuilder$1;

        specialinvoke $r3.<org.simpleframework.xml.stream.CamelCaseBuilder$Element: void <init>(org.simpleframework.xml.stream.CamelCaseBuilder,java.lang.String)>($r2, $r1);

        return;
    }

    protected void parse(char[], int, int)
    {
        char $c0, $c3;
        boolean $z0, $z1;
        org.simpleframework.xml.stream.CamelCaseBuilder $r0;
        int $i1, $i2;
        char[] $r1;
        org.simpleframework.xml.stream.CamelCaseBuilder$Element $r2;

        $r2 := @this: org.simpleframework.xml.stream.CamelCaseBuilder$Element;

        $r1 := @parameter0: char[];

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r0 = $r2.<org.simpleframework.xml.stream.CamelCaseBuilder$Element: org.simpleframework.xml.stream.CamelCaseBuilder this$0>;

        $z0 = staticinvoke <org.simpleframework.xml.stream.CamelCaseBuilder: boolean access$300(org.simpleframework.xml.stream.CamelCaseBuilder)>($r0);

        if $z0 != 0 goto label1;

        $z1 = $r2.<org.simpleframework.xml.stream.CamelCaseBuilder$Element: boolean capital>;

        if $z1 == 0 goto label2;

     label1:
        $c0 = $r1[$i1];

        $c3 = virtualinvoke $r2.<org.simpleframework.xml.stream.CamelCaseBuilder$Element: char toUpper(char)>($c0);

        $r1[$i1] = $c3;

     label2:
        $r2.<org.simpleframework.xml.stream.CamelCaseBuilder$Element: boolean capital> = 1;

        return;
    }
}
