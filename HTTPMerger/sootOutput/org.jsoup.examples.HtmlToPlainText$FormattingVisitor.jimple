class org.jsoup.examples.HtmlToPlainText$FormattingVisitor extends java.lang.Object implements org.jsoup.select.NodeVisitor
{
    private static final int maxWidth;
    private java.lang.StringBuilder accum;
    final org.jsoup.examples.HtmlToPlainText this$0;
    private int width;

    private void <init>(org.jsoup.examples.HtmlToPlainText)
    {
        java.lang.StringBuilder $r0;
        org.jsoup.examples.HtmlToPlainText $r1;
        org.jsoup.examples.HtmlToPlainText$FormattingVisitor $r2;

        $r2 := @this: org.jsoup.examples.HtmlToPlainText$FormattingVisitor;

        $r1 := @parameter0: org.jsoup.examples.HtmlToPlainText;

        $r2.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: org.jsoup.examples.HtmlToPlainText this$0> = $r1;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r2.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width> = 0;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum> = $r0;

        return;
    }

    void <init>(org.jsoup.examples.HtmlToPlainText, org.jsoup.examples.HtmlToPlainText$1)
    {
        org.jsoup.examples.HtmlToPlainText$1 $r0;
        org.jsoup.examples.HtmlToPlainText $r1;
        org.jsoup.examples.HtmlToPlainText$FormattingVisitor $r2;

        $r2 := @this: org.jsoup.examples.HtmlToPlainText$FormattingVisitor;

        $r1 := @parameter0: org.jsoup.examples.HtmlToPlainText;

        $r0 := @parameter1: org.jsoup.examples.HtmlToPlainText$1;

        specialinvoke $r2.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: void <init>(org.jsoup.examples.HtmlToPlainText)>($r1);

        return;
    }

    private void append(java.lang.String)
    {
        java.lang.String[] $r0, $r7;
        java.lang.StringBuilder $r1, $r2, $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.String $r3, $r4, $r8;
        org.jsoup.examples.HtmlToPlainText$FormattingVisitor $r5;

        $r5 := @this: org.jsoup.examples.HtmlToPlainText$FormattingVisitor;

        $r3 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("\n");

        if $z0 == 0 goto label01;

        $r5.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width> = 0;

     label01:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(" ");

        if $z1 == 0 goto label02;

        $r1 = $r5.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i0 == 0 goto label10;

        $r2 = $r5.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum>;

        $r6 = $r5.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum>;

        $i3 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>();

        $i4 = $i3 + -1;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int)>($i4);

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = " ";

        $r0[1] = "\n";

        $z2 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r4, $r0);

        if $z2 == 0 goto label02;

        return;

     label02:
        $i5 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $r5.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width>;

        $i6 = $i5 + $i1;

        if $i6 <= 80 goto label09;

        $r7 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

        $i7 = 0;

     label03:
        $i8 = lengthof $r7;

        if $i7 >= $i8 goto label11;

        $r8 = $r7[$i7];

        $i9 = lengthof $r7;

        $i10 = $i9 + -1;

        if $i7 != $i10 goto label07;

        $z3 = 1;

     label04:
        if $z3 != 0 goto label05;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $i11 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i2 = $r5.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width>;

        $i12 = $i11 + $i2;

        if $i12 <= 80 goto label08;

        $r12 = $r5.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $i13 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r5.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width> = $i13;

     label06:
        $i7 = $i7 + 1;

        goto label03;

     label07:
        $z3 = 0;

        goto label04;

     label08:
        $r14 = $r5.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $i14 = $r5.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width>;

        $i15 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i16 = $i14 + $i15;

        $r5.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width> = $i16;

        goto label06;

     label09:
        $r15 = $r5.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $i17 = $r5.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width>;

        $i18 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i19 = $i17 + $i18;

        $r5.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int width> = $i19;

        return;

     label10:
        return;

     label11:
        return;
    }

    public void head(org.jsoup.nodes.Node, int)
    {
        org.jsoup.nodes.TextNode $r0;
        java.lang.String $r1, $r4;
        boolean $z0, $z1;
        int $i0;
        org.jsoup.nodes.Node $r2;
        org.jsoup.examples.HtmlToPlainText$FormattingVisitor $r3;

        $r3 := @this: org.jsoup.examples.HtmlToPlainText$FormattingVisitor;

        $r2 := @parameter0: org.jsoup.nodes.Node;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r2.<org.jsoup.nodes.Node: java.lang.String nodeName()>();

        $z0 = $r2 instanceof org.jsoup.nodes.TextNode;

        if $z0 == 0 goto label1;

        $r0 = (org.jsoup.nodes.TextNode) $r2;

        $r4 = virtualinvoke $r0.<org.jsoup.nodes.TextNode: java.lang.String text()>();

        specialinvoke $r3.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: void append(java.lang.String)>($r4);

        return;

     label1:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("li");

        if $z1 == 0 goto label2;

        specialinvoke $r3.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: void append(java.lang.String)>("\n * ");

        return;

     label2:
        return;
    }

    public void tail(org.jsoup.nodes.Node, int)
    {
        java.lang.Object[] $r0;
        java.lang.String[] $r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r2, $r5, $r6;
        int $i0;
        org.jsoup.nodes.Node $r3;
        org.jsoup.examples.HtmlToPlainText$FormattingVisitor $r4;

        $r4 := @this: org.jsoup.examples.HtmlToPlainText$FormattingVisitor;

        $r3 := @parameter0: org.jsoup.nodes.Node;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r3.<org.jsoup.nodes.Node: java.lang.String nodeName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("br");

        if $z0 == 0 goto label1;

        specialinvoke $r4.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: void append(java.lang.String)>("\n");

        return;

     label1:
        $r1 = newarray (java.lang.String)[6];

        $r1[0] = "p";

        $r1[1] = "h1";

        $r1[2] = "h2";

        $r1[3] = "h3";

        $r1[4] = "h4";

        $r1[5] = "h5";

        $z1 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r2, $r1);

        if $z1 == 0 goto label2;

        specialinvoke $r4.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: void append(java.lang.String)>("\n\n");

        return;

     label2:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("a");

        if $z2 == 0 goto label3;

        $r0 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke $r3.<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>("href");

        $r0[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" <%s>", $r0);

        specialinvoke $r4.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: void append(java.lang.String)>($r6);

        return;

     label3:
        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;
        org.jsoup.examples.HtmlToPlainText$FormattingVisitor $r2;

        $r2 := @this: org.jsoup.examples.HtmlToPlainText$FormattingVisitor;

        $r1 = $r2.<org.jsoup.examples.HtmlToPlainText$FormattingVisitor: java.lang.StringBuilder accum>;

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static void <clinit>()
    {
        <org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int maxWidth> = 80;

        <org.jsoup.examples.HtmlToPlainText$FormattingVisitor: int maxWidth> = 80;

        return;
    }
}
