class org.jsoup.parser.CharacterReader extends java.lang.Object
{
    static final char EOF;
    private final java.lang.String input;
    private final int length;
    private int mark;
    private int pos;

    void <init>(java.lang.String)
    {
        int $i0;
        java.lang.String $r0, $r2;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $r0 := @parameter0: java.lang.String;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r1.<org.jsoup.parser.CharacterReader: int pos> = 0;

        $r1.<org.jsoup.parser.CharacterReader: int mark> = 0;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r0);

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\r\n?", "\n");

        $r1.<org.jsoup.parser.CharacterReader: java.lang.String input> = $r2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r1.<org.jsoup.parser.CharacterReader: int length> = $i0;

        return;
    }

    void advance()
    {
        int $i0, $i1;
        org.jsoup.parser.CharacterReader $r0;

        $r0 := @this: org.jsoup.parser.CharacterReader;

        $i0 = $r0.<org.jsoup.parser.CharacterReader: int pos>;

        $i1 = $i0 + 1;

        $r0.<org.jsoup.parser.CharacterReader: int pos> = $i1;

        return;
    }

    char consume()
    {
        java.lang.String $r0;
        boolean $z0;
        int $i0, $i2, $i3;
        char $c1;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $z0 = virtualinvoke $r1.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $c1 = 65535;

     label1:
        $i0 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $i2 = $i0 + 1;

        $r1.<org.jsoup.parser.CharacterReader: int pos> = $i2;

        return $c1;

     label2:
        $r0 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i3 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        goto label1;
    }

    java.lang.String consumeAsString()
    {
        int $i0, $i1, $i2;
        java.lang.String $r0, $r2;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $r0 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i0 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $i1 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $i2 = $i1 + 1;

        $r1.<org.jsoup.parser.CharacterReader: int pos> = $i2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        return $r2;
    }

    java.lang.String consumeDigitSequence()
    {
        char $c0;
        java.lang.String $r0, $r2, $r3;
        boolean $z0;
        int $i1, $i2, $i3, $i4, $i5;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $i1 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

     label1:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r0 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i2 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        if $c0 < 48 goto label2;

        if $c0 > 57 goto label2;

        $i3 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $i4 = $i3 + 1;

        $r1.<org.jsoup.parser.CharacterReader: int pos> = $i4;

        goto label1;

     label2:
        $r2 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i5 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i1, $i5);

        return $r3;
    }

    java.lang.String consumeHexSequence()
    {
        char $c0;
        java.lang.String $r0, $r2, $r3;
        boolean $z0;
        int $i1, $i2, $i3, $i4, $i5;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $i1 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

     label1:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $r0 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i2 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        if $c0 < 48 goto label2;

        if $c0 <= 57 goto label4;

     label2:
        if $c0 < 65 goto label3;

        if $c0 <= 70 goto label4;

     label3:
        if $c0 < 97 goto label5;

        if $c0 > 102 goto label5;

     label4:
        $i3 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $i4 = $i3 + 1;

        $r1.<org.jsoup.parser.CharacterReader: int pos> = $i4;

        goto label1;

     label5:
        $r2 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i5 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i1, $i5);

        return $r3;
    }

    java.lang.String consumeLetterSequence()
    {
        char $c0;
        java.lang.String $r0, $r2, $r3;
        boolean $z0;
        int $i1, $i2, $i3, $i4, $i5;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $i1 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

     label1:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r0 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i2 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        if $c0 < 65 goto label2;

        if $c0 <= 90 goto label3;

     label2:
        if $c0 < 97 goto label4;

        if $c0 > 122 goto label4;

     label3:
        $i3 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $i4 = $i3 + 1;

        $r1.<org.jsoup.parser.CharacterReader: int pos> = $i4;

        goto label1;

     label4:
        $r2 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i5 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i1, $i5);

        return $r3;
    }

    java.lang.String consumeLetterThenDigitSequence()
    {
        char $c0, $c6;
        java.lang.String $r0, $r2, $r3, $r4;
        boolean $z0, $z1;
        int $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $i1 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

     label1:
        $z0 = virtualinvoke $r1.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r0 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i2 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        if $c0 < 65 goto label2;

        if $c0 <= 90 goto label3;

     label2:
        if $c0 < 97 goto label4;

        if $c0 > 122 goto label4;

     label3:
        $i3 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $i4 = $i3 + 1;

        $r1.<org.jsoup.parser.CharacterReader: int pos> = $i4;

        goto label1;

     label4:
        $z1 = virtualinvoke $r1.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();

        if $z1 != 0 goto label5;

        $r2 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i5 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $c6 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i5);

        if $c6 < 48 goto label5;

        if $c6 > 57 goto label5;

        $i7 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $i8 = $i7 + 1;

        $r1.<org.jsoup.parser.CharacterReader: int pos> = $i8;

        goto label4;

     label5:
        $r3 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i9 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i1, $i9);

        return $r4;
    }

    java.lang.String consumeTo(char)
    {
        int $i0, $i1, $i3, $i4, $i5, $i6;
        java.lang.String $r0, $r2, $r3, $r4;
        char $c2;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $c2 := @parameter0: char;

        $r0 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i0 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $i3 = virtualinvoke $r0.<java.lang.String: int indexOf(int,int)>($c2, $i0);

        if $i3 == -1 goto label1;

        $r2 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i1 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i1, $i3);

        $i4 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $i5 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i6 = $i4 + $i5;

        $r1.<org.jsoup.parser.CharacterReader: int pos> = $i6;

        return $r3;

     label1:
        $r4 = virtualinvoke $r1.<org.jsoup.parser.CharacterReader: java.lang.String consumeToEnd()>();

        return $r4;
    }

    java.lang.String consumeTo(java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r0, $r1, $r3, $r4, $r5;
        org.jsoup.parser.CharacterReader $r2;

        $r2 := @this: org.jsoup.parser.CharacterReader;

        $r0 := @parameter0: java.lang.String;

        $r1 = $r2.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i0 = $r2.<org.jsoup.parser.CharacterReader: int pos>;

        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>($r0, $i0);

        if $i2 == -1 goto label1;

        $r3 = $r2.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i1 = $r2.<org.jsoup.parser.CharacterReader: int pos>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        $i3 = $r2.<org.jsoup.parser.CharacterReader: int pos>;

        $i4 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        $r2.<org.jsoup.parser.CharacterReader: int pos> = $i5;

        return $r4;

     label1:
        $r5 = virtualinvoke $r2.<org.jsoup.parser.CharacterReader: java.lang.String consumeToEnd()>();

        return $r5;
    }

    transient java.lang.String consumeToAny(char[])
    {
        java.lang.String $r0, $r3, $r4;
        boolean $z0;
        char $c0, $c1;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        char[] $r1;
        org.jsoup.parser.CharacterReader $r2;

        $r2 := @this: org.jsoup.parser.CharacterReader;

        $r1 := @parameter0: char[];

        $i4 = $r2.<org.jsoup.parser.CharacterReader: int pos>;

     label1:
        $z0 = virtualinvoke $r2.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r0 = $r2.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i3 = $r2.<org.jsoup.parser.CharacterReader: int pos>;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i5 = lengthof $r1;

        $i2 = 0;

     label2:
        if $i2 >= $i5 goto label5;

        $c0 = $r1[$i2];

        if $c0 != $c1 goto label4;

     label3:
        $i6 = $r2.<org.jsoup.parser.CharacterReader: int pos>;

        if $i6 <= $i4 goto label6;

        $r3 = $r2.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i7 = $r2.<org.jsoup.parser.CharacterReader: int pos>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i4, $i7);

        return $r4;

     label4:
        $i2 = $i2 + 1;

        goto label2;

     label5:
        $i8 = $r2.<org.jsoup.parser.CharacterReader: int pos>;

        $i9 = $i8 + 1;

        $r2.<org.jsoup.parser.CharacterReader: int pos> = $i9;

        goto label1;

     label6:
        return "";
    }

    java.lang.String consumeToEnd()
    {
        int $i0, $i1, $i2;
        java.lang.String $r0, $r1, $r3, $r4;
        org.jsoup.parser.CharacterReader $r2;

        $r2 := @this: org.jsoup.parser.CharacterReader;

        $r0 = $r2.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i0 = $r2.<org.jsoup.parser.CharacterReader: int pos>;

        $r1 = $r2.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r4 = $r2.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r2.<org.jsoup.parser.CharacterReader: int pos> = $i2;

        return $r3;
    }

    boolean containsIgnoreCase(java.lang.String)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.String $r0, $r1, $r2, $r4, $r5;
        org.jsoup.parser.CharacterReader $r3;

        $r3 := @this: org.jsoup.parser.CharacterReader;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        $r4 = $r3.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i0 = $r3.<org.jsoup.parser.CharacterReader: int pos>;

        $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String,int)>($r1, $i0);

        if $i1 > -1 goto label1;

        $r5 = $r3.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i2 = $r3.<org.jsoup.parser.CharacterReader: int pos>;

        $i3 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String,int)>($r2, $i2);

        if $i3 <= -1 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    char current()
    {
        char $c0;
        java.lang.String $r0;
        boolean $z0;
        int $i1;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $z0 = virtualinvoke $r1.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 65535;

     label1:
        $r0 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i1 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        return $c0;
    }

    boolean isEmpty()
    {
        int $i0, $i1;
        org.jsoup.parser.CharacterReader $r0;

        $r0 := @this: org.jsoup.parser.CharacterReader;

        $i0 = $r0.<org.jsoup.parser.CharacterReader: int pos>;

        $i1 = $r0.<org.jsoup.parser.CharacterReader: int length>;

        if $i0 < $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    void mark()
    {
        int $i0;
        org.jsoup.parser.CharacterReader $r0;

        $r0 := @this: org.jsoup.parser.CharacterReader;

        $i0 = $r0.<org.jsoup.parser.CharacterReader: int pos>;

        $r0.<org.jsoup.parser.CharacterReader: int mark> = $i0;

        return;
    }

    boolean matchConsume(java.lang.String)
    {
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.String $r0;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<org.jsoup.parser.CharacterReader: boolean matches(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        $i0 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        $r1.<org.jsoup.parser.CharacterReader: int pos> = $i2;

        return 1;

     label1:
        return 0;
    }

    boolean matchConsumeIgnoreCase(java.lang.String)
    {
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.String $r0;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<org.jsoup.parser.CharacterReader: boolean matchesIgnoreCase(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        $i0 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        $r1.<org.jsoup.parser.CharacterReader: int pos> = $i2;

        return 1;

     label1:
        return 0;
    }

    boolean matches(char)
    {
        java.lang.String $r0;
        boolean $z0;
        int $i0;
        char $c1, $c2;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $c1 := @parameter0: char;

        $z0 = virtualinvoke $r1.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r0 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i0 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c2 != $c1 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean matches(java.lang.String)
    {
        boolean $z0;
        int $i0;
        java.lang.String $r0, $r1;
        org.jsoup.parser.CharacterReader $r2;

        $r2 := @this: org.jsoup.parser.CharacterReader;

        $r0 := @parameter0: java.lang.String;

        $r1 = $r2.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i0 = $r2.<org.jsoup.parser.CharacterReader: int pos>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String,int)>($r0, $i0);

        return $z0;
    }

    transient boolean matchesAny(char[])
    {
        java.lang.String $r0;
        boolean $z0;
        char $c0, $c1;
        int $i2, $i3, $i4;
        char[] $r1;
        org.jsoup.parser.CharacterReader $r2;

        $r2 := @this: org.jsoup.parser.CharacterReader;

        $r1 := @parameter0: char[];

        $z0 = virtualinvoke $r2.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r0 = $r2.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i3 = $r2.<org.jsoup.parser.CharacterReader: int pos>;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);

        $i4 = lengthof $r1;

        $i2 = 0;

     label2:
        if $i2 >= $i4 goto label4;

        $c0 = $r1[$i2];

        if $c0 != $c1 goto label3;

        return 1;

     label3:
        $i2 = $i2 + 1;

        goto label2;

     label4:
        return 0;
    }

    boolean matchesDigit()
    {
        char $c0;
        java.lang.String $r0;
        boolean $z0;
        int $i1;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $z0 = virtualinvoke $r1.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r0 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i1 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if $c0 < 48 goto label2;

        if $c0 > 57 goto label3;

        return 1;

     label2:
        return 0;

     label3:
        return 0;
    }

    boolean matchesIgnoreCase(java.lang.String)
    {
        boolean $z0;
        int $i0, $i1;
        java.lang.String $r0, $r1;
        org.jsoup.parser.CharacterReader $r2;

        $r2 := @this: org.jsoup.parser.CharacterReader;

        $r0 := @parameter0: java.lang.String;

        $r1 = $r2.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i0 = $r2.<org.jsoup.parser.CharacterReader: int pos>;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, $i0, $r0, 0, $i1);

        return $z0;
    }

    boolean matchesLetter()
    {
        char $c0;
        java.lang.String $r0;
        boolean $z0;
        int $i1;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $z0 = virtualinvoke $r1.<org.jsoup.parser.CharacterReader: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r0 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i1 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        if $c0 < 65 goto label2;

        if $c0 <= 90 goto label3;

     label2:
        if $c0 < 97 goto label4;

        if $c0 > 122 goto label5;

     label3:
        return 1;

     label4:
        return 0;

     label5:
        return 0;
    }

    int pos()
    {
        int i0;
        org.jsoup.parser.CharacterReader $r0;

        $r0 := @this: org.jsoup.parser.CharacterReader;

        i0 = $r0.<org.jsoup.parser.CharacterReader: int pos>;

        return i0;
    }

    void rewindToMark()
    {
        int $i0;
        org.jsoup.parser.CharacterReader $r0;

        $r0 := @this: org.jsoup.parser.CharacterReader;

        $i0 = $r0.<org.jsoup.parser.CharacterReader: int mark>;

        $r0.<org.jsoup.parser.CharacterReader: int pos> = $i0;

        return;
    }

    public java.lang.String toString()
    {
        int $i0;
        java.lang.String $r0, $r2;
        org.jsoup.parser.CharacterReader $r1;

        $r1 := @this: org.jsoup.parser.CharacterReader;

        $r0 = $r1.<org.jsoup.parser.CharacterReader: java.lang.String input>;

        $i0 = $r1.<org.jsoup.parser.CharacterReader: int pos>;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r2;
    }

    void unconsume()
    {
        int $i0, $i1;
        org.jsoup.parser.CharacterReader $r0;

        $r0 := @this: org.jsoup.parser.CharacterReader;

        $i0 = $r0.<org.jsoup.parser.CharacterReader: int pos>;

        $i1 = $i0 + -1;

        $r0.<org.jsoup.parser.CharacterReader: int pos> = $i1;

        return;
    }

    public static void <clinit>()
    {
        <org.jsoup.parser.CharacterReader: char EOF> = 65535;

        <org.jsoup.parser.CharacterReader: char EOF> = 65535;

        return;
    }
}
