class org.simpleframework.xml.stream.InputAttribute extends java.lang.Object implements org.simpleframework.xml.stream.InputNode
{
    private java.lang.String name;
    private org.simpleframework.xml.stream.InputNode parent;
    private java.lang.String prefix;
    private java.lang.String reference;
    private java.lang.Object source;
    private java.lang.String value;

    public void <init>(org.simpleframework.xml.stream.InputNode, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        org.simpleframework.xml.stream.InputNode $r2;
        org.simpleframework.xml.stream.InputAttribute $r3;

        $r3 := @this: org.simpleframework.xml.stream.InputAttribute;

        $r2 := @parameter0: org.simpleframework.xml.stream.InputNode;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        $r3.<org.simpleframework.xml.stream.InputAttribute: org.simpleframework.xml.stream.InputNode parent> = $r2;

        $r3.<org.simpleframework.xml.stream.InputAttribute: java.lang.String value> = $r1;

        $r3.<org.simpleframework.xml.stream.InputAttribute: java.lang.String name> = $r0;

        return;
    }

    public void <init>(org.simpleframework.xml.stream.InputNode, org.simpleframework.xml.stream.Attribute)
    {
        java.lang.Object $r0;
        java.lang.String $r1, $r5, $r6, $r7;
        org.simpleframework.xml.stream.Attribute $r2;
        org.simpleframework.xml.stream.InputNode $r3;
        org.simpleframework.xml.stream.InputAttribute $r4;

        $r4 := @this: org.simpleframework.xml.stream.InputAttribute;

        $r3 := @parameter0: org.simpleframework.xml.stream.InputNode;

        $r2 := @parameter1: org.simpleframework.xml.stream.Attribute;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        $r1 = interfaceinvoke $r2.<org.simpleframework.xml.stream.Attribute: java.lang.String getReference()>();

        $r4.<org.simpleframework.xml.stream.InputAttribute: java.lang.String reference> = $r1;

        $r5 = interfaceinvoke $r2.<org.simpleframework.xml.stream.Attribute: java.lang.String getPrefix()>();

        $r4.<org.simpleframework.xml.stream.InputAttribute: java.lang.String prefix> = $r5;

        $r0 = interfaceinvoke $r2.<org.simpleframework.xml.stream.Attribute: java.lang.Object getSource()>();

        $r4.<org.simpleframework.xml.stream.InputAttribute: java.lang.Object source> = $r0;

        $r6 = interfaceinvoke $r2.<org.simpleframework.xml.stream.Attribute: java.lang.String getValue()>();

        $r4.<org.simpleframework.xml.stream.InputAttribute: java.lang.String value> = $r6;

        $r7 = interfaceinvoke $r2.<org.simpleframework.xml.stream.Attribute: java.lang.String getName()>();

        $r4.<org.simpleframework.xml.stream.InputAttribute: java.lang.String name> = $r7;

        $r4.<org.simpleframework.xml.stream.InputAttribute: org.simpleframework.xml.stream.InputNode parent> = $r3;

        return;
    }

    public org.simpleframework.xml.stream.InputNode getAttribute(java.lang.String)
    {
        java.lang.String $r0;
        org.simpleframework.xml.stream.InputAttribute $r1;

        $r1 := @this: org.simpleframework.xml.stream.InputAttribute;

        $r0 := @parameter0: java.lang.String;

        return null;
    }

    public org.simpleframework.xml.stream.NodeMap getAttributes()
    {
        org.simpleframework.xml.stream.InputNodeMap $r0;
        org.simpleframework.xml.stream.InputAttribute $r1;

        $r1 := @this: org.simpleframework.xml.stream.InputAttribute;

        $r0 = new org.simpleframework.xml.stream.InputNodeMap;

        specialinvoke $r0.<org.simpleframework.xml.stream.InputNodeMap: void <init>(org.simpleframework.xml.stream.InputNode)>($r1);

        return $r0;
    }

    public java.lang.String getName()
    {
        java.lang.String r0;
        org.simpleframework.xml.stream.InputAttribute $r1;

        $r1 := @this: org.simpleframework.xml.stream.InputAttribute;

        r0 = $r1.<org.simpleframework.xml.stream.InputAttribute: java.lang.String name>;

        return r0;
    }

    public org.simpleframework.xml.stream.InputNode getNext()
    {
        org.simpleframework.xml.stream.InputAttribute $r0;

        $r0 := @this: org.simpleframework.xml.stream.InputAttribute;

        return null;
    }

    public org.simpleframework.xml.stream.InputNode getNext(java.lang.String)
    {
        java.lang.String $r0;
        org.simpleframework.xml.stream.InputAttribute $r1;

        $r1 := @this: org.simpleframework.xml.stream.InputAttribute;

        $r0 := @parameter0: java.lang.String;

        return null;
    }

    public org.simpleframework.xml.stream.InputNode getParent()
    {
        org.simpleframework.xml.stream.InputNode r0;
        org.simpleframework.xml.stream.InputAttribute $r1;

        $r1 := @this: org.simpleframework.xml.stream.InputAttribute;

        r0 = $r1.<org.simpleframework.xml.stream.InputAttribute: org.simpleframework.xml.stream.InputNode parent>;

        return r0;
    }

    public volatile org.simpleframework.xml.stream.Node getParent()
    {
        org.simpleframework.xml.stream.InputNode $r0;
        org.simpleframework.xml.stream.InputAttribute $r1;

        $r1 := @this: org.simpleframework.xml.stream.InputAttribute;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.stream.InputAttribute: org.simpleframework.xml.stream.InputNode getParent()>();

        return $r0;
    }

    public org.simpleframework.xml.stream.Position getPosition()
    {
        org.simpleframework.xml.stream.Position $r0;
        org.simpleframework.xml.stream.InputNode $r1;
        org.simpleframework.xml.stream.InputAttribute $r2;

        $r2 := @this: org.simpleframework.xml.stream.InputAttribute;

        $r1 = $r2.<org.simpleframework.xml.stream.InputAttribute: org.simpleframework.xml.stream.InputNode parent>;

        $r0 = interfaceinvoke $r1.<org.simpleframework.xml.stream.InputNode: org.simpleframework.xml.stream.Position getPosition()>();

        return $r0;
    }

    public java.lang.String getPrefix()
    {
        java.lang.String r0;
        org.simpleframework.xml.stream.InputAttribute $r1;

        $r1 := @this: org.simpleframework.xml.stream.InputAttribute;

        r0 = $r1.<org.simpleframework.xml.stream.InputAttribute: java.lang.String prefix>;

        return r0;
    }

    public java.lang.String getReference()
    {
        java.lang.String r0;
        org.simpleframework.xml.stream.InputAttribute $r1;

        $r1 := @this: org.simpleframework.xml.stream.InputAttribute;

        r0 = $r1.<org.simpleframework.xml.stream.InputAttribute: java.lang.String reference>;

        return r0;
    }

    public java.lang.Object getSource()
    {
        java.lang.Object r0;
        org.simpleframework.xml.stream.InputAttribute $r1;

        $r1 := @this: org.simpleframework.xml.stream.InputAttribute;

        r0 = $r1.<org.simpleframework.xml.stream.InputAttribute: java.lang.Object source>;

        return r0;
    }

    public java.lang.String getValue()
    {
        java.lang.String r0;
        org.simpleframework.xml.stream.InputAttribute $r1;

        $r1 := @this: org.simpleframework.xml.stream.InputAttribute;

        r0 = $r1.<org.simpleframework.xml.stream.InputAttribute: java.lang.String value>;

        return r0;
    }

    public boolean isElement()
    {
        org.simpleframework.xml.stream.InputAttribute $r0;

        $r0 := @this: org.simpleframework.xml.stream.InputAttribute;

        return 0;
    }

    public boolean isEmpty()
    {
        org.simpleframework.xml.stream.InputAttribute $r0;

        $r0 := @this: org.simpleframework.xml.stream.InputAttribute;

        return 0;
    }

    public boolean isRoot()
    {
        org.simpleframework.xml.stream.InputAttribute $r0;

        $r0 := @this: org.simpleframework.xml.stream.InputAttribute;

        return 0;
    }

    public void skip()
    {
        org.simpleframework.xml.stream.InputAttribute $r0;

        $r0 := @this: org.simpleframework.xml.stream.InputAttribute;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        java.lang.String $r1, $r3, $r4;
        org.simpleframework.xml.stream.InputAttribute $r2;

        $r2 := @this: org.simpleframework.xml.stream.InputAttribute;

        $r0 = newarray (java.lang.Object)[2];

        $r1 = $r2.<org.simpleframework.xml.stream.InputAttribute: java.lang.String name>;

        $r0[0] = $r1;

        $r3 = $r2.<org.simpleframework.xml.stream.InputAttribute: java.lang.String value>;

        $r0[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("attribute %s=\'%s\'", $r0);

        return $r4;
    }
}
