class org.simpleframework.xml.core.MethodContact extends java.lang.Object implements org.simpleframework.xml.core.Contact
{
    private java.lang.reflect.Method get;
    private java.lang.Class item;
    private java.lang.Class[] items;
    private java.lang.annotation.Annotation label;
    private java.lang.String name;
    private org.simpleframework.xml.core.MethodPart set;
    private java.lang.Class type;

    public void <init>(org.simpleframework.xml.core.MethodPart)
    {
        org.simpleframework.xml.core.MethodPart $r0;
        org.simpleframework.xml.core.MethodContact $r1;

        $r1 := @this: org.simpleframework.xml.core.MethodContact;

        $r0 := @parameter0: org.simpleframework.xml.core.MethodPart;

        specialinvoke $r1.<org.simpleframework.xml.core.MethodContact: void <init>(org.simpleframework.xml.core.MethodPart,org.simpleframework.xml.core.MethodPart)>($r0, null);

        return;
    }

    public void <init>(org.simpleframework.xml.core.MethodPart, org.simpleframework.xml.core.MethodPart)
    {
        java.lang.String $r0;
        java.lang.reflect.Method $r1;
        java.lang.Class $r2, $r8;
        java.lang.Class[] $r3;
        java.lang.annotation.Annotation $r4;
        org.simpleframework.xml.core.MethodPart $r5, $r6;
        org.simpleframework.xml.core.MethodContact $r7;

        $r7 := @this: org.simpleframework.xml.core.MethodContact;

        $r5 := @parameter0: org.simpleframework.xml.core.MethodPart;

        $r6 := @parameter1: org.simpleframework.xml.core.MethodPart;

        specialinvoke $r7.<java.lang.Object: void <init>()>();

        $r4 = interfaceinvoke $r5.<org.simpleframework.xml.core.MethodPart: java.lang.annotation.Annotation getAnnotation()>();

        $r7.<org.simpleframework.xml.core.MethodContact: java.lang.annotation.Annotation label> = $r4;

        $r3 = interfaceinvoke $r5.<org.simpleframework.xml.core.MethodPart: java.lang.Class[] getDependents()>();

        $r7.<org.simpleframework.xml.core.MethodContact: java.lang.Class[] items> = $r3;

        $r2 = interfaceinvoke $r5.<org.simpleframework.xml.core.MethodPart: java.lang.Class getDependent()>();

        $r7.<org.simpleframework.xml.core.MethodContact: java.lang.Class item> = $r2;

        $r1 = interfaceinvoke $r5.<org.simpleframework.xml.core.MethodPart: java.lang.reflect.Method getMethod()>();

        $r7.<org.simpleframework.xml.core.MethodContact: java.lang.reflect.Method get> = $r1;

        $r8 = interfaceinvoke $r5.<org.simpleframework.xml.core.MethodPart: java.lang.Class getType()>();

        $r7.<org.simpleframework.xml.core.MethodContact: java.lang.Class type> = $r8;

        $r0 = interfaceinvoke $r5.<org.simpleframework.xml.core.MethodPart: java.lang.String getName()>();

        $r7.<org.simpleframework.xml.core.MethodContact: java.lang.String name> = $r0;

        $r7.<org.simpleframework.xml.core.MethodContact: org.simpleframework.xml.core.MethodPart set> = $r6;

        return;
    }

    public java.lang.Object get(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object[] $r0;
        java.lang.reflect.Method $r1;
        java.lang.Object $r2, $r4;
        org.simpleframework.xml.core.MethodContact $r3;

        $r3 := @this: org.simpleframework.xml.core.MethodContact;

        $r2 := @parameter0: java.lang.Object;

        $r1 = $r3.<org.simpleframework.xml.core.MethodContact: java.lang.reflect.Method get>;

        $r0 = newarray (java.lang.Object)[0];

        $r4 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r0);

        return $r4;
    }

    public java.lang.annotation.Annotation getAnnotation()
    {
        java.lang.annotation.Annotation r0;
        org.simpleframework.xml.core.MethodContact $r1;

        $r1 := @this: org.simpleframework.xml.core.MethodContact;

        r0 = $r1.<org.simpleframework.xml.core.MethodContact: java.lang.annotation.Annotation label>;

        return r0;
    }

    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    {
        org.simpleframework.xml.core.MethodPart $r0, $r8;
        java.lang.annotation.Annotation $r1, $r2, $r7, $r9;
        java.lang.reflect.Method $r3;
        java.lang.Class $r4, $r5;
        org.simpleframework.xml.core.MethodContact $r6;

        $r6 := @this: org.simpleframework.xml.core.MethodContact;

        $r4 := @parameter0: java.lang.Class;

        $r3 = $r6.<org.simpleframework.xml.core.MethodContact: java.lang.reflect.Method get>;

        $r1 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>($r4);

        $r2 = $r6.<org.simpleframework.xml.core.MethodContact: java.lang.annotation.Annotation label>;

        $r5 = interfaceinvoke $r2.<java.lang.annotation.Annotation: java.lang.Class annotationType()>();

        if $r4 != $r5 goto label1;

        $r7 = $r6.<org.simpleframework.xml.core.MethodContact: java.lang.annotation.Annotation label>;

        return $r7;

     label1:
        if $r1 != null goto label2;

        $r0 = $r6.<org.simpleframework.xml.core.MethodContact: org.simpleframework.xml.core.MethodPart set>;

        if $r0 == null goto label3;

        $r8 = $r6.<org.simpleframework.xml.core.MethodContact: org.simpleframework.xml.core.MethodPart set>;

        $r9 = interfaceinvoke $r8.<org.simpleframework.xml.core.MethodPart: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>($r4);

        return $r9;

     label2:
        return $r1;

     label3:
        return $r1;
    }

    public java.lang.Class getDependent()
    {
        java.lang.Class r0;
        org.simpleframework.xml.core.MethodContact $r1;

        $r1 := @this: org.simpleframework.xml.core.MethodContact;

        r0 = $r1.<org.simpleframework.xml.core.MethodContact: java.lang.Class item>;

        return r0;
    }

    public java.lang.Class[] getDependents()
    {
        java.lang.Class[] r0;
        org.simpleframework.xml.core.MethodContact $r1;

        $r1 := @this: org.simpleframework.xml.core.MethodContact;

        r0 = $r1.<org.simpleframework.xml.core.MethodContact: java.lang.Class[] items>;

        return r0;
    }

    public java.lang.String getName()
    {
        java.lang.String r0;
        org.simpleframework.xml.core.MethodContact $r1;

        $r1 := @this: org.simpleframework.xml.core.MethodContact;

        r0 = $r1.<org.simpleframework.xml.core.MethodContact: java.lang.String name>;

        return r0;
    }

    public java.lang.Class getType()
    {
        java.lang.Class r0;
        org.simpleframework.xml.core.MethodContact $r1;

        $r1 := @this: org.simpleframework.xml.core.MethodContact;

        r0 = $r1.<org.simpleframework.xml.core.MethodContact: java.lang.Class type>;

        return r0;
    }

    public boolean isReadOnly()
    {
        org.simpleframework.xml.core.MethodPart $r0;
        org.simpleframework.xml.core.MethodContact $r1;

        $r1 := @this: org.simpleframework.xml.core.MethodContact;

        $r0 = $r1.<org.simpleframework.xml.core.MethodContact: org.simpleframework.xml.core.MethodPart set>;

        if $r0 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void set(java.lang.Object, java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object[] $r0, $r11;
        org.simpleframework.xml.core.MethodException $r1;
        org.simpleframework.xml.core.MethodPart $r2, $r9;
        java.lang.Class $r3;
        java.lang.String $r4;
        java.lang.reflect.Method $r5, $r10;
        java.lang.Object $r6, $r7;
        org.simpleframework.xml.core.MethodContact $r8;

        $r8 := @this: org.simpleframework.xml.core.MethodContact;

        $r6 := @parameter0: java.lang.Object;

        $r7 := @parameter1: java.lang.Object;

        $r5 = $r8.<org.simpleframework.xml.core.MethodContact: java.lang.reflect.Method get>;

        $r3 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r2 = $r8.<org.simpleframework.xml.core.MethodContact: org.simpleframework.xml.core.MethodPart set>;

        if $r2 != null goto label1;

        $r1 = new org.simpleframework.xml.core.MethodException;

        $r0 = newarray (java.lang.Object)[2];

        $r4 = $r8.<org.simpleframework.xml.core.MethodContact: java.lang.String name>;

        $r0[0] = $r4;

        $r0[1] = $r3;

        specialinvoke $r1.<org.simpleframework.xml.core.MethodException: void <init>(java.lang.String,java.lang.Object[])>("Property \'%s\' is read only in %s", $r0);

        throw $r1;

     label1:
        $r9 = $r8.<org.simpleframework.xml.core.MethodContact: org.simpleframework.xml.core.MethodPart set>;

        $r10 = interfaceinvoke $r9.<org.simpleframework.xml.core.MethodPart: java.lang.reflect.Method getMethod()>();

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r7;

        virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r11);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        java.lang.String $r1, $r3;
        org.simpleframework.xml.core.MethodContact $r2;

        $r2 := @this: org.simpleframework.xml.core.MethodContact;

        $r0 = newarray (java.lang.Object)[1];

        $r1 = $r2.<org.simpleframework.xml.core.MethodContact: java.lang.String name>;

        $r0[0] = $r1;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("method \'%s\'", $r0);

        return $r3;
    }
}
