public class com.oopsconsultancy.xmltask.ant.Replace extends java.lang.Object implements com.oopsconsultancy.xmltask.ant.Instruction
{
    private com.oopsconsultancy.xmltask.Action action;
    private java.lang.String buffer;
    private boolean expandProperties;
    private java.io.File file;
    private java.lang.String ifProperty;
    private java.lang.String path;
    private com.oopsconsultancy.xmltask.ant.XmlTask task;
    private java.lang.String text;
    private java.lang.String unlessProperty;
    private java.lang.String xml;

    public void <init>()
    {
        com.oopsconsultancy.xmltask.ant.Replace $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.ant.Replace;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.ant.XmlTask task> = null;

        $r0.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.Action action> = null;

        $r0.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String path> = null;

        $r0.<com.oopsconsultancy.xmltask.ant.Replace: boolean expandProperties> = 1;

        return;
    }

    private void register()
    {
        java.lang.Throwable r0;
        org.apache.tools.ant.BuildException r1;
        java.util.Hashtable $r2;
        org.apache.tools.ant.Project $r3, $r4;
        boolean $z0;
        java.io.File $r5, $r25;
        com.oopsconsultancy.xmltask.Action $r6, $r21;
        com.oopsconsultancy.xmltask.XmlAction $r7, $r18, $r27, $r35;
        com.oopsconsultancy.xmltask.ant.XmlTask $r8, $r17, $r24, $r26, $r29, $r31, $r34;
        java.lang.String $r9, $r14, $r15, $r16, $r19, $r20, $r22, $r23, $r28, $r30, $r32, $r33;
        com.oopsconsultancy.xmltask.XmlReplace r11;
        java.lang.Exception $r12;
        com.oopsconsultancy.xmltask.ant.Replace $r13;

        $r13 := @this: com.oopsconsultancy.xmltask.ant.Replace;

     label01:
        $r9 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String buffer>;

        if $r9 == null goto label02;

        $r14 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String buffer>;

        $r8 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        $r7 = staticinvoke <com.oopsconsultancy.xmltask.XmlAction: com.oopsconsultancy.xmltask.XmlAction xmlActionfromBuffer(java.lang.String,org.apache.tools.ant.Task)>($r14, $r8);

        $r13.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.Action action> = $r7;

     label02:
        $r15 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String xml>;

        if $r15 == null goto label04;

        $r16 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String xml>;

        $r17 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        $r18 = staticinvoke <com.oopsconsultancy.xmltask.XmlAction: com.oopsconsultancy.xmltask.XmlAction xmlActionfromString(java.lang.String,org.apache.tools.ant.Task)>($r16, $r17);

        $r13.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.Action action> = $r18;

     label03:
        $r19 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String path>;

        if $r19 == null goto label10;

        $r6 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.Action action>;

        if $r6 == null goto label11;

        r11 = new com.oopsconsultancy.xmltask.XmlReplace;

        $r20 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String path>;

        $r21 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.Action action>;

        specialinvoke r11.<com.oopsconsultancy.xmltask.XmlReplace: void <init>(java.lang.String,com.oopsconsultancy.xmltask.Action)>($r20, $r21);

        $r22 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String ifProperty>;

        virtualinvoke r11.<com.oopsconsultancy.xmltask.XmlReplace: void setIf(java.lang.String)>($r22);

        $r23 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String unlessProperty>;

        virtualinvoke r11.<com.oopsconsultancy.xmltask.XmlReplace: void setUnless(java.lang.String)>($r23);

        $r24 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        virtualinvoke $r24.<com.oopsconsultancy.xmltask.ant.XmlTask: void add(com.oopsconsultancy.xmltask.XmlReplace)>(r11);

        return;

     label04:
        $r5 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: java.io.File file>;

        if $r5 == null goto label07;

        $r25 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: java.io.File file>;

        $r26 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        $r27 = staticinvoke <com.oopsconsultancy.xmltask.XmlAction: com.oopsconsultancy.xmltask.XmlAction xmlActionfromFile(java.io.File,org.apache.tools.ant.Task)>($r25, $r26);

        $r13.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.Action action> = $r27;

     label05:
        goto label03;

     label06:
        $r12 := @caughtexception;

        r1 = new org.apache.tools.ant.BuildException;

        specialinvoke r1.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to specify text in replace", $r12);

        r0 = (java.lang.Throwable) r1;

        throw r0;

     label07:
        $r28 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String text>;

        if $r28 == null goto label03;

        $z0 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: boolean expandProperties>;

        if $z0 == 0 goto label08;

        $r29 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        $r3 = virtualinvoke $r29.<com.oopsconsultancy.xmltask.ant.XmlTask: org.apache.tools.ant.Project getProject()>();

        $r30 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String text>;

        $r31 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        $r4 = virtualinvoke $r31.<com.oopsconsultancy.xmltask.ant.XmlTask: org.apache.tools.ant.Project getProject()>();

        $r2 = virtualinvoke $r4.<org.apache.tools.ant.Project: java.util.Hashtable getProperties()>();

        $r32 = staticinvoke <org.apache.tools.ant.ProjectHelper: java.lang.String replaceProperties(org.apache.tools.ant.Project,java.lang.String,java.util.Hashtable)>($r3, $r30, $r2);

        $r13.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String text> = $r32;

     label08:
        $r33 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String text>;

        $r34 = $r13.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        $r35 = staticinvoke <com.oopsconsultancy.xmltask.XmlAction: com.oopsconsultancy.xmltask.XmlAction xmlActionfromString(java.lang.String,org.apache.tools.ant.Task)>($r33, $r34);

        $r13.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.Action action> = $r35;

     label09:
        goto label03;

     label10:
        return;

     label11:
        return;

        catch java.lang.Exception from label01 to label03 with label06;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label07 to label09 with label06;
    }

    public void addText(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.Replace $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Replace;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String text> = $r0;

        return;
    }

    public void process(com.oopsconsultancy.xmltask.ant.XmlTask)
    {
        com.oopsconsultancy.xmltask.ant.XmlTask $r0;
        com.oopsconsultancy.xmltask.ant.Replace $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Replace;

        $r0 := @parameter0: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r1.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.ant.XmlTask task> = $r0;

        specialinvoke $r1.<com.oopsconsultancy.xmltask.ant.Replace: void register()>();

        return;
    }

    public void setExpandProperties(boolean)
    {
        boolean $z0;
        com.oopsconsultancy.xmltask.ant.Replace $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.ant.Replace;

        $z0 := @parameter0: boolean;

        $r0.<com.oopsconsultancy.xmltask.ant.Replace: boolean expandProperties> = $z0;

        return;
    }

    public void setIf(java.lang.String)
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.Replace $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Replace;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String ifProperty> = $r0;

        return;
    }

    public void setPath(java.lang.String)
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.Replace $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Replace;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String path> = $r0;

        return;
    }

    public void setUnless(java.lang.String)
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.Replace $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Replace;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String unlessProperty> = $r0;

        return;
    }

    public void setWithBuffer(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.Replace $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Replace;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String buffer> = $r0;

        return;
    }

    public void setWithfile(java.io.File) throws java.lang.Exception
    {
        java.io.File $r0;
        com.oopsconsultancy.xmltask.ant.Replace $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Replace;

        $r0 := @parameter0: java.io.File;

        $r1.<com.oopsconsultancy.xmltask.ant.Replace: java.io.File file> = $r0;

        return;
    }

    public void setWithtext(java.lang.String) throws java.lang.Exception
    {
        com.oopsconsultancy.xmltask.TextAction $r0;
        java.lang.String $r1;
        com.oopsconsultancy.xmltask.ant.Replace $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.ant.Replace;

        $r1 := @parameter0: java.lang.String;

        $r0 = new com.oopsconsultancy.xmltask.TextAction;

        specialinvoke $r0.<com.oopsconsultancy.xmltask.TextAction: void <init>(java.lang.String)>($r1);

        $r2.<com.oopsconsultancy.xmltask.ant.Replace: com.oopsconsultancy.xmltask.Action action> = $r0;

        return;
    }

    public void setWithxml(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.Replace $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Replace;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.Replace: java.lang.String xml> = $r0;

        return;
    }
}
