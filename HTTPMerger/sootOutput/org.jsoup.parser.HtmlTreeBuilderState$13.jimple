final enum class org.jsoup.parser.HtmlTreeBuilderState$13 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r0;
        org.jsoup.parser.HtmlTreeBuilderState$13 $r1;

        $r1 := @this: org.jsoup.parser.HtmlTreeBuilderState$13;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r1.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>($r0, $i0, null);

        return;
    }

    private boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        boolean $z0;
        org.jsoup.parser.HtmlTreeBuilderState $r0;
        org.jsoup.parser.HtmlTreeBuilder $r1;
        org.jsoup.parser.Token $r2;
        org.jsoup.parser.HtmlTreeBuilderState$13 $r3;

        $r3 := @this: org.jsoup.parser.HtmlTreeBuilderState$13;

        $r2 := @parameter0: org.jsoup.parser.Token;

        $r1 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $r0 = <org.jsoup.parser.HtmlTreeBuilderState$13: org.jsoup.parser.HtmlTreeBuilderState InTable>;

        $z0 = virtualinvoke $r1.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>($r2, $r0);

        return $z0;
    }

    private boolean exitTableBody(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        java.lang.String $r0;
        org.jsoup.nodes.Element $r1;
        org.jsoup.parser.Token$EndTag $r2;
        boolean $z0, $z1, $z2, $z3;
        org.jsoup.parser.HtmlTreeBuilder $r3;
        org.jsoup.parser.Token $r4;
        org.jsoup.parser.HtmlTreeBuilderState$13 $r5;

        $r5 := @this: org.jsoup.parser.HtmlTreeBuilderState$13;

        $r4 := @parameter0: org.jsoup.parser.Token;

        $r3 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $z0 = virtualinvoke $r3.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>("tbody");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke $r3.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>("thead");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke $r3.<org.jsoup.parser.HtmlTreeBuilder: boolean inScope(java.lang.String)>("tfoot");

        if $z2 != 0 goto label1;

        virtualinvoke $r3.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>($r5);

        return 0;

     label1:
        virtualinvoke $r3.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableBodyContext()>();

        $r2 = new org.jsoup.parser.Token$EndTag;

        $r1 = virtualinvoke $r3.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r0 = virtualinvoke $r1.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        specialinvoke $r2.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>($r0);

        virtualinvoke $r3.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r2);

        $z3 = virtualinvoke $r3.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r4);

        return $z3;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.Token$EndTag $r0;
        java.lang.String[] $r1, $r11, $r13, $r15;
        org.jsoup.parser.HtmlTreeBuilderState $r2, $r14;
        java.lang.String $r3, $r12;
        org.jsoup.parser.Token$StartTag $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        int $i0, $i1;
        org.jsoup.parser.Token$TokenType $r6;
        int[] $r7;
        org.jsoup.parser.HtmlTreeBuilder $r8;
        org.jsoup.parser.Token $r9;
        org.jsoup.parser.HtmlTreeBuilderState$13 $r10;

        $r10 := @this: org.jsoup.parser.HtmlTreeBuilderState$13;

        $r9 := @parameter0: org.jsoup.parser.Token;

        $r8 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $r7 = <org.jsoup.parser.HtmlTreeBuilderState$24: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;

        $r6 = $r9.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $i0 = virtualinvoke $r6.<org.jsoup.parser.Token$TokenType: int ordinal()>();

        $i1 = $r7[$i0];

        lookupswitch($i1)
        {
            case 3: goto label02;
            case 4: goto label07;
            default: goto label01;
        };

     label01:
        $z0 = specialinvoke $r10.<org.jsoup.parser.HtmlTreeBuilderState$13: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r9, $r8);

        return $z0;

     label02:
        $r4 = virtualinvoke $r9.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        $r3 = virtualinvoke $r4.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("tr");

        if $z1 == 0 goto label04;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableBodyContext()>();

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r4);

        $r2 = <org.jsoup.parser.HtmlTreeBuilderState$13: org.jsoup.parser.HtmlTreeBuilderState InRow>;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r2);

     label03:
        return 1;

     label04:
        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "th";

        $r1[1] = "td";

        $z2 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r3, $r1);

        if $z2 == 0 goto label05;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>($r10);

        $r5 = new org.jsoup.parser.Token$StartTag;

        specialinvoke $r5.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("tr");

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r5);

        $z3 = virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r4);

        return $z3;

     label05:
        $r11 = newarray (java.lang.String)[6];

        $r11[0] = "caption";

        $r11[1] = "col";

        $r11[2] = "colgroup";

        $r11[3] = "tbody";

        $r11[4] = "tfoot";

        $r11[5] = "thead";

        $z4 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r3, $r11);

        if $z4 == 0 goto label06;

        $z5 = specialinvoke $r10.<org.jsoup.parser.HtmlTreeBuilderState$13: boolean exitTableBody(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r9, $r8);

        return $z5;

     label06:
        $z6 = specialinvoke $r10.<org.jsoup.parser.HtmlTreeBuilderState$13: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r9, $r8);

        return $z6;

     label07:
        $r0 = virtualinvoke $r9.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();

        $r12 = virtualinvoke $r0.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();

        $r13 = newarray (java.lang.String)[3];

        $r13[0] = "tbody";

        $r13[1] = "tfoot";

        $r13[2] = "thead";

        $z7 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r12, $r13);

        if $z7 == 0 goto label09;

        $z8 = virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>($r12);

        if $z8 != 0 goto label08;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>($r10);

        return 0;

     label08:
        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableBodyContext()>();

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element pop()>();

        $r14 = <org.jsoup.parser.HtmlTreeBuilderState$13: org.jsoup.parser.HtmlTreeBuilderState InTable>;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r14);

        goto label03;

     label09:
        $z9 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("table");

        if $z9 == 0 goto label10;

        $z10 = specialinvoke $r10.<org.jsoup.parser.HtmlTreeBuilderState$13: boolean exitTableBody(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r9, $r8);

        return $z10;

     label10:
        $r15 = newarray (java.lang.String)[8];

        $r15[0] = "body";

        $r15[1] = "caption";

        $r15[2] = "col";

        $r15[3] = "colgroup";

        $r15[4] = "html";

        $r15[5] = "td";

        $r15[6] = "th";

        $r15[7] = "tr";

        $z11 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r12, $r15);

        if $z11 == 0 goto label11;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>($r10);

        return 0;

     label11:
        $z12 = specialinvoke $r10.<org.jsoup.parser.HtmlTreeBuilderState$13: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r9, $r8);

        return $z12;
    }
}
