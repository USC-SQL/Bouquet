class org.simpleframework.xml.core.Revision extends java.lang.Object
{
    private boolean equal;

    public void <init>()
    {
        org.simpleframework.xml.core.Revision $r0;

        $r0 := @this: org.simpleframework.xml.core.Revision;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.simpleframework.xml.core.Revision: boolean equal> = 1;

        return;
    }

    public boolean compare(java.lang.Object, java.lang.Object)
    {
        java.lang.Double $r0;
        boolean $z0, $z1, $z2;
        java.lang.Object $r1, $r2;
        org.simpleframework.xml.core.Revision $r3;

        $r3 := @this: org.simpleframework.xml.core.Revision;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        $r3.<org.simpleframework.xml.core.Revision: boolean equal> = $z0;

     label1:
        $z1 = $r3.<org.simpleframework.xml.core.Revision: boolean equal>;

        return $z1;

     label2:
        if $r1 == null goto label1;

        $r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(1.0);

        $z2 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r0);

        $r3.<org.simpleframework.xml.core.Revision: boolean equal> = $z2;

        goto label1;
    }

    public double getDefault()
    {
        org.simpleframework.xml.core.Revision $r0;

        $r0 := @this: org.simpleframework.xml.core.Revision;

        return 1.0;
    }

    public boolean isEqual()
    {
        boolean z0;
        org.simpleframework.xml.core.Revision $r0;

        $r0 := @this: org.simpleframework.xml.core.Revision;

        z0 = $r0.<org.simpleframework.xml.core.Revision: boolean equal>;

        return z0;
    }
}
