final enum class org.jsoup.parser.HtmlTreeBuilderState$9 extends org.jsoup.parser.HtmlTreeBuilderState
{

    void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r0;
        org.jsoup.parser.HtmlTreeBuilderState$9 $r1;

        $r1 := @this: org.jsoup.parser.HtmlTreeBuilderState$9;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r1.<org.jsoup.parser.HtmlTreeBuilderState: void <init>(java.lang.String,int,org.jsoup.parser.HtmlTreeBuilderState$1)>($r0, $i0, null);

        return;
    }

    boolean anythingElse(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.parser.HtmlTreeBuilderState $r0, $r7;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r1;
        java.lang.String $r2;
        org.jsoup.nodes.Element $r3;
        org.jsoup.parser.HtmlTreeBuilder $r4;
        org.jsoup.parser.Token $r5;
        org.jsoup.parser.HtmlTreeBuilderState$9 $r6;

        $r6 := @this: org.jsoup.parser.HtmlTreeBuilderState$9;

        $r5 := @parameter0: org.jsoup.parser.Token;

        $r4 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        virtualinvoke $r4.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>($r6);

        $r3 = virtualinvoke $r4.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r2 = virtualinvoke $r3.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $r1 = newarray (java.lang.String)[5];

        $r1[0] = "table";

        $r1[1] = "tbody";

        $r1[2] = "tfoot";

        $r1[3] = "thead";

        $r1[4] = "tr";

        $z0 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r2, $r1);

        if $z0 == 0 goto label1;

        virtualinvoke $r4.<org.jsoup.parser.HtmlTreeBuilder: void setFosterInserts(boolean)>(1);

        $r0 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InBody>;

        $z1 = virtualinvoke $r4.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>($r5, $r0);

        virtualinvoke $r4.<org.jsoup.parser.HtmlTreeBuilder: void setFosterInserts(boolean)>(0);

        return $z1;

     label1:
        $r7 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InBody>;

        $z2 = virtualinvoke $r4.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>($r5, $r7);

        return $z2;
    }

    boolean process(org.jsoup.parser.Token, org.jsoup.parser.HtmlTreeBuilder)
    {
        org.jsoup.nodes.Element $r0, $r20, $r24;
        org.jsoup.nodes.Attributes $r1;
        org.jsoup.parser.Token$EndTag $r2, $r21;
        java.lang.String[] $r3, $r15, $r17, $r23;
        java.lang.String $r4, $r19, $r22, $r25;
        org.jsoup.parser.Token$StartTag $r5, $r13, $r16;
        org.jsoup.parser.Token$Comment $r6;
        org.jsoup.parser.HtmlTreeBuilderState $r7, $r11, $r12, $r14, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29;
        org.jsoup.parser.HtmlTreeBuilder $r8;
        org.jsoup.parser.Token $r9;
        org.jsoup.parser.HtmlTreeBuilderState$9 $r10;

        $r10 := @this: org.jsoup.parser.HtmlTreeBuilderState$9;

        $r9 := @parameter0: org.jsoup.parser.Token;

        $r8 := @parameter1: org.jsoup.parser.HtmlTreeBuilder;

        $z0 = virtualinvoke $r9.<org.jsoup.parser.Token: boolean isCharacter()>();

        if $z0 == 0 goto label01;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void newPendingTableCharacters()>();

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void markInsertionMode()>();

        $r7 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InTableText>;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r7);

        $z1 = virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r9);

        return $z1;

     label01:
        $z2 = virtualinvoke $r9.<org.jsoup.parser.Token: boolean isComment()>();

        if $z2 == 0 goto label02;

        $r6 = virtualinvoke $r9.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r6);

        return 1;

     label02:
        $z3 = virtualinvoke $r9.<org.jsoup.parser.Token: boolean isDoctype()>();

        if $z3 == 0 goto label03;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>($r10);

        return 0;

     label03:
        $z4 = virtualinvoke $r9.<org.jsoup.parser.Token: boolean isStartTag()>();

        if $z4 == 0 goto label16;

        $r5 = virtualinvoke $r9.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        $r4 = virtualinvoke $r5.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();

        $z5 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("caption");

        if $z5 == 0 goto label05;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableContext()>();

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void insertMarkerToFormattingElements()>();

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r5);

        $r11 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InCaption>;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r11);

     label04:
        $z6 = virtualinvoke $r10.<org.jsoup.parser.HtmlTreeBuilderState$9: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r9, $r8);

        return $z6;

     label05:
        $z7 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("colgroup");

        if $z7 == 0 goto label06;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableContext()>();

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r5);

        $r12 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InColumnGroup>;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r12);

        goto label04;

     label06:
        $z8 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("col");

        if $z8 == 0 goto label07;

        $r13 = new org.jsoup.parser.Token$StartTag;

        specialinvoke $r13.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("colgroup");

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r13);

        $z9 = virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r9);

        return $z9;

     label07:
        $r3 = newarray (java.lang.String)[3];

        $r3[0] = "tbody";

        $r3[1] = "tfoot";

        $r3[2] = "thead";

        $z10 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r4, $r3);

        if $z10 == 0 goto label08;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void clearStackToTableContext()>();

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r5);

        $r14 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InTableBody>;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void transition(org.jsoup.parser.HtmlTreeBuilderState)>($r14);

        goto label04;

     label08:
        $r15 = newarray (java.lang.String)[3];

        $r15[0] = "td";

        $r15[1] = "th";

        $r15[2] = "tr";

        $z11 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r4, $r15);

        if $z11 == 0 goto label09;

        $r16 = new org.jsoup.parser.Token$StartTag;

        specialinvoke $r16.<org.jsoup.parser.Token$StartTag: void <init>(java.lang.String)>("tbody");

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r16);

        $z12 = virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r9);

        return $z12;

     label09:
        $z13 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("table");

        if $z13 == 0 goto label10;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>($r10);

        $r2 = new org.jsoup.parser.Token$EndTag;

        specialinvoke $r2.<org.jsoup.parser.Token$EndTag: void <init>(java.lang.String)>("table");

        $z14 = virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r2);

        if $z14 == 0 goto label04;

        $z15 = virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token)>($r9);

        return $z15;

     label10:
        $r17 = newarray (java.lang.String)[2];

        $r17[0] = "style";

        $r17[1] = "script";

        $z16 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r4, $r17);

        if $z16 == 0 goto label11;

        $r18 = <org.jsoup.parser.HtmlTreeBuilderState$9: org.jsoup.parser.HtmlTreeBuilderState InHead>;

        $z17 = virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState)>($r9, $r18);

        return $z17;

     label11:
        $z18 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("input");

        if $z18 == 0 goto label13;

        $r1 = $r5.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;

        $r19 = virtualinvoke $r1.<org.jsoup.nodes.Attributes: java.lang.String get(java.lang.String)>("type");

        $z19 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("hidden");

        if $z19 != 0 goto label12;

        $z20 = virtualinvoke $r10.<org.jsoup.parser.HtmlTreeBuilderState$9: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r9, $r8);

        return $z20;

     label12:
        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>($r5);

        goto label04;

     label13:
        $z21 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("form");

        if $z21 == 0 goto label15;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>($r10);

        $r0 = virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element getFormElement()>();

        if $r0 == null goto label14;

        return 0;

     label14:
        $r20 = virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag)>($r5);

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void setFormElement(org.jsoup.nodes.Element)>($r20);

        goto label04;

     label15:
        $z22 = virtualinvoke $r10.<org.jsoup.parser.HtmlTreeBuilderState$9: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r9, $r8);

        return $z22;

     label16:
        $z23 = virtualinvoke $r9.<org.jsoup.parser.Token: boolean isEndTag()>();

        if $z23 == 0 goto label20;

        $r21 = virtualinvoke $r9.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();

        $r22 = virtualinvoke $r21.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();

        $z24 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>("table");

        if $z24 == 0 goto label18;

        $z25 = virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: boolean inTableScope(java.lang.String)>($r22);

        if $z25 != 0 goto label17;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>($r10);

        return 0;

     label17:
        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void popStackToClose(java.lang.String)>("table");

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void resetInsertionMode()>();

        goto label04;

     label18:
        $r23 = newarray (java.lang.String)[11];

        $r23[0] = "body";

        $r23[1] = "caption";

        $r23[2] = "col";

        $r23[3] = "colgroup";

        $r23[4] = "html";

        $r23[5] = "tbody";

        $r23[6] = "td";

        $r23[7] = "tfoot";

        $r23[8] = "th";

        $r23[9] = "thead";

        $r23[10] = "tr";

        $z26 = staticinvoke <org.jsoup.helper.StringUtil: boolean in(java.lang.String,java.lang.String[])>($r22, $r23);

        if $z26 == 0 goto label19;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>($r10);

        return 0;

     label19:
        $z27 = virtualinvoke $r10.<org.jsoup.parser.HtmlTreeBuilderState$9: boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder)>($r9, $r8);

        return $z27;

     label20:
        $z28 = virtualinvoke $r9.<org.jsoup.parser.Token: boolean isEOF()>();

        if $z28 == 0 goto label04;

        $r24 = virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        $r25 = virtualinvoke $r24.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $z29 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("html");

        if $z29 == 0 goto label21;

        virtualinvoke $r8.<org.jsoup.parser.HtmlTreeBuilder: void error(org.jsoup.parser.HtmlTreeBuilderState)>($r10);

        return 1;

     label21:
        return 1;
    }
}
