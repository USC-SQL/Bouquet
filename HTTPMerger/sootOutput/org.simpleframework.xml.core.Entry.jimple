class org.simpleframework.xml.core.Entry extends java.lang.Object
{
    private static final java.lang.String DEFAULT_NAME;
    private boolean attribute;
    private org.simpleframework.xml.core.Contact contact;
    private java.lang.String entry;
    private java.lang.String key;
    private java.lang.Class keyType;
    private org.simpleframework.xml.ElementMap label;
    private java.lang.String value;
    private java.lang.Class valueType;

    public void <init>(org.simpleframework.xml.core.Contact, org.simpleframework.xml.ElementMap)
    {
        java.lang.String $r0, $r4, $r5;
        boolean $z0;
        org.simpleframework.xml.ElementMap $r1;
        org.simpleframework.xml.core.Contact $r2;
        org.simpleframework.xml.core.Entry $r3;

        $r3 := @this: org.simpleframework.xml.core.Entry;

        $r2 := @parameter0: org.simpleframework.xml.core.Contact;

        $r1 := @parameter1: org.simpleframework.xml.ElementMap;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        $z0 = interfaceinvoke $r1.<org.simpleframework.xml.ElementMap: boolean attribute()>();

        $r3.<org.simpleframework.xml.core.Entry: boolean attribute> = $z0;

        $r0 = interfaceinvoke $r1.<org.simpleframework.xml.ElementMap: java.lang.String entry()>();

        $r3.<org.simpleframework.xml.core.Entry: java.lang.String entry> = $r0;

        $r4 = interfaceinvoke $r1.<org.simpleframework.xml.ElementMap: java.lang.String value()>();

        $r3.<org.simpleframework.xml.core.Entry: java.lang.String value> = $r4;

        $r5 = interfaceinvoke $r1.<org.simpleframework.xml.ElementMap: java.lang.String key()>();

        $r3.<org.simpleframework.xml.core.Entry: java.lang.String key> = $r5;

        $r3.<org.simpleframework.xml.core.Entry: org.simpleframework.xml.core.Contact contact> = $r2;

        $r3.<org.simpleframework.xml.core.Entry: org.simpleframework.xml.ElementMap label> = $r1;

        return;
    }

    private java.lang.Class getDependent(int) throws java.lang.Exception
    {
        java.lang.Class $r0;
        java.lang.Integer $r1;
        java.lang.Object[] $r2;
        org.simpleframework.xml.core.PersistenceException $r3;
        java.lang.Class[] $r4;
        org.simpleframework.xml.core.Contact $r5, $r7;
        int $i0, $i1;
        org.simpleframework.xml.core.Entry $r6;

        $r6 := @this: org.simpleframework.xml.core.Entry;

        $i0 := @parameter0: int;

        $r5 = $r6.<org.simpleframework.xml.core.Entry: org.simpleframework.xml.core.Contact contact>;

        $r4 = interfaceinvoke $r5.<org.simpleframework.xml.core.Contact: java.lang.Class[] getDependents()>();

        $i1 = lengthof $r4;

        if $i1 >= $i0 goto label1;

        $r3 = new org.simpleframework.xml.core.PersistenceException;

        $r2 = newarray (java.lang.Object)[2];

        $r7 = $r6.<org.simpleframework.xml.core.Entry: org.simpleframework.xml.core.Contact contact>;

        $r2[0] = $r7;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r2[1] = $r1;

        specialinvoke $r3.<org.simpleframework.xml.core.PersistenceException: void <init>(java.lang.String,java.lang.Object[])>("Could not find type for %s at index %s", $r2);

        throw $r3;

     label1:
        $r0 = $r4[$i0];

        return $r0;
    }

    private boolean isEmpty(java.lang.String)
    {
        int $i0;
        java.lang.String $r0;
        org.simpleframework.xml.core.Entry $r1;

        $r1 := @this: org.simpleframework.xml.core.Entry;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.simpleframework.xml.core.Contact getContact()
    {
        org.simpleframework.xml.core.Contact r0;
        org.simpleframework.xml.core.Entry $r1;

        $r1 := @this: org.simpleframework.xml.core.Entry;

        r0 = $r1.<org.simpleframework.xml.core.Entry: org.simpleframework.xml.core.Contact contact>;

        return r0;
    }

    public java.lang.String getEntry() throws java.lang.Exception
    {
        boolean $z0;
        java.lang.String $r0, $r2, $r3, $r4;
        org.simpleframework.xml.core.Entry $r1;

        $r1 := @this: org.simpleframework.xml.core.Entry;

        $r0 = $r1.<org.simpleframework.xml.core.Entry: java.lang.String entry>;

        if $r0 != null goto label1;

        $r2 = $r1.<org.simpleframework.xml.core.Entry: java.lang.String entry>;

        return $r2;

     label1:
        $r3 = $r1.<org.simpleframework.xml.core.Entry: java.lang.String entry>;

        $z0 = specialinvoke $r1.<org.simpleframework.xml.core.Entry: boolean isEmpty(java.lang.String)>($r3);

        if $z0 == 0 goto label2;

        $r1.<org.simpleframework.xml.core.Entry: java.lang.String entry> = "entry";

     label2:
        $r4 = $r1.<org.simpleframework.xml.core.Entry: java.lang.String entry>;

        return $r4;
    }

    public java.lang.String getKey() throws java.lang.Exception
    {
        boolean $z0;
        java.lang.String $r0, $r2, $r3, $r4;
        org.simpleframework.xml.core.Entry $r1;

        $r1 := @this: org.simpleframework.xml.core.Entry;

        $r0 = $r1.<org.simpleframework.xml.core.Entry: java.lang.String key>;

        if $r0 != null goto label1;

        $r2 = $r1.<org.simpleframework.xml.core.Entry: java.lang.String key>;

        return $r2;

     label1:
        $r3 = $r1.<org.simpleframework.xml.core.Entry: java.lang.String key>;

        $z0 = specialinvoke $r1.<org.simpleframework.xml.core.Entry: boolean isEmpty(java.lang.String)>($r3);

        if $z0 == 0 goto label2;

        $r1.<org.simpleframework.xml.core.Entry: java.lang.String key> = null;

     label2:
        $r4 = $r1.<org.simpleframework.xml.core.Entry: java.lang.String key>;

        return $r4;
    }

    public org.simpleframework.xml.core.Converter getKey(org.simpleframework.xml.core.Context) throws java.lang.Exception
    {
        org.simpleframework.xml.core.CompositeKey r0;
        org.simpleframework.xml.core.PrimitiveKey r1;
        boolean $z0;
        org.simpleframework.xml.strategy.Type $r2;
        org.simpleframework.xml.core.Context $r3;
        org.simpleframework.xml.core.Entry $r4;

        $r4 := @this: org.simpleframework.xml.core.Entry;

        $r3 := @parameter0: org.simpleframework.xml.core.Context;

        $r2 = virtualinvoke $r4.<org.simpleframework.xml.core.Entry: org.simpleframework.xml.strategy.Type getKeyType()>();

        $z0 = interfaceinvoke $r3.<org.simpleframework.xml.core.Context: boolean isPrimitive(org.simpleframework.xml.strategy.Type)>($r2);

        if $z0 == 0 goto label1;

        r1 = new org.simpleframework.xml.core.PrimitiveKey;

        specialinvoke r1.<org.simpleframework.xml.core.PrimitiveKey: void <init>(org.simpleframework.xml.core.Context,org.simpleframework.xml.core.Entry,org.simpleframework.xml.strategy.Type)>($r3, $r4, $r2);

        return r1;

     label1:
        r0 = new org.simpleframework.xml.core.CompositeKey;

        specialinvoke r0.<org.simpleframework.xml.core.CompositeKey: void <init>(org.simpleframework.xml.core.Context,org.simpleframework.xml.core.Entry,org.simpleframework.xml.strategy.Type)>($r3, $r4, $r2);

        return r0;
    }

    protected org.simpleframework.xml.strategy.Type getKeyType() throws java.lang.Exception
    {
        org.simpleframework.xml.core.ClassType $r0;
        org.simpleframework.xml.ElementMap $r1;
        java.lang.Class $r2, $r3, $r5, $r6, $r7, $r8;
        org.simpleframework.xml.core.Entry $r4;

        $r4 := @this: org.simpleframework.xml.core.Entry;

        $r2 = $r4.<org.simpleframework.xml.core.Entry: java.lang.Class keyType>;

        if $r2 != null goto label1;

        $r1 = $r4.<org.simpleframework.xml.core.Entry: org.simpleframework.xml.ElementMap label>;

        $r5 = interfaceinvoke $r1.<org.simpleframework.xml.ElementMap: java.lang.Class keyType()>();

        $r4.<org.simpleframework.xml.core.Entry: java.lang.Class keyType> = $r5;

        $r3 = $r4.<org.simpleframework.xml.core.Entry: java.lang.Class keyType>;

        $r6 = <java.lang.Void: java.lang.Class TYPE>;

        if $r3 != $r6 goto label1;

        $r7 = specialinvoke $r4.<org.simpleframework.xml.core.Entry: java.lang.Class getDependent(int)>(0);

        $r4.<org.simpleframework.xml.core.Entry: java.lang.Class keyType> = $r7;

     label1:
        $r0 = new org.simpleframework.xml.core.ClassType;

        $r8 = $r4.<org.simpleframework.xml.core.Entry: java.lang.Class keyType>;

        specialinvoke $r0.<org.simpleframework.xml.core.ClassType: void <init>(java.lang.Class)>($r8);

        return $r0;
    }

    public java.lang.String getValue() throws java.lang.Exception
    {
        boolean $z0;
        java.lang.String $r0, $r2, $r3, $r4;
        org.simpleframework.xml.core.Entry $r1;

        $r1 := @this: org.simpleframework.xml.core.Entry;

        $r0 = $r1.<org.simpleframework.xml.core.Entry: java.lang.String value>;

        if $r0 != null goto label1;

        $r2 = $r1.<org.simpleframework.xml.core.Entry: java.lang.String value>;

        return $r2;

     label1:
        $r3 = $r1.<org.simpleframework.xml.core.Entry: java.lang.String value>;

        $z0 = specialinvoke $r1.<org.simpleframework.xml.core.Entry: boolean isEmpty(java.lang.String)>($r3);

        if $z0 == 0 goto label2;

        $r1.<org.simpleframework.xml.core.Entry: java.lang.String value> = null;

     label2:
        $r4 = $r1.<org.simpleframework.xml.core.Entry: java.lang.String value>;

        return $r4;
    }

    public org.simpleframework.xml.core.Converter getValue(org.simpleframework.xml.core.Context) throws java.lang.Exception
    {
        org.simpleframework.xml.core.CompositeValue r0;
        org.simpleframework.xml.core.PrimitiveValue r1;
        boolean $z0;
        org.simpleframework.xml.strategy.Type $r2;
        org.simpleframework.xml.core.Context $r3;
        org.simpleframework.xml.core.Entry $r4;

        $r4 := @this: org.simpleframework.xml.core.Entry;

        $r3 := @parameter0: org.simpleframework.xml.core.Context;

        $r2 = virtualinvoke $r4.<org.simpleframework.xml.core.Entry: org.simpleframework.xml.strategy.Type getValueType()>();

        $z0 = interfaceinvoke $r3.<org.simpleframework.xml.core.Context: boolean isPrimitive(org.simpleframework.xml.strategy.Type)>($r2);

        if $z0 == 0 goto label1;

        r1 = new org.simpleframework.xml.core.PrimitiveValue;

        specialinvoke r1.<org.simpleframework.xml.core.PrimitiveValue: void <init>(org.simpleframework.xml.core.Context,org.simpleframework.xml.core.Entry,org.simpleframework.xml.strategy.Type)>($r3, $r4, $r2);

        return r1;

     label1:
        r0 = new org.simpleframework.xml.core.CompositeValue;

        specialinvoke r0.<org.simpleframework.xml.core.CompositeValue: void <init>(org.simpleframework.xml.core.Context,org.simpleframework.xml.core.Entry,org.simpleframework.xml.strategy.Type)>($r3, $r4, $r2);

        return r0;
    }

    protected org.simpleframework.xml.strategy.Type getValueType() throws java.lang.Exception
    {
        org.simpleframework.xml.core.ClassType $r0;
        org.simpleframework.xml.ElementMap $r1;
        java.lang.Class $r2, $r3, $r5, $r6, $r7, $r8;
        org.simpleframework.xml.core.Entry $r4;

        $r4 := @this: org.simpleframework.xml.core.Entry;

        $r2 = $r4.<org.simpleframework.xml.core.Entry: java.lang.Class valueType>;

        if $r2 != null goto label1;

        $r1 = $r4.<org.simpleframework.xml.core.Entry: org.simpleframework.xml.ElementMap label>;

        $r5 = interfaceinvoke $r1.<org.simpleframework.xml.ElementMap: java.lang.Class valueType()>();

        $r4.<org.simpleframework.xml.core.Entry: java.lang.Class valueType> = $r5;

        $r3 = $r4.<org.simpleframework.xml.core.Entry: java.lang.Class valueType>;

        $r6 = <java.lang.Void: java.lang.Class TYPE>;

        if $r3 != $r6 goto label1;

        $r7 = specialinvoke $r4.<org.simpleframework.xml.core.Entry: java.lang.Class getDependent(int)>(1);

        $r4.<org.simpleframework.xml.core.Entry: java.lang.Class valueType> = $r7;

     label1:
        $r0 = new org.simpleframework.xml.core.ClassType;

        $r8 = $r4.<org.simpleframework.xml.core.Entry: java.lang.Class valueType>;

        specialinvoke $r0.<org.simpleframework.xml.core.ClassType: void <init>(java.lang.Class)>($r8);

        return $r0;
    }

    public boolean isAttribute()
    {
        boolean z0;
        org.simpleframework.xml.core.Entry $r0;

        $r0 := @this: org.simpleframework.xml.core.Entry;

        z0 = $r0.<org.simpleframework.xml.core.Entry: boolean attribute>;

        return z0;
    }

    public boolean isInline() throws java.lang.Exception
    {
        boolean $z0;
        org.simpleframework.xml.core.Entry $r0;

        $r0 := @this: org.simpleframework.xml.core.Entry;

        $z0 = virtualinvoke $r0.<org.simpleframework.xml.core.Entry: boolean isAttribute()>();

        return $z0;
    }

    public java.lang.String toString()
    {
        org.simpleframework.xml.core.Contact $r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;
        org.simpleframework.xml.ElementMap $r3;
        org.simpleframework.xml.core.Entry $r4;

        $r4 := @this: org.simpleframework.xml.core.Entry;

        $r1 = newarray (java.lang.Object)[2];

        $r3 = $r4.<org.simpleframework.xml.core.Entry: org.simpleframework.xml.ElementMap label>;

        $r1[0] = $r3;

        $r0 = $r4.<org.simpleframework.xml.core.Entry: org.simpleframework.xml.core.Contact contact>;

        $r1[1] = $r0;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s on %s", $r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.simpleframework.xml.core.Entry: java.lang.String DEFAULT_NAME> = "entry";

        <org.simpleframework.xml.core.Entry: java.lang.String DEFAULT_NAME> = "entry";

        return;
    }
}
