public class org.jsoup.safety.Whitelist extends java.lang.Object
{
    private java.util.Map attributes;
    private java.util.Map enforcedAttributes;
    private boolean preserveRelativeLinks;
    private java.util.Map protocols;
    private java.util.Set tagNames;

    public void <init>()
    {
        java.util.HashMap $r0, $r3, $r4;
        java.util.HashSet $r1;
        org.jsoup.safety.Whitelist $r2;

        $r2 := @this: org.jsoup.safety.Whitelist;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2.<org.jsoup.safety.Whitelist: java.util.Set tagNames> = $r1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2.<org.jsoup.safety.Whitelist: java.util.Map attributes> = $r0;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r2.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r2.<org.jsoup.safety.Whitelist: java.util.Map protocols> = $r4;

        $r2.<org.jsoup.safety.Whitelist: boolean preserveRelativeLinks> = 0;

        return;
    }

    public static org.jsoup.safety.Whitelist basic()
    {
        java.lang.String[] $r0, $r3, $r5, $r7, $r9, $r11, $r13;
        org.jsoup.safety.Whitelist $r1, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r15;

        $r1 = new org.jsoup.safety.Whitelist;

        specialinvoke $r1.<org.jsoup.safety.Whitelist: void <init>()>();

        $r0 = newarray (java.lang.String)[23];

        $r0[0] = "a";

        $r0[1] = "b";

        $r0[2] = "blockquote";

        $r0[3] = "br";

        $r0[4] = "cite";

        $r0[5] = "code";

        $r0[6] = "dd";

        $r0[7] = "dl";

        $r0[8] = "dt";

        $r0[9] = "em";

        $r0[10] = "i";

        $r0[11] = "li";

        $r0[12] = "ol";

        $r0[13] = "p";

        $r0[14] = "pre";

        $r0[15] = "q";

        $r0[16] = "small";

        $r0[17] = "strike";

        $r0[18] = "strong";

        $r0[19] = "sub";

        $r0[20] = "sup";

        $r0[21] = "u";

        $r0[22] = "ul";

        $r2 = virtualinvoke $r1.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addTags(java.lang.String[])>($r0);

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "href";

        $r4 = virtualinvoke $r2.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("a", $r3);

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "cite";

        $r6 = virtualinvoke $r4.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("blockquote", $r5);

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "cite";

        $r8 = virtualinvoke $r6.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("q", $r7);

        $r9 = newarray (java.lang.String)[4];

        $r9[0] = "ftp";

        $r9[1] = "http";

        $r9[2] = "https";

        $r9[3] = "mailto";

        $r10 = virtualinvoke $r8.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("a", "href", $r9);

        $r11 = newarray (java.lang.String)[2];

        $r11[0] = "http";

        $r11[1] = "https";

        $r12 = virtualinvoke $r10.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("blockquote", "cite", $r11);

        $r13 = newarray (java.lang.String)[2];

        $r13[0] = "http";

        $r13[1] = "https";

        $r14 = virtualinvoke $r12.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("cite", "cite", $r13);

        $r15 = virtualinvoke $r14.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String)>("a", "rel", "nofollow");

        return $r15;
    }

    public static org.jsoup.safety.Whitelist basicWithImages()
    {
        org.jsoup.safety.Whitelist $r0, $r2, $r4, $r6;
        java.lang.String[] $r1, $r3, $r5;

        $r0 = staticinvoke <org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist basic()>();

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "img";

        $r2 = virtualinvoke $r0.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addTags(java.lang.String[])>($r1);

        $r3 = newarray (java.lang.String)[6];

        $r3[0] = "align";

        $r3[1] = "alt";

        $r3[2] = "height";

        $r3[3] = "src";

        $r3[4] = "title";

        $r3[5] = "width";

        $r4 = virtualinvoke $r2.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("img", $r3);

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "http";

        $r5[1] = "https";

        $r6 = virtualinvoke $r4.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("img", "src", $r5);

        return $r6;
    }

    public static org.jsoup.safety.Whitelist none()
    {
        org.jsoup.safety.Whitelist $r0;

        $r0 = new org.jsoup.safety.Whitelist;

        specialinvoke $r0.<org.jsoup.safety.Whitelist: void <init>()>();

        return $r0;
    }

    public static org.jsoup.safety.Whitelist relaxed()
    {
        java.lang.String[] $r0, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31;
        org.jsoup.safety.Whitelist $r1, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32;

        $r1 = new org.jsoup.safety.Whitelist;

        specialinvoke $r1.<org.jsoup.safety.Whitelist: void <init>()>();

        $r0 = newarray (java.lang.String)[41];

        $r0[0] = "a";

        $r0[1] = "b";

        $r0[2] = "blockquote";

        $r0[3] = "br";

        $r0[4] = "caption";

        $r0[5] = "cite";

        $r0[6] = "code";

        $r0[7] = "col";

        $r0[8] = "colgroup";

        $r0[9] = "dd";

        $r0[10] = "div";

        $r0[11] = "dl";

        $r0[12] = "dt";

        $r0[13] = "em";

        $r0[14] = "h1";

        $r0[15] = "h2";

        $r0[16] = "h3";

        $r0[17] = "h4";

        $r0[18] = "h5";

        $r0[19] = "h6";

        $r0[20] = "i";

        $r0[21] = "img";

        $r0[22] = "li";

        $r0[23] = "ol";

        $r0[24] = "p";

        $r0[25] = "pre";

        $r0[26] = "q";

        $r0[27] = "small";

        $r0[28] = "strike";

        $r0[29] = "strong";

        $r0[30] = "sub";

        $r0[31] = "sup";

        $r0[32] = "table";

        $r0[33] = "tbody";

        $r0[34] = "td";

        $r0[35] = "tfoot";

        $r0[36] = "th";

        $r0[37] = "thead";

        $r0[38] = "tr";

        $r0[39] = "u";

        $r0[40] = "ul";

        $r2 = virtualinvoke $r1.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addTags(java.lang.String[])>($r0);

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "href";

        $r3[1] = "title";

        $r4 = virtualinvoke $r2.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("a", $r3);

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "cite";

        $r6 = virtualinvoke $r4.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("blockquote", $r5);

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "span";

        $r7[1] = "width";

        $r8 = virtualinvoke $r6.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("col", $r7);

        $r9 = newarray (java.lang.String)[2];

        $r9[0] = "span";

        $r9[1] = "width";

        $r10 = virtualinvoke $r8.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("colgroup", $r9);

        $r11 = newarray (java.lang.String)[6];

        $r11[0] = "align";

        $r11[1] = "alt";

        $r11[2] = "height";

        $r11[3] = "src";

        $r11[4] = "title";

        $r11[5] = "width";

        $r12 = virtualinvoke $r10.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("img", $r11);

        $r13 = newarray (java.lang.String)[2];

        $r13[0] = "start";

        $r13[1] = "type";

        $r14 = virtualinvoke $r12.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("ol", $r13);

        $r15 = newarray (java.lang.String)[1];

        $r15[0] = "cite";

        $r16 = virtualinvoke $r14.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("q", $r15);

        $r17 = newarray (java.lang.String)[2];

        $r17[0] = "summary";

        $r17[1] = "width";

        $r18 = virtualinvoke $r16.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("table", $r17);

        $r19 = newarray (java.lang.String)[5];

        $r19[0] = "abbr";

        $r19[1] = "axis";

        $r19[2] = "colspan";

        $r19[3] = "rowspan";

        $r19[4] = "width";

        $r20 = virtualinvoke $r18.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("td", $r19);

        $r21 = newarray (java.lang.String)[6];

        $r21[0] = "abbr";

        $r21[1] = "axis";

        $r21[2] = "colspan";

        $r21[3] = "rowspan";

        $r21[4] = "scope";

        $r21[5] = "width";

        $r22 = virtualinvoke $r20.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("th", $r21);

        $r23 = newarray (java.lang.String)[1];

        $r23[0] = "type";

        $r24 = virtualinvoke $r22.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[])>("ul", $r23);

        $r25 = newarray (java.lang.String)[4];

        $r25[0] = "ftp";

        $r25[1] = "http";

        $r25[2] = "https";

        $r25[3] = "mailto";

        $r26 = virtualinvoke $r24.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("a", "href", $r25);

        $r27 = newarray (java.lang.String)[2];

        $r27[0] = "http";

        $r27[1] = "https";

        $r28 = virtualinvoke $r26.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("blockquote", "cite", $r27);

        $r29 = newarray (java.lang.String)[2];

        $r29[0] = "http";

        $r29[1] = "https";

        $r30 = virtualinvoke $r28.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("img", "src", $r29);

        $r31 = newarray (java.lang.String)[2];

        $r31[0] = "http";

        $r31[1] = "https";

        $r32 = virtualinvoke $r30.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[])>("q", "cite", $r31);

        return $r32;
    }

    public static org.jsoup.safety.Whitelist simpleText()
    {
        java.lang.String[] $r0;
        org.jsoup.safety.Whitelist $r1, $r2;

        $r1 = new org.jsoup.safety.Whitelist;

        specialinvoke $r1.<org.jsoup.safety.Whitelist: void <init>()>();

        $r0 = newarray (java.lang.String)[5];

        $r0[0] = "b";

        $r0[1] = "em";

        $r0[2] = "i";

        $r0[3] = "strong";

        $r0[4] = "u";

        $r2 = virtualinvoke $r1.<org.jsoup.safety.Whitelist: org.jsoup.safety.Whitelist addTags(java.lang.String[])>($r0);

        return $r2;
    }

    private boolean testValidProtocol(org.jsoup.nodes.Element, org.jsoup.nodes.Attribute, java.util.Set)
    {
        java.lang.StringBuilder $r0, $r13, $r14;
        org.jsoup.safety.Whitelist$Protocol $r1;
        java.lang.Object $r2;
        java.util.Iterator $r3;
        boolean $z0, $z1, $z2;
        int $i0;
        java.lang.String $r4, $r5, $r6, $r11, $r12, $r15;
        java.util.Set $r7;
        org.jsoup.nodes.Attribute $r8;
        org.jsoup.nodes.Element $r9;
        org.jsoup.safety.Whitelist $r10;

        $r10 := @this: org.jsoup.safety.Whitelist;

        $r9 := @parameter0: org.jsoup.nodes.Element;

        $r8 := @parameter1: org.jsoup.nodes.Attribute;

        $r7 := @parameter2: java.util.Set;

        $r4 = virtualinvoke $r8.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();

        $r5 = virtualinvoke $r9.<org.jsoup.nodes.Element: java.lang.String absUrl(java.lang.String)>($r4);

        $r11 = $r5;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r11 = virtualinvoke $r8.<org.jsoup.nodes.Attribute: java.lang.String getValue()>();

     label1:
        $z0 = $r10.<org.jsoup.safety.Whitelist: boolean preserveRelativeLinks>;

        if $z0 != 0 goto label2;

        virtualinvoke $r8.<org.jsoup.nodes.Attribute: java.lang.String setValue(java.lang.String)>($r11);

     label2:
        $r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (org.jsoup.safety.Whitelist$Protocol) $r2;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r1.<org.jsoup.safety.Whitelist$Protocol: java.lang.String toString()>();

        $r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>($r15);

        if $z2 == 0 goto label3;

        return 1;

     label4:
        return 0;
    }

    public transient org.jsoup.safety.Whitelist addAttributes(java.lang.String, java.lang.String[])
    {
        java.lang.Object $r0;
        java.util.Map $r1, $r11, $r13;
        org.jsoup.safety.Whitelist$AttributeKey $r2;
        java.util.Set $r3, $r9, $r12;
        boolean $z0, $z1, $z2;
        org.jsoup.safety.Whitelist$TagName $r4;
        int $i0, $i1, $i2;
        java.util.HashSet $r5;
        java.lang.String[] $r6;
        java.lang.String $r7, $r10;
        org.jsoup.safety.Whitelist $r8;

        $r8 := @this: org.jsoup.safety.Whitelist;

        $r7 := @parameter0: java.lang.String;

        $r6 := @parameter1: java.lang.String[];

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r7);

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r6);

        $i1 = lengthof $r6;

        if $i1 <= 0 goto label4;

        $z0 = 1;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "No attributes supplied.");

        $r4 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>($r7);

        $r3 = $r8.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

        $r9 = $r8.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r4);

     label2:
        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $i2 = lengthof $r6;

        $i0 = 0;

     label3:
        if $i0 >= $i2 goto label5;

        $r10 = $r6[$i0];

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r10);

        $r2 = staticinvoke <org.jsoup.safety.Whitelist$AttributeKey: org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String)>($r10);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $z0 = 0;

        goto label1;

     label5:
        $r1 = $r8.<org.jsoup.safety.Whitelist: java.util.Map attributes>;

        $z2 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z2 == 0 goto label6;

        $r11 = $r8.<org.jsoup.safety.Whitelist: java.util.Map attributes>;

        $r0 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r12 = (java.util.Set) $r0;

        interfaceinvoke $r12.<java.util.Set: boolean addAll(java.util.Collection)>($r5);

        return $r8;

     label6:
        $r13 = $r8.<org.jsoup.safety.Whitelist: java.util.Map attributes>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $r8;
    }

    public org.jsoup.safety.Whitelist addEnforcedAttribute(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Object $r0;
        java.util.Map $r1, $r12, $r13, $r14;
        org.jsoup.safety.Whitelist$AttributeValue $r2;
        org.jsoup.safety.Whitelist$AttributeKey $r3;
        boolean $z0, $z1;
        org.jsoup.safety.Whitelist$TagName $r4;
        java.util.Set $r5, $r11;
        java.util.HashMap $r6;
        java.lang.String $r7, $r8, $r9;
        org.jsoup.safety.Whitelist $r10;

        $r10 := @this: org.jsoup.safety.Whitelist;

        $r7 := @parameter0: java.lang.String;

        $r8 := @parameter1: java.lang.String;

        $r9 := @parameter2: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r7);

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r8);

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r9);

        $r4 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>($r7);

        $r5 = $r10.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $r11 = $r10.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r4);

     label1:
        $r3 = staticinvoke <org.jsoup.safety.Whitelist$AttributeKey: org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String)>($r8);

        $r2 = staticinvoke <org.jsoup.safety.Whitelist$AttributeValue: org.jsoup.safety.Whitelist$AttributeValue valueOf(java.lang.String)>($r9);

        $r1 = $r10.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;

        $z1 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $r12 = $r10.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;

        $r0 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r13 = (java.util.Map) $r0;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2);

        return $r10;

     label2:
        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r2);

        $r14 = $r10.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        return $r10;
    }

    public transient org.jsoup.safety.Whitelist addProtocols(java.lang.String, java.lang.String, java.lang.String[])
    {
        java.util.HashSet r0;
        java.util.HashMap r1;
        org.jsoup.safety.Whitelist$Protocol $r2;
        java.util.Set $r3;
        java.lang.Object $r4, $r15;
        boolean $z0, $z1;
        org.jsoup.safety.Whitelist$AttributeKey $r5;
        org.jsoup.safety.Whitelist$TagName $r6;
        java.util.Map $r7, $r8, $r13, $r14;
        int $i0, $i1;
        java.lang.String[] $r9;
        java.lang.String $r10, $r11, $r16;
        org.jsoup.safety.Whitelist $r12;

        $r12 := @this: org.jsoup.safety.Whitelist;

        $r10 := @parameter0: java.lang.String;

        $r11 := @parameter1: java.lang.String;

        $r9 := @parameter2: java.lang.String[];

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r10);

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r11);

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r9);

        $r6 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>($r10);

        $r5 = staticinvoke <org.jsoup.safety.Whitelist$AttributeKey: org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String)>($r11);

        $r7 = $r12.<org.jsoup.safety.Whitelist: java.util.Map protocols>;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        $r13 = $r12.<org.jsoup.safety.Whitelist: java.util.Map protocols>;

        $r4 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r14 = (java.util.Map) $r4;

     label1:
        $z1 = interfaceinvoke $r14.<java.util.Map: boolean containsKey(java.lang.Object)>($r5);

        if $z1 == 0 goto label5;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r3 = (java.util.Set) $r15;

     label2:
        $i1 = lengthof $r9;

        $i0 = 0;

     label3:
        if $i0 >= $i1 goto label6;

        $r16 = $r9[$i0];

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r16);

        $r2 = staticinvoke <org.jsoup.safety.Whitelist$Protocol: org.jsoup.safety.Whitelist$Protocol valueOf(java.lang.String)>($r16);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        r1 = new java.util.HashMap;

        $r14 = r1;

        specialinvoke r1.<java.util.HashMap: void <init>()>();

        $r8 = $r12.<org.jsoup.safety.Whitelist: java.util.Map protocols>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r1);

        goto label1;

     label5:
        r0 = new java.util.HashSet;

        $r3 = r0;

        specialinvoke r0.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r0);

        goto label2;

     label6:
        return $r12;
    }

    public transient org.jsoup.safety.Whitelist addTags(java.lang.String[])
    {
        org.jsoup.safety.Whitelist$TagName $r0;
        java.util.Set $r1;
        java.lang.String $r2;
        int $i0, $i1;
        java.lang.String[] $r3;
        org.jsoup.safety.Whitelist $r4;

        $r4 := @this: org.jsoup.safety.Whitelist;

        $r3 := @parameter0: java.lang.String[];

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object)>($r3);

        $i1 = lengthof $r3;

        $i0 = 0;

     label1:
        if $i0 >= $i1 goto label2;

        $r2 = $r3[$i0];

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>($r2);

        $r1 = $r4.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;

        $r0 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>($r2);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r0);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r4;
    }

    org.jsoup.nodes.Attributes getEnforcedAttributes(java.lang.String)
    {
        org.jsoup.safety.Whitelist$AttributeValue $r0;
        org.jsoup.safety.Whitelist$AttributeKey $r1;
        java.util.Map$Entry $r2;
        java.util.Iterator $r3;
        java.util.Set $r4;
        java.lang.Object $r5, $r14, $r15, $r17;
        boolean $z0, $z1;
        org.jsoup.safety.Whitelist$TagName $r6;
        java.util.Map $r7, $r12, $r13;
        org.jsoup.nodes.Attributes $r8;
        java.lang.String $r9, $r10, $r16;
        org.jsoup.safety.Whitelist $r11;

        $r11 := @this: org.jsoup.safety.Whitelist;

        $r9 := @parameter0: java.lang.String;

        $r8 = new org.jsoup.nodes.Attributes;

        specialinvoke $r8.<org.jsoup.nodes.Attributes: void <init>()>();

        $r6 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>($r9);

        $r7 = $r11.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r12 = $r11.<org.jsoup.safety.Whitelist: java.util.Map enforcedAttributes>;

        $r5 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r13 = (java.util.Map) $r5;

        $r4 = interfaceinvoke $r13.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r14 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.util.Map$Entry) $r14;

        $r15 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r1 = (org.jsoup.safety.Whitelist$AttributeKey) $r15;

        $r16 = virtualinvoke $r1.<org.jsoup.safety.Whitelist$AttributeKey: java.lang.String toString()>();

        $r17 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r0 = (org.jsoup.safety.Whitelist$AttributeValue) $r17;

        $r10 = virtualinvoke $r0.<org.jsoup.safety.Whitelist$AttributeValue: java.lang.String toString()>();

        virtualinvoke $r8.<org.jsoup.nodes.Attributes: void put(java.lang.String,java.lang.String)>($r16, $r10);

        goto label1;

     label2:
        return $r8;

     label3:
        return $r8;
    }

    boolean isSafeAttribute(java.lang.String, org.jsoup.nodes.Element, org.jsoup.nodes.Attribute)
    {
        java.util.Set $r0, $r16;
        java.lang.Object $r1, $r13, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Map $r2, $r10, $r11, $r12, $r14;
        org.jsoup.safety.Whitelist$AttributeKey $r3;
        org.jsoup.safety.Whitelist$TagName $r4;
        org.jsoup.nodes.Attribute $r5;
        org.jsoup.nodes.Element $r6;
        java.lang.String $r7, $r8;
        org.jsoup.safety.Whitelist $r9;

        $r9 := @this: org.jsoup.safety.Whitelist;

        $r7 := @parameter0: java.lang.String;

        $r6 := @parameter1: org.jsoup.nodes.Element;

        $r5 := @parameter2: org.jsoup.nodes.Attribute;

        $r4 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>($r7);

        $r8 = virtualinvoke $r5.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();

        $r3 = staticinvoke <org.jsoup.safety.Whitelist$AttributeKey: org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String)>($r8);

        $r2 = $r9.<org.jsoup.safety.Whitelist: java.util.Map attributes>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $r10 = $r9.<org.jsoup.safety.Whitelist: java.util.Map attributes>;

        $r1 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r0 = (java.util.Set) $r1;

        $z1 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        if $z1 == 0 goto label4;

        $r11 = $r9.<org.jsoup.safety.Whitelist: java.util.Map protocols>;

        $z2 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z2 == 0 goto label6;

        $r12 = $r9.<org.jsoup.safety.Whitelist: java.util.Map protocols>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r14 = (java.util.Map) $r13;

        $z3 = interfaceinvoke $r14.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z3 == 0 goto label1;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r16 = (java.util.Set) $r15;

        $z4 = specialinvoke $r9.<org.jsoup.safety.Whitelist: boolean testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set)>($r6, $r5, $r16);

        if $z4 == 0 goto label3;

     label1:
        $z5 = 1;

     label2:
        return $z5;

     label3:
        $z5 = 0;

        goto label2;

     label4:
        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(":all");

        if $z6 != 0 goto label5;

        $z7 = virtualinvoke $r9.<org.jsoup.safety.Whitelist: boolean isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute)>(":all", $r6, $r5);

        if $z7 != 0 goto label7;

     label5:
        return 0;

     label6:
        return 1;

     label7:
        return 1;
    }

    boolean isSafeTag(java.lang.String)
    {
        boolean $z0;
        org.jsoup.safety.Whitelist$TagName $r0;
        java.util.Set $r1;
        java.lang.String $r2;
        org.jsoup.safety.Whitelist $r3;

        $r3 := @this: org.jsoup.safety.Whitelist;

        $r2 := @parameter0: java.lang.String;

        $r1 = $r3.<org.jsoup.safety.Whitelist: java.util.Set tagNames>;

        $r0 = staticinvoke <org.jsoup.safety.Whitelist$TagName: org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String)>($r2);

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r0);

        return $z0;
    }

    public org.jsoup.safety.Whitelist preserveRelativeLinks(boolean)
    {
        boolean $z0;
        org.jsoup.safety.Whitelist $r0;

        $r0 := @this: org.jsoup.safety.Whitelist;

        $z0 := @parameter0: boolean;

        $r0.<org.jsoup.safety.Whitelist: boolean preserveRelativeLinks> = $z0;

        return $r0;
    }
}
