class org.simpleframework.xml.core.CompositeKey extends java.lang.Object implements org.simpleframework.xml.core.Converter
{
    private final org.simpleframework.xml.core.Context context;
    private final org.simpleframework.xml.core.Entry entry;
    private final org.simpleframework.xml.core.Traverser root;
    private final org.simpleframework.xml.stream.Style style;
    private final org.simpleframework.xml.strategy.Type type;

    public void <init>(org.simpleframework.xml.core.Context, org.simpleframework.xml.core.Entry, org.simpleframework.xml.strategy.Type) throws java.lang.Exception
    {
        org.simpleframework.xml.stream.Style $r0;
        org.simpleframework.xml.core.Traverser $r1;
        org.simpleframework.xml.strategy.Type $r2;
        org.simpleframework.xml.core.Entry $r3;
        org.simpleframework.xml.core.Context $r4;
        org.simpleframework.xml.core.CompositeKey $r5;

        $r5 := @this: org.simpleframework.xml.core.CompositeKey;

        $r4 := @parameter0: org.simpleframework.xml.core.Context;

        $r3 := @parameter1: org.simpleframework.xml.core.Entry;

        $r2 := @parameter2: org.simpleframework.xml.strategy.Type;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        $r1 = new org.simpleframework.xml.core.Traverser;

        specialinvoke $r1.<org.simpleframework.xml.core.Traverser: void <init>(org.simpleframework.xml.core.Context)>($r4);

        $r5.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Traverser root> = $r1;

        $r0 = interfaceinvoke $r4.<org.simpleframework.xml.core.Context: org.simpleframework.xml.stream.Style getStyle()>();

        $r5.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.stream.Style style> = $r0;

        $r5.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Context context> = $r4;

        $r5.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Entry entry> = $r3;

        $r5.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.strategy.Type type> = $r2;

        return;
    }

    private java.lang.Object read(org.simpleframework.xml.stream.InputNode, java.lang.String) throws java.lang.Exception
    {
        java.lang.Object $r0;
        org.simpleframework.xml.core.Traverser $r1;
        boolean $z0;
        java.lang.Class $r2;
        org.simpleframework.xml.strategy.Type $r3;
        org.simpleframework.xml.stream.Style $r4;
        java.lang.String $r5, $r8;
        org.simpleframework.xml.stream.InputNode $r6;
        org.simpleframework.xml.core.CompositeKey $r7;

        $r7 := @this: org.simpleframework.xml.core.CompositeKey;

        $r6 := @parameter0: org.simpleframework.xml.stream.InputNode;

        $r5 := @parameter1: java.lang.String;

        $r4 = $r7.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.stream.Style style>;

        $r8 = interfaceinvoke $r4.<org.simpleframework.xml.stream.Style: java.lang.String getElement(java.lang.String)>($r5);

        $r3 = $r7.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.strategy.Type type>;

        $r2 = interfaceinvoke $r3.<org.simpleframework.xml.strategy.Type: java.lang.Class getType()>();

        if $r8 == null goto label1;

        $r6 = interfaceinvoke $r6.<org.simpleframework.xml.stream.InputNode: org.simpleframework.xml.stream.InputNode getNext(java.lang.String)>($r8);

     label1:
        if $r6 != null goto label2;

        return null;

     label2:
        $z0 = interfaceinvoke $r6.<org.simpleframework.xml.stream.InputNode: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r1 = $r7.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Traverser root>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.Traverser: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Class)>($r6, $r2);

        return $r0;

     label3:
        return null;
    }

    private boolean validate(org.simpleframework.xml.stream.InputNode, java.lang.String) throws java.lang.Exception
    {
        org.simpleframework.xml.core.Traverser $r0;
        boolean $z0, $z1;
        java.lang.Class $r1;
        org.simpleframework.xml.strategy.Type $r2;
        org.simpleframework.xml.stream.Style $r3;
        java.lang.String $r4, $r7;
        org.simpleframework.xml.stream.InputNode $r5, $r8;
        org.simpleframework.xml.core.CompositeKey $r6;

        $r6 := @this: org.simpleframework.xml.core.CompositeKey;

        $r5 := @parameter0: org.simpleframework.xml.stream.InputNode;

        $r4 := @parameter1: java.lang.String;

        $r3 = $r6.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.stream.Style style>;

        $r7 = interfaceinvoke $r3.<org.simpleframework.xml.stream.Style: java.lang.String getElement(java.lang.String)>($r4);

        $r8 = interfaceinvoke $r5.<org.simpleframework.xml.stream.InputNode: org.simpleframework.xml.stream.InputNode getNext(java.lang.String)>($r7);

        $r2 = $r6.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.strategy.Type type>;

        $r1 = interfaceinvoke $r2.<org.simpleframework.xml.strategy.Type: java.lang.Class getType()>();

        if $r8 != null goto label1;

        return 1;

     label1:
        $z0 = interfaceinvoke $r8.<org.simpleframework.xml.stream.InputNode: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r0 = $r6.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Traverser root>;

        $z1 = virtualinvoke $r0.<org.simpleframework.xml.core.Traverser: boolean validate(org.simpleframework.xml.stream.InputNode,java.lang.Class)>($r8, $r1);

        return $z1;

     label2:
        return 1;
    }

    public java.lang.Object read(org.simpleframework.xml.stream.InputNode) throws java.lang.Exception
    {
        java.lang.Object $r0;
        java.lang.Object[] $r1;
        org.simpleframework.xml.core.AttributeException $r2;
        boolean $z0;
        org.simpleframework.xml.core.Context $r3;
        java.lang.Class $r4;
        org.simpleframework.xml.stream.Position $r5;
        org.simpleframework.xml.core.Entry $r6, $r12, $r13;
        org.simpleframework.xml.strategy.Type $r7;
        java.lang.String $r8, $r9;
        org.simpleframework.xml.stream.InputNode $r10;
        org.simpleframework.xml.core.CompositeKey $r11;

        $r11 := @this: org.simpleframework.xml.core.CompositeKey;

        $r10 := @parameter0: org.simpleframework.xml.stream.InputNode;

        $r5 = interfaceinvoke $r10.<org.simpleframework.xml.stream.InputNode: org.simpleframework.xml.stream.Position getPosition()>();

        $r7 = $r11.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.strategy.Type type>;

        $r4 = interfaceinvoke $r7.<org.simpleframework.xml.strategy.Type: java.lang.Class getType()>();

        $r6 = $r11.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Entry entry>;

        $r9 = virtualinvoke $r6.<org.simpleframework.xml.core.Entry: java.lang.String getKey()>();

        $r8 = $r9;

        if $r9 != null goto label1;

        $r3 = $r11.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Context context>;

        $r8 = interfaceinvoke $r3.<org.simpleframework.xml.core.Context: java.lang.String getName(java.lang.Class)>($r4);

     label1:
        $r12 = $r11.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Entry entry>;

        $z0 = virtualinvoke $r12.<org.simpleframework.xml.core.Entry: boolean isAttribute()>();

        if $z0 == 0 goto label2;

        $r2 = new org.simpleframework.xml.core.AttributeException;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = $r4;

        $r13 = $r11.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Entry entry>;

        $r1[1] = $r13;

        $r1[2] = $r5;

        specialinvoke $r2.<org.simpleframework.xml.core.AttributeException: void <init>(java.lang.String,java.lang.Object[])>("Can not have %s as an attribute for %s at %s", $r1);

        throw $r2;

     label2:
        $r0 = specialinvoke $r11.<org.simpleframework.xml.core.CompositeKey: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.String)>($r10, $r8);

        return $r0;
    }

    public java.lang.Object read(org.simpleframework.xml.stream.InputNode, java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object[] $r0;
        org.simpleframework.xml.core.PersistenceException $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.stream.Position $r3;
        org.simpleframework.xml.core.Entry $r4;
        org.simpleframework.xml.strategy.Type $r5;
        java.lang.Object $r6, $r9;
        org.simpleframework.xml.stream.InputNode $r7;
        org.simpleframework.xml.core.CompositeKey $r8;

        $r8 := @this: org.simpleframework.xml.core.CompositeKey;

        $r7 := @parameter0: org.simpleframework.xml.stream.InputNode;

        $r6 := @parameter1: java.lang.Object;

        $r3 = interfaceinvoke $r7.<org.simpleframework.xml.stream.InputNode: org.simpleframework.xml.stream.Position getPosition()>();

        $r5 = $r8.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.strategy.Type type>;

        $r2 = interfaceinvoke $r5.<org.simpleframework.xml.strategy.Type: java.lang.Class getType()>();

        if $r6 == null goto label1;

        $r1 = new org.simpleframework.xml.core.PersistenceException;

        $r0 = newarray (java.lang.Object)[3];

        $r0[0] = $r2;

        $r4 = $r8.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Entry entry>;

        $r0[1] = $r4;

        $r0[2] = $r3;

        specialinvoke $r1.<org.simpleframework.xml.core.PersistenceException: void <init>(java.lang.String,java.lang.Object[])>("Can not read key of %s for %s at %s", $r0);

        throw $r1;

     label1:
        $r9 = virtualinvoke $r8.<org.simpleframework.xml.core.CompositeKey: java.lang.Object read(org.simpleframework.xml.stream.InputNode)>($r7);

        return $r9;
    }

    public boolean validate(org.simpleframework.xml.stream.InputNode) throws java.lang.Exception
    {
        java.lang.Object[] $r0;
        org.simpleframework.xml.core.ElementException $r1;
        boolean $z0, $z1;
        org.simpleframework.xml.core.Context $r2;
        java.lang.Class $r3;
        org.simpleframework.xml.stream.Position $r4;
        org.simpleframework.xml.core.Entry $r5, $r11, $r12;
        org.simpleframework.xml.strategy.Type $r6;
        java.lang.String $r7, $r8;
        org.simpleframework.xml.stream.InputNode $r9;
        org.simpleframework.xml.core.CompositeKey $r10;

        $r10 := @this: org.simpleframework.xml.core.CompositeKey;

        $r9 := @parameter0: org.simpleframework.xml.stream.InputNode;

        $r4 = interfaceinvoke $r9.<org.simpleframework.xml.stream.InputNode: org.simpleframework.xml.stream.Position getPosition()>();

        $r6 = $r10.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.strategy.Type type>;

        $r3 = interfaceinvoke $r6.<org.simpleframework.xml.strategy.Type: java.lang.Class getType()>();

        $r5 = $r10.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Entry entry>;

        $r8 = virtualinvoke $r5.<org.simpleframework.xml.core.Entry: java.lang.String getKey()>();

        $r7 = $r8;

        if $r8 != null goto label1;

        $r2 = $r10.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Context context>;

        $r7 = interfaceinvoke $r2.<org.simpleframework.xml.core.Context: java.lang.String getName(java.lang.Class)>($r3);

     label1:
        $r11 = $r10.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Entry entry>;

        $z0 = virtualinvoke $r11.<org.simpleframework.xml.core.Entry: boolean isAttribute()>();

        if $z0 == 0 goto label2;

        $r1 = new org.simpleframework.xml.core.ElementException;

        $r0 = newarray (java.lang.Object)[3];

        $r0[0] = $r3;

        $r12 = $r10.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Entry entry>;

        $r0[1] = $r12;

        $r0[2] = $r4;

        specialinvoke $r1.<org.simpleframework.xml.core.ElementException: void <init>(java.lang.String,java.lang.Object[])>("Can not have %s as an attribute for %s at %s", $r0);

        throw $r1;

     label2:
        $z1 = specialinvoke $r10.<org.simpleframework.xml.core.CompositeKey: boolean validate(org.simpleframework.xml.stream.InputNode,java.lang.String)>($r9, $r7);

        return $z1;
    }

    public void write(org.simpleframework.xml.stream.OutputNode, java.lang.Object) throws java.lang.Exception
    {
        org.simpleframework.xml.core.Traverser $r0;
        org.simpleframework.xml.stream.Style $r1;
        org.simpleframework.xml.core.Context $r2;
        java.lang.Object[] $r3;
        org.simpleframework.xml.core.ElementException $r4;
        boolean $z0;
        java.lang.Class $r5;
        org.simpleframework.xml.core.Entry $r6, $r13, $r14;
        org.simpleframework.xml.strategy.Type $r7;
        java.lang.String $r8, $r9, $r15;
        java.lang.Object $r10;
        org.simpleframework.xml.stream.OutputNode $r11;
        org.simpleframework.xml.core.CompositeKey $r12;

        $r12 := @this: org.simpleframework.xml.core.CompositeKey;

        $r11 := @parameter0: org.simpleframework.xml.stream.OutputNode;

        $r10 := @parameter1: java.lang.Object;

        $r7 = $r12.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.strategy.Type type>;

        $r5 = interfaceinvoke $r7.<org.simpleframework.xml.strategy.Type: java.lang.Class getType()>();

        $r6 = $r12.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Entry entry>;

        $r9 = virtualinvoke $r6.<org.simpleframework.xml.core.Entry: java.lang.String getKey()>();

        $r8 = $r9;

        $r13 = $r12.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Entry entry>;

        $z0 = virtualinvoke $r13.<org.simpleframework.xml.core.Entry: boolean isAttribute()>();

        if $z0 == 0 goto label1;

        $r4 = new org.simpleframework.xml.core.ElementException;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = $r5;

        $r14 = $r12.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Entry entry>;

        $r3[1] = $r14;

        specialinvoke $r4.<org.simpleframework.xml.core.ElementException: void <init>(java.lang.String,java.lang.Object[])>("Can not have %s as an attribute for %s", $r3);

        throw $r4;

     label1:
        if $r9 != null goto label2;

        $r2 = $r12.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Context context>;

        $r8 = interfaceinvoke $r2.<org.simpleframework.xml.core.Context: java.lang.String getName(java.lang.Class)>($r5);

     label2:
        $r1 = $r12.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.stream.Style style>;

        $r15 = interfaceinvoke $r1.<org.simpleframework.xml.stream.Style: java.lang.String getElement(java.lang.String)>($r8);

        $r0 = $r12.<org.simpleframework.xml.core.CompositeKey: org.simpleframework.xml.core.Traverser root>;

        virtualinvoke $r0.<org.simpleframework.xml.core.Traverser: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object,java.lang.Class,java.lang.String)>($r11, $r10, $r5, $r15);

        return;
    }
}
