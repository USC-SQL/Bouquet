class org.simpleframework.xml.stream.Indenter$Cache extends java.lang.Object
{
    private int count;
    private java.lang.String[] list;
    final org.simpleframework.xml.stream.Indenter this$0;

    public void <init>(org.simpleframework.xml.stream.Indenter, int)
    {
        java.lang.String[] $r0;
        int $i0;
        org.simpleframework.xml.stream.Indenter $r1;
        org.simpleframework.xml.stream.Indenter$Cache $r2;

        $r2 := @this: org.simpleframework.xml.stream.Indenter$Cache;

        $r1 := @parameter0: org.simpleframework.xml.stream.Indenter;

        $i0 := @parameter1: int;

        $r2.<org.simpleframework.xml.stream.Indenter$Cache: org.simpleframework.xml.stream.Indenter this$0> = $r1;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r0 = newarray (java.lang.String)[$i0];

        $r2.<org.simpleframework.xml.stream.Indenter$Cache: java.lang.String[] list> = $r0;

        return;
    }

    private void resize(int)
    {
        java.lang.String $r0;
        java.lang.String[] $r1, $r2, $r4;
        int $i0, $i1, $i2;
        org.simpleframework.xml.stream.Indenter$Cache $r3;

        $r3 := @this: org.simpleframework.xml.stream.Indenter$Cache;

        $i0 := @parameter0: int;

        $r1 = newarray (java.lang.String)[$i0];

        $i2 = 0;

     label1:
        $r2 = $r3.<org.simpleframework.xml.stream.Indenter$Cache: java.lang.String[] list>;

        $i1 = lengthof $r2;

        if $i2 >= $i1 goto label2;

        $r4 = $r3.<org.simpleframework.xml.stream.Indenter$Cache: java.lang.String[] list>;

        $r0 = $r4[$i2];

        $r1[$i2] = $r0;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r3.<org.simpleframework.xml.stream.Indenter$Cache: java.lang.String[] list> = $r1;

        return;
    }

    public java.lang.String get(int)
    {
        java.lang.String $r0;
        java.lang.String[] $r1, $r3;
        int $i0, $i1;
        org.simpleframework.xml.stream.Indenter$Cache $r2;

        $r2 := @this: org.simpleframework.xml.stream.Indenter$Cache;

        $i0 := @parameter0: int;

        $r1 = $r2.<org.simpleframework.xml.stream.Indenter$Cache: java.lang.String[] list>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        $r3 = $r2.<org.simpleframework.xml.stream.Indenter$Cache: java.lang.String[] list>;

        $r0 = $r3[$i0];

        return $r0;

     label1:
        return null;
    }

    public void set(int, java.lang.String)
    {
        java.lang.String[] $r0, $r3;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3;
        org.simpleframework.xml.stream.Indenter$Cache $r2;

        $r2 := @this: org.simpleframework.xml.stream.Indenter$Cache;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r0 = $r2.<org.simpleframework.xml.stream.Indenter$Cache: java.lang.String[] list>;

        $i1 = lengthof $r0;

        if $i0 < $i1 goto label1;

        $i2 = $i0 * 2;

        specialinvoke $r2.<org.simpleframework.xml.stream.Indenter$Cache: void resize(int)>($i2);

     label1:
        $i3 = $r2.<org.simpleframework.xml.stream.Indenter$Cache: int count>;

        if $i0 <= $i3 goto label2;

        $r2.<org.simpleframework.xml.stream.Indenter$Cache: int count> = $i0;

     label2:
        $r3 = $r2.<org.simpleframework.xml.stream.Indenter$Cache: java.lang.String[] list>;

        $r3[$i0] = $r1;

        return;
    }

    public int size()
    {
        int i0;
        org.simpleframework.xml.stream.Indenter$Cache $r0;

        $r0 := @this: org.simpleframework.xml.stream.Indenter$Cache;

        i0 = $r0.<org.simpleframework.xml.stream.Indenter$Cache: int count>;

        return i0;
    }
}
