class org.simpleframework.xml.core.GroupExtractor$Registry extends java.util.LinkedHashMap implements java.lang.Iterable
{
    private final org.simpleframework.xml.core.LabelMap elements;

    public void <init>(org.simpleframework.xml.core.LabelMap)
    {
        org.simpleframework.xml.core.LabelMap $r0;
        org.simpleframework.xml.core.GroupExtractor$Registry $r1;

        $r1 := @this: org.simpleframework.xml.core.GroupExtractor$Registry;

        $r0 := @parameter0: org.simpleframework.xml.core.LabelMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        $r1.<org.simpleframework.xml.core.GroupExtractor$Registry: org.simpleframework.xml.core.LabelMap elements> = $r0;

        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r0;
        java.util.Collection $r1;
        org.simpleframework.xml.core.GroupExtractor$Registry $r2;

        $r2 := @this: org.simpleframework.xml.core.GroupExtractor$Registry;

        $r1 = virtualinvoke $r2.<org.simpleframework.xml.core.GroupExtractor$Registry: java.util.Collection values()>();

        $r0 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        return $r0;
    }

    public void register(java.lang.Class, org.simpleframework.xml.core.Label) throws java.lang.Exception
    {
        boolean $z0;
        org.simpleframework.xml.core.CacheLabel $r0;
        org.simpleframework.xml.core.Label $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.core.GroupExtractor$Registry $r3;

        $r3 := @this: org.simpleframework.xml.core.GroupExtractor$Registry;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: org.simpleframework.xml.core.Label;

        $r0 = new org.simpleframework.xml.core.CacheLabel;

        specialinvoke $r0.<org.simpleframework.xml.core.CacheLabel: void <init>(org.simpleframework.xml.core.Label)>($r1);

        $z0 = virtualinvoke $r3.<org.simpleframework.xml.core.GroupExtractor$Registry: boolean containsKey(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        virtualinvoke $r3.<org.simpleframework.xml.core.GroupExtractor$Registry: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r0);

        return;

     label1:
        return;
    }

    public void register(java.lang.String, org.simpleframework.xml.core.Label) throws java.lang.Exception
    {
        boolean $z0;
        org.simpleframework.xml.core.LabelMap $r0, $r5;
        org.simpleframework.xml.core.CacheLabel $r1;
        org.simpleframework.xml.core.Label $r2;
        java.lang.String $r3;
        org.simpleframework.xml.core.GroupExtractor$Registry $r4;

        $r4 := @this: org.simpleframework.xml.core.GroupExtractor$Registry;

        $r3 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.simpleframework.xml.core.Label;

        $r1 = new org.simpleframework.xml.core.CacheLabel;

        specialinvoke $r1.<org.simpleframework.xml.core.CacheLabel: void <init>(org.simpleframework.xml.core.Label)>($r2);

        $r0 = $r4.<org.simpleframework.xml.core.GroupExtractor$Registry: org.simpleframework.xml.core.LabelMap elements>;

        $z0 = virtualinvoke $r0.<org.simpleframework.xml.core.LabelMap: boolean containsKey(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r5 = $r4.<org.simpleframework.xml.core.GroupExtractor$Registry: org.simpleframework.xml.core.LabelMap elements>;

        virtualinvoke $r5.<org.simpleframework.xml.core.LabelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r1);

        return;

     label1:
        return;
    }

    public org.simpleframework.xml.core.Label resolve(java.lang.Class)
    {
        org.simpleframework.xml.core.Label $r0;
        java.lang.Object $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.core.GroupExtractor$Registry $r3;

        $r3 := @this: org.simpleframework.xml.core.GroupExtractor$Registry;

        $r2 := @parameter0: java.lang.Class;

     label1:
        if $r2 == null goto label3;

        $r1 = virtualinvoke $r3.<org.simpleframework.xml.core.GroupExtractor$Registry: java.lang.Object get(java.lang.Object)>($r2);

        $r0 = (org.simpleframework.xml.core.Label) $r1;

        if $r0 == null goto label2;

        return $r0;

     label2:
        $r2 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label3:
        return null;
    }
}
