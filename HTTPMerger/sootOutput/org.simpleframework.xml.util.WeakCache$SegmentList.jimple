class org.simpleframework.xml.util.WeakCache$SegmentList extends java.lang.Object
{
    private java.util.List list;
    private int size;
    final org.simpleframework.xml.util.WeakCache this$0;

    public void <init>(org.simpleframework.xml.util.WeakCache, int)
    {
        java.util.ArrayList $r0;
        int $i0;
        org.simpleframework.xml.util.WeakCache $r1;
        org.simpleframework.xml.util.WeakCache$SegmentList $r2;

        $r2 := @this: org.simpleframework.xml.util.WeakCache$SegmentList;

        $r1 := @parameter0: org.simpleframework.xml.util.WeakCache;

        $i0 := @parameter1: int;

        $r2.<org.simpleframework.xml.util.WeakCache$SegmentList: org.simpleframework.xml.util.WeakCache this$0> = $r1;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2.<org.simpleframework.xml.util.WeakCache$SegmentList: java.util.List list> = $r0;

        $r2.<org.simpleframework.xml.util.WeakCache$SegmentList: int size> = $i0;

        specialinvoke $r2.<org.simpleframework.xml.util.WeakCache$SegmentList: void create(int)>($i0);

        return;
    }

    private void create(int)
    {
        org.simpleframework.xml.util.WeakCache $r0;
        org.simpleframework.xml.util.WeakCache$Segment $r1;
        java.util.List $r2;
        int $i0;
        org.simpleframework.xml.util.WeakCache$SegmentList $r3;

        $r3 := @this: org.simpleframework.xml.util.WeakCache$SegmentList;

        $i0 := @parameter0: int;

     label1:
        if $i0 <= 0 goto label2;

        $r2 = $r3.<org.simpleframework.xml.util.WeakCache$SegmentList: java.util.List list>;

        $r1 = new org.simpleframework.xml.util.WeakCache$Segment;

        $r0 = $r3.<org.simpleframework.xml.util.WeakCache$SegmentList: org.simpleframework.xml.util.WeakCache this$0>;

        specialinvoke $r1.<org.simpleframework.xml.util.WeakCache$Segment: void <init>(org.simpleframework.xml.util.WeakCache,org.simpleframework.xml.util.WeakCache$1)>($r0, null);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }

    private int segment(java.lang.Object)
    {
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r0;
        org.simpleframework.xml.util.WeakCache$SegmentList $r1;

        $r1 := @this: org.simpleframework.xml.util.WeakCache$SegmentList;

        $r0 := @parameter0: java.lang.Object;

        $i1 = virtualinvoke $r0.<java.lang.Object: int hashCode()>();

        $i0 = $r1.<org.simpleframework.xml.util.WeakCache$SegmentList: int size>;

        $i2 = $i1 % $i0;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i2);

        return $i3;
    }

    public org.simpleframework.xml.util.WeakCache$Segment get(java.lang.Object)
    {
        org.simpleframework.xml.util.WeakCache$Segment $r0;
        java.util.List $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r4;
        org.simpleframework.xml.util.WeakCache$SegmentList $r3;

        $r3 := @this: org.simpleframework.xml.util.WeakCache$SegmentList;

        $r2 := @parameter0: java.lang.Object;

        $i1 = specialinvoke $r3.<org.simpleframework.xml.util.WeakCache$SegmentList: int segment(java.lang.Object)>($r2);

        $i0 = $r3.<org.simpleframework.xml.util.WeakCache$SegmentList: int size>;

        if $i1 >= $i0 goto label1;

        $r1 = $r3.<org.simpleframework.xml.util.WeakCache$SegmentList: java.util.List list>;

        $r4 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r0 = (org.simpleframework.xml.util.WeakCache$Segment) $r4;

        return $r0;

     label1:
        return null;
    }
}
