interface  org.simpleframework.xml.core.Context extends java.lang.Object
{

    public abstract java.lang.Object getAttribute(java.lang.Object);

    public abstract org.simpleframework.xml.core.Caller getCaller(java.lang.Class) throws java.lang.Exception;

    public abstract org.simpleframework.xml.core.Decorator getDecorator(java.lang.Class) throws java.lang.Exception;

    public abstract org.simpleframework.xml.core.Instance getInstance(java.lang.Class);

    public abstract org.simpleframework.xml.core.Instance getInstance(org.simpleframework.xml.strategy.Value);

    public abstract java.lang.String getName(java.lang.Class) throws java.lang.Exception;

    public abstract org.simpleframework.xml.strategy.Value getOverride(org.simpleframework.xml.strategy.Type, org.simpleframework.xml.stream.InputNode) throws java.lang.Exception;

    public abstract java.lang.String getProperty(java.lang.String);

    public abstract org.simpleframework.xml.core.Schema getSchema(java.lang.Class) throws java.lang.Exception;

    public abstract org.simpleframework.xml.core.Session getSession();

    public abstract org.simpleframework.xml.stream.Style getStyle();

    public abstract org.simpleframework.xml.core.Support getSupport();

    public abstract java.lang.Class getType(org.simpleframework.xml.strategy.Type, java.lang.Object);

    public abstract org.simpleframework.xml.Version getVersion(java.lang.Class) throws java.lang.Exception;

    public abstract boolean isFloat(java.lang.Class) throws java.lang.Exception;

    public abstract boolean isFloat(org.simpleframework.xml.strategy.Type) throws java.lang.Exception;

    public abstract boolean isPrimitive(java.lang.Class) throws java.lang.Exception;

    public abstract boolean isPrimitive(org.simpleframework.xml.strategy.Type) throws java.lang.Exception;

    public abstract boolean isStrict();

    public abstract boolean setOverride(org.simpleframework.xml.strategy.Type, java.lang.Object, org.simpleframework.xml.stream.OutputNode) throws java.lang.Exception;
}
