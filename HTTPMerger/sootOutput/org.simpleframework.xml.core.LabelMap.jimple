class org.simpleframework.xml.core.LabelMap extends java.util.LinkedHashMap implements java.lang.Iterable
{
    private final org.simpleframework.xml.core.Policy policy;

    public void <init>()
    {
        org.simpleframework.xml.core.LabelMap $r0;

        $r0 := @this: org.simpleframework.xml.core.LabelMap;

        specialinvoke $r0.<org.simpleframework.xml.core.LabelMap: void <init>(org.simpleframework.xml.core.Policy)>(null);

        return;
    }

    public void <init>(org.simpleframework.xml.core.Policy)
    {
        org.simpleframework.xml.core.Policy $r0;
        org.simpleframework.xml.core.LabelMap $r1;

        $r1 := @this: org.simpleframework.xml.core.LabelMap;

        $r0 := @parameter0: org.simpleframework.xml.core.Policy;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        $r1.<org.simpleframework.xml.core.LabelMap: org.simpleframework.xml.core.Policy policy> = $r0;

        return;
    }

    public java.util.Set getKeys() throws java.lang.Exception
    {
        java.lang.String $r0, $r1;
        org.simpleframework.xml.core.Label $r2;
        java.lang.Object $r3;
        boolean $z0;
        java.util.Iterator $r4;
        java.util.HashSet $r5;
        org.simpleframework.xml.core.LabelMap $r6;

        $r6 := @this: org.simpleframework.xml.core.LabelMap;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $r4 = virtualinvoke $r6.<org.simpleframework.xml.core.LabelMap: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (org.simpleframework.xml.core.Label) $r3;

        if $r2 == null goto label1;

        $r0 = interfaceinvoke $r2.<org.simpleframework.xml.core.Label: java.lang.String getPath()>();

        $r1 = interfaceinvoke $r2.<org.simpleframework.xml.core.Label: java.lang.String getName()>();

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r0);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r1);

        goto label1;

     label2:
        return $r5;
    }

    public org.simpleframework.xml.core.Label getLabel(java.lang.String)
    {
        org.simpleframework.xml.core.Label $r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        org.simpleframework.xml.core.LabelMap $r3;

        $r3 := @this: org.simpleframework.xml.core.LabelMap;

        $r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r3.<org.simpleframework.xml.core.LabelMap: java.lang.Object remove(java.lang.Object)>($r2);

        $r0 = (org.simpleframework.xml.core.Label) $r1;

        return $r0;
    }

    public org.simpleframework.xml.core.LabelMap getLabels() throws java.lang.Exception
    {
        java.lang.String $r0;
        org.simpleframework.xml.core.Label $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.util.Iterator $r3;
        org.simpleframework.xml.core.Policy $r4;
        org.simpleframework.xml.core.LabelMap $r5, $r6;

        $r5 := @this: org.simpleframework.xml.core.LabelMap;

        $r6 = new org.simpleframework.xml.core.LabelMap;

        $r4 = $r5.<org.simpleframework.xml.core.LabelMap: org.simpleframework.xml.core.Policy policy>;

        specialinvoke $r6.<org.simpleframework.xml.core.LabelMap: void <init>(org.simpleframework.xml.core.Policy)>($r4);

        $r3 = virtualinvoke $r5.<org.simpleframework.xml.core.LabelMap: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (org.simpleframework.xml.core.Label) $r2;

        if $r1 == null goto label1;

        $r0 = interfaceinvoke $r1.<org.simpleframework.xml.core.Label: java.lang.String getPath()>();

        virtualinvoke $r6.<org.simpleframework.xml.core.LabelMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r1);

        goto label1;

     label2:
        return $r6;
    }

    public java.util.Set getPaths() throws java.lang.Exception
    {
        java.lang.String $r0;
        org.simpleframework.xml.core.Label $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.util.Iterator $r3;
        java.util.HashSet $r4;
        org.simpleframework.xml.core.LabelMap $r5;

        $r5 := @this: org.simpleframework.xml.core.LabelMap;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        $r3 = virtualinvoke $r5.<org.simpleframework.xml.core.LabelMap: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r1 = (org.simpleframework.xml.core.Label) $r2;

        if $r1 == null goto label1;

        $r0 = interfaceinvoke $r1.<org.simpleframework.xml.core.Label: java.lang.String getPath()>();

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r0);

        goto label1;

     label2:
        return $r4;
    }

    public boolean isStrict(org.simpleframework.xml.core.Context)
    {
        boolean $z0, $z1, $z2;
        org.simpleframework.xml.core.Policy $r0, $r3;
        org.simpleframework.xml.core.Context $r1;
        org.simpleframework.xml.core.LabelMap $r2;

        $r2 := @this: org.simpleframework.xml.core.LabelMap;

        $r1 := @parameter0: org.simpleframework.xml.core.Context;

        $r0 = $r2.<org.simpleframework.xml.core.LabelMap: org.simpleframework.xml.core.Policy policy>;

        if $r0 != null goto label1;

        $z0 = interfaceinvoke $r1.<org.simpleframework.xml.core.Context: boolean isStrict()>();

        return $z0;

     label1:
        $z1 = interfaceinvoke $r1.<org.simpleframework.xml.core.Context: boolean isStrict()>();

        if $z1 == 0 goto label2;

        $r3 = $r2.<org.simpleframework.xml.core.LabelMap: org.simpleframework.xml.core.Policy policy>;

        $z2 = interfaceinvoke $r3.<org.simpleframework.xml.core.Policy: boolean isStrict()>();

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r0;
        java.util.Collection $r1;
        org.simpleframework.xml.core.LabelMap $r2;

        $r2 := @this: org.simpleframework.xml.core.LabelMap;

        $r1 = virtualinvoke $r2.<org.simpleframework.xml.core.LabelMap: java.util.Collection values()>();

        $r0 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        return $r0;
    }
}
