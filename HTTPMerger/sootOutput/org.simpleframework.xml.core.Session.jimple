final class org.simpleframework.xml.core.Session extends java.lang.Object implements java.util.Map
{
    private final java.util.Map map;
    private final boolean strict;

    public void <init>()
    {
        org.simpleframework.xml.core.Session $r0;

        $r0 := @this: org.simpleframework.xml.core.Session;

        specialinvoke $r0.<org.simpleframework.xml.core.Session: void <init>(boolean)>(1);

        return;
    }

    public void <init>(boolean)
    {
        java.util.HashMap $r0;
        boolean $z0;
        org.simpleframework.xml.core.Session $r1;

        $r1 := @this: org.simpleframework.xml.core.Session;

        $z0 := @parameter0: boolean;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1.<org.simpleframework.xml.core.Session: java.util.Map map> = $r0;

        $r1.<org.simpleframework.xml.core.Session: boolean strict> = $z0;

        return;
    }

    public void clear()
    {
        java.util.Map $r0;
        org.simpleframework.xml.core.Session $r1;

        $r1 := @this: org.simpleframework.xml.core.Session;

        $r0 = $r1.<org.simpleframework.xml.core.Session: java.util.Map map>;

        interfaceinvoke $r0.<java.util.Map: void clear()>();

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        boolean $z0;
        java.util.Map $r0;
        java.lang.Object $r1;
        org.simpleframework.xml.core.Session $r2;

        $r2 := @this: org.simpleframework.xml.core.Session;

        $r1 := @parameter0: java.lang.Object;

        $r0 = $r2.<org.simpleframework.xml.core.Session: java.util.Map map>;

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        boolean $z0;
        java.util.Map $r0;
        java.lang.Object $r1;
        org.simpleframework.xml.core.Session $r2;

        $r2 := @this: org.simpleframework.xml.core.Session;

        $r1 := @parameter0: java.lang.Object;

        $r0 = $r2.<org.simpleframework.xml.core.Session: java.util.Map map>;

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsValue(java.lang.Object)>($r1);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r0;
        java.util.Map $r1;
        org.simpleframework.xml.core.Session $r2;

        $r2 := @this: org.simpleframework.xml.core.Session;

        $r1 = $r2.<org.simpleframework.xml.core.Session: java.util.Map map>;

        $r0 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        return $r0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.util.Map $r0;
        java.lang.Object $r1, $r3;
        org.simpleframework.xml.core.Session $r2;

        $r2 := @this: org.simpleframework.xml.core.Session;

        $r1 := @parameter0: java.lang.Object;

        $r0 = $r2.<org.simpleframework.xml.core.Session: java.util.Map map>;

        $r3 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        return $r3;
    }

    public java.util.Map getMap()
    {
        java.util.Map r0;
        org.simpleframework.xml.core.Session $r1;

        $r1 := @this: org.simpleframework.xml.core.Session;

        r0 = $r1.<org.simpleframework.xml.core.Session: java.util.Map map>;

        return r0;
    }

    public boolean isEmpty()
    {
        boolean $z0;
        java.util.Map $r0;
        org.simpleframework.xml.core.Session $r1;

        $r1 := @this: org.simpleframework.xml.core.Session;

        $r0 = $r1.<org.simpleframework.xml.core.Session: java.util.Map map>;

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public boolean isStrict()
    {
        boolean z0;
        org.simpleframework.xml.core.Session $r0;

        $r0 := @this: org.simpleframework.xml.core.Session;

        z0 = $r0.<org.simpleframework.xml.core.Session: boolean strict>;

        return z0;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r0;
        java.util.Map $r1;
        org.simpleframework.xml.core.Session $r2;

        $r2 := @this: org.simpleframework.xml.core.Session;

        $r1 = $r2.<org.simpleframework.xml.core.Session: java.util.Map map>;

        $r0 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r0;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.util.Map $r0;
        java.lang.Object $r1, $r2, $r4;
        org.simpleframework.xml.core.Session $r3;

        $r3 := @this: org.simpleframework.xml.core.Session;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r0 = $r3.<org.simpleframework.xml.core.Session: java.util.Map map>;

        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return $r4;
    }

    public void putAll(java.util.Map)
    {
        java.util.Map $r0, $r1;
        org.simpleframework.xml.core.Session $r2;

        $r2 := @this: org.simpleframework.xml.core.Session;

        $r0 := @parameter0: java.util.Map;

        $r1 = $r2.<org.simpleframework.xml.core.Session: java.util.Map map>;

        interfaceinvoke $r1.<java.util.Map: void putAll(java.util.Map)>($r0);

        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        java.util.Map $r0;
        java.lang.Object $r1, $r3;
        org.simpleframework.xml.core.Session $r2;

        $r2 := @this: org.simpleframework.xml.core.Session;

        $r1 := @parameter0: java.lang.Object;

        $r0 = $r2.<org.simpleframework.xml.core.Session: java.util.Map map>;

        $r3 = interfaceinvoke $r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        return $r3;
    }

    public int size()
    {
        int $i0;
        java.util.Map $r0;
        org.simpleframework.xml.core.Session $r1;

        $r1 := @this: org.simpleframework.xml.core.Session;

        $r0 = $r1.<org.simpleframework.xml.core.Session: java.util.Map map>;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        return $i0;
    }

    public java.util.Collection values()
    {
        java.util.Collection $r0;
        java.util.Map $r1;
        org.simpleframework.xml.core.Session $r2;

        $r2 := @this: org.simpleframework.xml.core.Session;

        $r1 = $r2.<org.simpleframework.xml.core.Session: java.util.Map map>;

        $r0 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r0;
    }
}
