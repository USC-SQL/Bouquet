public class org.jsoup.select.NodeTraversor extends java.lang.Object
{
    private org.jsoup.select.NodeVisitor visitor;

    public void <init>(org.jsoup.select.NodeVisitor)
    {
        org.jsoup.select.NodeVisitor $r0;
        org.jsoup.select.NodeTraversor $r1;

        $r1 := @this: org.jsoup.select.NodeTraversor;

        $r0 := @parameter0: org.jsoup.select.NodeVisitor;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r1.<org.jsoup.select.NodeTraversor: org.jsoup.select.NodeVisitor visitor> = $r0;

        return;
    }

    public void traverse(org.jsoup.nodes.Node)
    {
        java.util.List $r0;
        org.jsoup.select.NodeVisitor $r1, $r6, $r7;
        int $i0, $i1;
        org.jsoup.nodes.Node $r2, $r3, $r4;
        org.jsoup.select.NodeTraversor $r5;

        $r5 := @this: org.jsoup.select.NodeTraversor;

        $r2 := @parameter0: org.jsoup.nodes.Node;

        $r3 = $r2;

        $i0 = 0;

     label1:
        if $r3 == null goto label5;

        $r1 = $r5.<org.jsoup.select.NodeTraversor: org.jsoup.select.NodeVisitor visitor>;

        interfaceinvoke $r1.<org.jsoup.select.NodeVisitor: void head(org.jsoup.nodes.Node,int)>($r3, $i0);

        $r0 = virtualinvoke $r3.<org.jsoup.nodes.Node: java.util.List childNodes()>();

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 <= 0 goto label2;

        $r3 = virtualinvoke $r3.<org.jsoup.nodes.Node: org.jsoup.nodes.Node childNode(int)>(0);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke $r3.<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>();

        if $r4 != null goto label3;

        if $i0 <= 0 goto label3;

        $r6 = $r5.<org.jsoup.select.NodeTraversor: org.jsoup.select.NodeVisitor visitor>;

        interfaceinvoke $r6.<org.jsoup.select.NodeVisitor: void tail(org.jsoup.nodes.Node,int)>($r3, $i0);

        $r3 = virtualinvoke $r3.<org.jsoup.nodes.Node: org.jsoup.nodes.Node parent()>();

        $i0 = $i0 + -1;

        goto label2;

     label3:
        $r7 = $r5.<org.jsoup.select.NodeTraversor: org.jsoup.select.NodeVisitor visitor>;

        interfaceinvoke $r7.<org.jsoup.select.NodeVisitor: void tail(org.jsoup.nodes.Node,int)>($r3, $i0);

        if $r3 != $r2 goto label4;

        return;

     label4:
        $r3 = virtualinvoke $r3.<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>();

        goto label1;

     label5:
        return;
    }
}
