public class org.jsoup.parser.XmlTreeBuilder extends org.jsoup.parser.TreeBuilder
{

    public void <init>()
    {
        org.jsoup.parser.XmlTreeBuilder $r0;

        $r0 := @this: org.jsoup.parser.XmlTreeBuilder;

        specialinvoke $r0.<org.jsoup.parser.TreeBuilder: void <init>()>();

        return;
    }

    private void insertNode(org.jsoup.nodes.Node)
    {
        org.jsoup.nodes.Element $r0;
        org.jsoup.nodes.Node $r1;
        org.jsoup.parser.XmlTreeBuilder $r2;

        $r2 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r1 := @parameter0: org.jsoup.nodes.Node;

        $r0 = virtualinvoke $r2.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Element currentElement()>();

        virtualinvoke $r0.<org.jsoup.nodes.Element: org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node)>($r1);

        return;
    }

    private void popStackToClose(org.jsoup.parser.Token$EndTag)
    {
        java.lang.Object $r0, $r11;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r1, $r10;
        java.lang.String $r2, $r3;
        org.jsoup.helper.DescendableLinkedList $r4, $r9;
        org.jsoup.nodes.Element $r5, $r6, $r12;
        org.jsoup.parser.Token$EndTag $r7;
        org.jsoup.parser.XmlTreeBuilder $r8;

        $r8 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r7 := @parameter0: org.jsoup.parser.Token$EndTag;

        $r2 = virtualinvoke $r7.<org.jsoup.parser.Token$EndTag: java.lang.String name()>();

        $r5 = null;

        $r4 = $r8.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;

        $r1 = virtualinvoke $r4.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r0 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.jsoup.nodes.Element) $r0;

        $r3 = virtualinvoke $r6.<org.jsoup.nodes.Element: java.lang.String nodeName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label1;

        $r5 = $r6;

     label2:
        if $r5 != null goto label3;

        return;

     label3:
        $r9 = $r8.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;

        $r10 = virtualinvoke $r9.<org.jsoup.helper.DescendableLinkedList: java.util.Iterator descendingIterator()>();

     label4:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (org.jsoup.nodes.Element) $r11;

        if $r12 != $r5 goto label5;

        interfaceinvoke $r10.<java.util.Iterator: void remove()>();

        return;

     label5:
        interfaceinvoke $r10.<java.util.Iterator: void remove()>();

        goto label4;

     label6:
        return;
    }

    protected void initialiseParse(java.lang.String, java.lang.String, org.jsoup.parser.ParseErrorList)
    {
        org.jsoup.nodes.Document $r0;
        org.jsoup.helper.DescendableLinkedList $r1;
        org.jsoup.parser.ParseErrorList $r2;
        java.lang.String $r3, $r4;
        org.jsoup.parser.XmlTreeBuilder $r5;

        $r5 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r3 := @parameter0: java.lang.String;

        $r4 := @parameter1: java.lang.String;

        $r2 := @parameter2: org.jsoup.parser.ParseErrorList;

        specialinvoke $r5.<org.jsoup.parser.TreeBuilder: void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList)>($r3, $r4, $r2);

        $r1 = $r5.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;

        $r0 = $r5.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Document doc>;

        virtualinvoke $r1.<org.jsoup.helper.DescendableLinkedList: boolean add(java.lang.Object)>($r0);

        return;
    }

    org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)
    {
        org.jsoup.helper.DescendableLinkedList $r0;
        org.jsoup.parser.Tokeniser $r1;
        boolean $z0, $z1;
        org.jsoup.parser.Tag $r2;
        java.lang.String $r3, $r8;
        org.jsoup.nodes.Attributes $r4;
        org.jsoup.nodes.Element $r5;
        org.jsoup.parser.Token$StartTag $r6;
        org.jsoup.parser.XmlTreeBuilder $r7;

        $r7 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r6 := @parameter0: org.jsoup.parser.Token$StartTag;

        $r3 = virtualinvoke $r6.<org.jsoup.parser.Token$StartTag: java.lang.String name()>();

        $r2 = staticinvoke <org.jsoup.parser.Tag: org.jsoup.parser.Tag valueOf(java.lang.String)>($r3);

        $r5 = new org.jsoup.nodes.Element;

        $r8 = $r7.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;

        $r4 = $r6.<org.jsoup.parser.Token$StartTag: org.jsoup.nodes.Attributes attributes>;

        specialinvoke $r5.<org.jsoup.nodes.Element: void <init>(org.jsoup.parser.Tag,java.lang.String,org.jsoup.nodes.Attributes)>($r2, $r8, $r4);

        specialinvoke $r7.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>($r5);

        $z0 = virtualinvoke $r6.<org.jsoup.parser.Token$StartTag: boolean isSelfClosing()>();

        if $z0 == 0 goto label1;

        $r1 = $r7.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.parser.Tokeniser tokeniser>;

        virtualinvoke $r1.<org.jsoup.parser.Tokeniser: void acknowledgeSelfClosingFlag()>();

        $z1 = virtualinvoke $r2.<org.jsoup.parser.Tag: boolean isKnownTag()>();

        if $z1 != 0 goto label2;

        virtualinvoke $r2.<org.jsoup.parser.Tag: org.jsoup.parser.Tag setSelfClosing()>();

        return $r5;

     label1:
        $r0 = $r7.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.helper.DescendableLinkedList stack>;

        virtualinvoke $r0.<org.jsoup.helper.DescendableLinkedList: boolean add(java.lang.Object)>($r5);

        return $r5;

     label2:
        return $r5;
    }

    void insert(org.jsoup.parser.Token$Character)
    {
        java.lang.String $r0, $r1;
        org.jsoup.nodes.TextNode $r2;
        org.jsoup.parser.Token$Character $r3;
        org.jsoup.parser.XmlTreeBuilder $r4;

        $r4 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r3 := @parameter0: org.jsoup.parser.Token$Character;

        $r2 = new org.jsoup.nodes.TextNode;

        $r1 = virtualinvoke $r3.<org.jsoup.parser.Token$Character: java.lang.String getData()>();

        $r0 = $r4.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;

        specialinvoke $r2.<org.jsoup.nodes.TextNode: void <init>(java.lang.String,java.lang.String)>($r1, $r0);

        specialinvoke $r4.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>($r2);

        return;
    }

    void insert(org.jsoup.parser.Token$Comment)
    {
        java.lang.String $r0, $r1;
        org.jsoup.nodes.Comment $r2;
        org.jsoup.parser.Token$Comment $r3;
        org.jsoup.parser.XmlTreeBuilder $r4;

        $r4 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r3 := @parameter0: org.jsoup.parser.Token$Comment;

        $r2 = new org.jsoup.nodes.Comment;

        $r1 = virtualinvoke $r3.<org.jsoup.parser.Token$Comment: java.lang.String getData()>();

        $r0 = $r4.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;

        specialinvoke $r2.<org.jsoup.nodes.Comment: void <init>(java.lang.String,java.lang.String)>($r1, $r0);

        specialinvoke $r4.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>($r2);

        return;
    }

    void insert(org.jsoup.parser.Token$Doctype)
    {
        java.lang.String $r0, $r1, $r2, $r3;
        org.jsoup.nodes.DocumentType $r4;
        org.jsoup.parser.Token$Doctype $r5;
        org.jsoup.parser.XmlTreeBuilder $r6;

        $r6 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r5 := @parameter0: org.jsoup.parser.Token$Doctype;

        $r4 = new org.jsoup.nodes.DocumentType;

        $r1 = virtualinvoke $r5.<org.jsoup.parser.Token$Doctype: java.lang.String getName()>();

        $r2 = virtualinvoke $r5.<org.jsoup.parser.Token$Doctype: java.lang.String getPublicIdentifier()>();

        $r3 = virtualinvoke $r5.<org.jsoup.parser.Token$Doctype: java.lang.String getSystemIdentifier()>();

        $r0 = $r6.<org.jsoup.parser.XmlTreeBuilder: java.lang.String baseUri>;

        specialinvoke $r4.<org.jsoup.nodes.DocumentType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r0);

        specialinvoke $r6.<org.jsoup.parser.XmlTreeBuilder: void insertNode(org.jsoup.nodes.Node)>($r4);

        return;
    }

    protected boolean process(org.jsoup.parser.Token)
    {
        org.jsoup.parser.Token$Doctype $r0;
        org.jsoup.parser.Token$Character $r1;
        org.jsoup.parser.Token$Comment $r2;
        org.jsoup.parser.Token$EndTag $r3;
        org.jsoup.parser.Token$StartTag $r4;
        java.lang.String $r5;
        java.lang.StringBuilder $r6, $r11, $r13;
        int $i0, $i1;
        org.jsoup.parser.Token$TokenType $r7, $r12;
        int[] $r8;
        org.jsoup.parser.Token $r9;
        org.jsoup.parser.XmlTreeBuilder $r10;

        $r10 := @this: org.jsoup.parser.XmlTreeBuilder;

        $r9 := @parameter0: org.jsoup.parser.Token;

        $r8 = <org.jsoup.parser.XmlTreeBuilder$1: int[] $SwitchMap$org$jsoup$parser$Token$TokenType>;

        $r7 = $r9.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $i0 = virtualinvoke $r7.<org.jsoup.parser.Token$TokenType: int ordinal()>();

        $i1 = $r8[$i0];

        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected token type: ");

        $r12 = $r9.<org.jsoup.parser.Token: org.jsoup.parser.Token$TokenType type>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.jsoup.helper.Validate: void fail(java.lang.String)>($r5);

     label2:
        return 1;

     label3:
        $r4 = virtualinvoke $r9.<org.jsoup.parser.Token: org.jsoup.parser.Token$StartTag asStartTag()>();

        virtualinvoke $r10.<org.jsoup.parser.XmlTreeBuilder: org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag)>($r4);

        goto label2;

     label4:
        $r3 = virtualinvoke $r9.<org.jsoup.parser.Token: org.jsoup.parser.Token$EndTag asEndTag()>();

        specialinvoke $r10.<org.jsoup.parser.XmlTreeBuilder: void popStackToClose(org.jsoup.parser.Token$EndTag)>($r3);

        goto label2;

     label5:
        $r2 = virtualinvoke $r9.<org.jsoup.parser.Token: org.jsoup.parser.Token$Comment asComment()>();

        virtualinvoke $r10.<org.jsoup.parser.XmlTreeBuilder: void insert(org.jsoup.parser.Token$Comment)>($r2);

        goto label2;

     label6:
        $r1 = virtualinvoke $r9.<org.jsoup.parser.Token: org.jsoup.parser.Token$Character asCharacter()>();

        virtualinvoke $r10.<org.jsoup.parser.XmlTreeBuilder: void insert(org.jsoup.parser.Token$Character)>($r1);

        goto label2;

     label7:
        $r0 = virtualinvoke $r9.<org.jsoup.parser.Token: org.jsoup.parser.Token$Doctype asDoctype()>();

        virtualinvoke $r10.<org.jsoup.parser.XmlTreeBuilder: void insert(org.jsoup.parser.Token$Doctype)>($r0);

        goto label2;
    }
}
