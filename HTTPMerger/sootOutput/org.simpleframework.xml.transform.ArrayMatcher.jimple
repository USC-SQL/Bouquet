class org.simpleframework.xml.transform.ArrayMatcher extends java.lang.Object implements org.simpleframework.xml.transform.Matcher
{
    private final org.simpleframework.xml.transform.Matcher primary;

    public void <init>(org.simpleframework.xml.transform.Matcher)
    {
        org.simpleframework.xml.transform.Matcher $r0;
        org.simpleframework.xml.transform.ArrayMatcher $r1;

        $r1 := @this: org.simpleframework.xml.transform.ArrayMatcher;

        $r0 := @parameter0: org.simpleframework.xml.transform.Matcher;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r1.<org.simpleframework.xml.transform.ArrayMatcher: org.simpleframework.xml.transform.Matcher primary> = $r0;

        return;
    }

    private org.simpleframework.xml.transform.Transform matchArray(java.lang.Class) throws java.lang.Exception
    {
        org.simpleframework.xml.transform.ArrayTransform $r0;
        org.simpleframework.xml.transform.Transform $r1;
        org.simpleframework.xml.transform.Matcher $r2;
        java.lang.Class $r3;
        org.simpleframework.xml.transform.ArrayMatcher $r4;

        $r4 := @this: org.simpleframework.xml.transform.ArrayMatcher;

        $r3 := @parameter0: java.lang.Class;

        $r2 = $r4.<org.simpleframework.xml.transform.ArrayMatcher: org.simpleframework.xml.transform.Matcher primary>;

        $r1 = interfaceinvoke $r2.<org.simpleframework.xml.transform.Matcher: org.simpleframework.xml.transform.Transform match(java.lang.Class)>($r3);

        if $r1 != null goto label1;

        return null;

     label1:
        $r0 = new org.simpleframework.xml.transform.ArrayTransform;

        specialinvoke $r0.<org.simpleframework.xml.transform.ArrayTransform: void <init>(org.simpleframework.xml.transform.Transform,java.lang.Class)>($r1, $r3);

        return $r0;
    }

    public org.simpleframework.xml.transform.Transform match(java.lang.Class) throws java.lang.Exception
    {
        org.simpleframework.xml.transform.StringArrayTransform r0;
        org.simpleframework.xml.transform.CharacterArrayTransform r1, r7;
        org.simpleframework.xml.transform.Transform $r2;
        java.lang.Class $r3, $r4, $r6;
        org.simpleframework.xml.transform.ArrayMatcher $r5;

        $r5 := @this: org.simpleframework.xml.transform.ArrayMatcher;

        $r3 := @parameter0: java.lang.Class;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

        $r6 = <java.lang.Character: java.lang.Class TYPE>;

        if $r4 != $r6 goto label1;

        r1 = new org.simpleframework.xml.transform.CharacterArrayTransform;

        specialinvoke r1.<org.simpleframework.xml.transform.CharacterArrayTransform: void <init>(java.lang.Class)>($r4);

        return r1;

     label1:
        if $r4 != class "java/lang/Character" goto label2;

        r7 = new org.simpleframework.xml.transform.CharacterArrayTransform;

        specialinvoke r7.<org.simpleframework.xml.transform.CharacterArrayTransform: void <init>(java.lang.Class)>($r4);

        return r7;

     label2:
        if $r4 != class "java/lang/String" goto label3;

        r0 = new org.simpleframework.xml.transform.StringArrayTransform;

        specialinvoke r0.<org.simpleframework.xml.transform.StringArrayTransform: void <init>()>();

        return r0;

     label3:
        $r2 = specialinvoke $r5.<org.simpleframework.xml.transform.ArrayMatcher: org.simpleframework.xml.transform.Transform matchArray(java.lang.Class)>($r4);

        return $r2;
    }
}
