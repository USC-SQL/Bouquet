public class org.simpleframework.xml.core.Persister extends java.lang.Object implements org.simpleframework.xml.Serializer
{
    private final org.simpleframework.xml.stream.Format format;
    private final org.simpleframework.xml.core.SessionManager manager;
    private final org.simpleframework.xml.strategy.Strategy strategy;
    private final org.simpleframework.xml.core.Support support;

    public void <init>()
    {
        java.util.HashMap $r0;
        org.simpleframework.xml.core.Persister $r1;

        $r1 := @this: org.simpleframework.xml.core.Persister;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        specialinvoke $r1.<org.simpleframework.xml.core.Persister: void <init>(java.util.Map)>($r0);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.simpleframework.xml.filter.PlatformFilter $r0;
        java.util.Map $r1;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: java.util.Map;

        $r0 = new org.simpleframework.xml.filter.PlatformFilter;

        specialinvoke $r0.<org.simpleframework.xml.filter.PlatformFilter: void <init>(java.util.Map)>($r1);

        specialinvoke $r2.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.filter.Filter)>($r0);

        return;
    }

    public void <init>(java.util.Map, org.simpleframework.xml.stream.Format)
    {
        org.simpleframework.xml.filter.PlatformFilter $r0;
        org.simpleframework.xml.stream.Format $r1;
        java.util.Map $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: java.util.Map;

        $r1 := @parameter1: org.simpleframework.xml.stream.Format;

        $r0 = new org.simpleframework.xml.filter.PlatformFilter;

        specialinvoke $r0.<org.simpleframework.xml.filter.PlatformFilter: void <init>(java.util.Map)>($r2);

        specialinvoke $r3.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.filter.Filter)>($r0);

        return;
    }

    public void <init>(org.simpleframework.xml.filter.Filter)
    {
        org.simpleframework.xml.strategy.TreeStrategy $r0;
        org.simpleframework.xml.filter.Filter $r1;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: org.simpleframework.xml.filter.Filter;

        $r0 = new org.simpleframework.xml.strategy.TreeStrategy;

        specialinvoke $r0.<org.simpleframework.xml.strategy.TreeStrategy: void <init>()>();

        specialinvoke $r2.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter)>($r0, $r1);

        return;
    }

    public void <init>(org.simpleframework.xml.filter.Filter, org.simpleframework.xml.stream.Format)
    {
        org.simpleframework.xml.strategy.TreeStrategy $r0;
        org.simpleframework.xml.stream.Format $r1;
        org.simpleframework.xml.filter.Filter $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: org.simpleframework.xml.filter.Filter;

        $r1 := @parameter1: org.simpleframework.xml.stream.Format;

        $r0 = new org.simpleframework.xml.strategy.TreeStrategy;

        specialinvoke $r0.<org.simpleframework.xml.strategy.TreeStrategy: void <init>()>();

        specialinvoke $r3.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter,org.simpleframework.xml.stream.Format)>($r0, $r2, $r1);

        return;
    }

    public void <init>(org.simpleframework.xml.filter.Filter, org.simpleframework.xml.transform.Matcher)
    {
        org.simpleframework.xml.strategy.TreeStrategy $r0;
        org.simpleframework.xml.transform.Matcher $r1;
        org.simpleframework.xml.filter.Filter $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: org.simpleframework.xml.filter.Filter;

        $r1 := @parameter1: org.simpleframework.xml.transform.Matcher;

        $r0 = new org.simpleframework.xml.strategy.TreeStrategy;

        specialinvoke $r0.<org.simpleframework.xml.strategy.TreeStrategy: void <init>()>();

        specialinvoke $r3.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter,org.simpleframework.xml.transform.Matcher)>($r0, $r2, $r1);

        return;
    }

    public void <init>(org.simpleframework.xml.filter.Filter, org.simpleframework.xml.transform.Matcher, org.simpleframework.xml.stream.Format)
    {
        org.simpleframework.xml.strategy.TreeStrategy $r0;
        org.simpleframework.xml.stream.Format $r1;
        org.simpleframework.xml.transform.Matcher $r2;
        org.simpleframework.xml.filter.Filter $r3;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: org.simpleframework.xml.filter.Filter;

        $r2 := @parameter1: org.simpleframework.xml.transform.Matcher;

        $r1 := @parameter2: org.simpleframework.xml.stream.Format;

        $r0 = new org.simpleframework.xml.strategy.TreeStrategy;

        specialinvoke $r0.<org.simpleframework.xml.strategy.TreeStrategy: void <init>()>();

        specialinvoke $r4.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter,org.simpleframework.xml.transform.Matcher,org.simpleframework.xml.stream.Format)>($r0, $r3, $r2, $r1);

        return;
    }

    public void <init>(org.simpleframework.xml.strategy.Strategy)
    {
        java.util.HashMap $r0;
        org.simpleframework.xml.strategy.Strategy $r1;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: org.simpleframework.xml.strategy.Strategy;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        specialinvoke $r2.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,java.util.Map)>($r1, $r0);

        return;
    }

    public void <init>(org.simpleframework.xml.strategy.Strategy, java.util.Map)
    {
        org.simpleframework.xml.filter.PlatformFilter $r0;
        java.util.Map $r1;
        org.simpleframework.xml.strategy.Strategy $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: org.simpleframework.xml.strategy.Strategy;

        $r1 := @parameter1: java.util.Map;

        $r0 = new org.simpleframework.xml.filter.PlatformFilter;

        specialinvoke $r0.<org.simpleframework.xml.filter.PlatformFilter: void <init>(java.util.Map)>($r1);

        specialinvoke $r3.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter)>($r2, $r0);

        return;
    }

    public void <init>(org.simpleframework.xml.strategy.Strategy, java.util.Map, org.simpleframework.xml.stream.Format)
    {
        org.simpleframework.xml.filter.PlatformFilter $r0;
        org.simpleframework.xml.stream.Format $r1;
        java.util.Map $r2;
        org.simpleframework.xml.strategy.Strategy $r3;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: org.simpleframework.xml.strategy.Strategy;

        $r2 := @parameter1: java.util.Map;

        $r1 := @parameter2: org.simpleframework.xml.stream.Format;

        $r0 = new org.simpleframework.xml.filter.PlatformFilter;

        specialinvoke $r0.<org.simpleframework.xml.filter.PlatformFilter: void <init>(java.util.Map)>($r2);

        specialinvoke $r4.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter,org.simpleframework.xml.stream.Format)>($r3, $r0, $r1);

        return;
    }

    public void <init>(org.simpleframework.xml.strategy.Strategy, org.simpleframework.xml.filter.Filter)
    {
        org.simpleframework.xml.stream.Format $r0;
        org.simpleframework.xml.filter.Filter $r1;
        org.simpleframework.xml.strategy.Strategy $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: org.simpleframework.xml.strategy.Strategy;

        $r1 := @parameter1: org.simpleframework.xml.filter.Filter;

        $r0 = new org.simpleframework.xml.stream.Format;

        specialinvoke $r0.<org.simpleframework.xml.stream.Format: void <init>()>();

        specialinvoke $r3.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter,org.simpleframework.xml.stream.Format)>($r2, $r1, $r0);

        return;
    }

    public void <init>(org.simpleframework.xml.strategy.Strategy, org.simpleframework.xml.filter.Filter, org.simpleframework.xml.stream.Format)
    {
        org.simpleframework.xml.core.EmptyMatcher $r0;
        org.simpleframework.xml.stream.Format $r1;
        org.simpleframework.xml.filter.Filter $r2;
        org.simpleframework.xml.strategy.Strategy $r3;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: org.simpleframework.xml.strategy.Strategy;

        $r2 := @parameter1: org.simpleframework.xml.filter.Filter;

        $r1 := @parameter2: org.simpleframework.xml.stream.Format;

        $r0 = new org.simpleframework.xml.core.EmptyMatcher;

        specialinvoke $r0.<org.simpleframework.xml.core.EmptyMatcher: void <init>()>();

        specialinvoke $r4.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter,org.simpleframework.xml.transform.Matcher,org.simpleframework.xml.stream.Format)>($r3, $r2, $r0, $r1);

        return;
    }

    public void <init>(org.simpleframework.xml.strategy.Strategy, org.simpleframework.xml.filter.Filter, org.simpleframework.xml.transform.Matcher)
    {
        org.simpleframework.xml.stream.Format $r0;
        org.simpleframework.xml.transform.Matcher $r1;
        org.simpleframework.xml.filter.Filter $r2;
        org.simpleframework.xml.strategy.Strategy $r3;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: org.simpleframework.xml.strategy.Strategy;

        $r2 := @parameter1: org.simpleframework.xml.filter.Filter;

        $r1 := @parameter2: org.simpleframework.xml.transform.Matcher;

        $r0 = new org.simpleframework.xml.stream.Format;

        specialinvoke $r0.<org.simpleframework.xml.stream.Format: void <init>()>();

        specialinvoke $r4.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter,org.simpleframework.xml.transform.Matcher,org.simpleframework.xml.stream.Format)>($r3, $r2, $r1, $r0);

        return;
    }

    public void <init>(org.simpleframework.xml.strategy.Strategy, org.simpleframework.xml.filter.Filter, org.simpleframework.xml.transform.Matcher, org.simpleframework.xml.stream.Format)
    {
        org.simpleframework.xml.core.SessionManager $r0;
        org.simpleframework.xml.core.Support $r1;
        org.simpleframework.xml.stream.Format $r2;
        org.simpleframework.xml.transform.Matcher $r3;
        org.simpleframework.xml.filter.Filter $r4;
        org.simpleframework.xml.strategy.Strategy $r5;
        org.simpleframework.xml.core.Persister $r6;

        $r6 := @this: org.simpleframework.xml.core.Persister;

        $r5 := @parameter0: org.simpleframework.xml.strategy.Strategy;

        $r4 := @parameter1: org.simpleframework.xml.filter.Filter;

        $r3 := @parameter2: org.simpleframework.xml.transform.Matcher;

        $r2 := @parameter3: org.simpleframework.xml.stream.Format;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        $r1 = new org.simpleframework.xml.core.Support;

        specialinvoke $r1.<org.simpleframework.xml.core.Support: void <init>(org.simpleframework.xml.filter.Filter,org.simpleframework.xml.transform.Matcher,org.simpleframework.xml.stream.Format)>($r4, $r3, $r2);

        $r6.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.Support support> = $r1;

        $r0 = new org.simpleframework.xml.core.SessionManager;

        specialinvoke $r0.<org.simpleframework.xml.core.SessionManager: void <init>()>();

        $r6.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.SessionManager manager> = $r0;

        $r6.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.strategy.Strategy strategy> = $r5;

        $r6.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.stream.Format format> = $r2;

        return;
    }

    public void <init>(org.simpleframework.xml.strategy.Strategy, org.simpleframework.xml.stream.Format)
    {
        java.util.HashMap $r0;
        org.simpleframework.xml.stream.Format $r1;
        org.simpleframework.xml.strategy.Strategy $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: org.simpleframework.xml.strategy.Strategy;

        $r1 := @parameter1: org.simpleframework.xml.stream.Format;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        specialinvoke $r3.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,java.util.Map,org.simpleframework.xml.stream.Format)>($r2, $r0, $r1);

        return;
    }

    public void <init>(org.simpleframework.xml.strategy.Strategy, org.simpleframework.xml.transform.Matcher)
    {
        org.simpleframework.xml.filter.PlatformFilter $r0;
        org.simpleframework.xml.transform.Matcher $r1;
        org.simpleframework.xml.strategy.Strategy $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: org.simpleframework.xml.strategy.Strategy;

        $r1 := @parameter1: org.simpleframework.xml.transform.Matcher;

        $r0 = new org.simpleframework.xml.filter.PlatformFilter;

        specialinvoke $r0.<org.simpleframework.xml.filter.PlatformFilter: void <init>()>();

        specialinvoke $r3.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter,org.simpleframework.xml.transform.Matcher)>($r2, $r0, $r1);

        return;
    }

    public void <init>(org.simpleframework.xml.strategy.Strategy, org.simpleframework.xml.transform.Matcher, org.simpleframework.xml.stream.Format)
    {
        org.simpleframework.xml.filter.PlatformFilter $r0;
        org.simpleframework.xml.stream.Format $r1;
        org.simpleframework.xml.transform.Matcher $r2;
        org.simpleframework.xml.strategy.Strategy $r3;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: org.simpleframework.xml.strategy.Strategy;

        $r2 := @parameter1: org.simpleframework.xml.transform.Matcher;

        $r1 := @parameter2: org.simpleframework.xml.stream.Format;

        $r0 = new org.simpleframework.xml.filter.PlatformFilter;

        specialinvoke $r0.<org.simpleframework.xml.filter.PlatformFilter: void <init>()>();

        specialinvoke $r4.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.filter.Filter,org.simpleframework.xml.transform.Matcher,org.simpleframework.xml.stream.Format)>($r3, $r0, $r2, $r1);

        return;
    }

    public void <init>(org.simpleframework.xml.stream.Format)
    {
        org.simpleframework.xml.strategy.TreeStrategy $r0;
        org.simpleframework.xml.stream.Format $r1;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: org.simpleframework.xml.stream.Format;

        $r0 = new org.simpleframework.xml.strategy.TreeStrategy;

        specialinvoke $r0.<org.simpleframework.xml.strategy.TreeStrategy: void <init>()>();

        specialinvoke $r2.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.stream.Format)>($r0, $r1);

        return;
    }

    public void <init>(org.simpleframework.xml.transform.Matcher)
    {
        org.simpleframework.xml.strategy.TreeStrategy $r0;
        org.simpleframework.xml.transform.Matcher $r1;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: org.simpleframework.xml.transform.Matcher;

        $r0 = new org.simpleframework.xml.strategy.TreeStrategy;

        specialinvoke $r0.<org.simpleframework.xml.strategy.TreeStrategy: void <init>()>();

        specialinvoke $r2.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.transform.Matcher)>($r0, $r1);

        return;
    }

    public void <init>(org.simpleframework.xml.transform.Matcher, org.simpleframework.xml.stream.Format)
    {
        org.simpleframework.xml.strategy.TreeStrategy $r0;
        org.simpleframework.xml.stream.Format $r1;
        org.simpleframework.xml.transform.Matcher $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: org.simpleframework.xml.transform.Matcher;

        $r1 := @parameter1: org.simpleframework.xml.stream.Format;

        $r0 = new org.simpleframework.xml.strategy.TreeStrategy;

        specialinvoke $r0.<org.simpleframework.xml.strategy.TreeStrategy: void <init>()>();

        specialinvoke $r3.<org.simpleframework.xml.core.Persister: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.transform.Matcher,org.simpleframework.xml.stream.Format)>($r0, $r2, $r1);

        return;
    }

    private java.lang.Object read(java.lang.Class, org.simpleframework.xml.stream.InputNode, org.simpleframework.xml.core.Context) throws java.lang.Exception
    {
        java.lang.Object $r0;
        org.simpleframework.xml.core.Traverser $r1;
        org.simpleframework.xml.core.Context $r2;
        org.simpleframework.xml.stream.InputNode $r3;
        java.lang.Class $r4;
        org.simpleframework.xml.core.Persister $r5;

        $r5 := @this: org.simpleframework.xml.core.Persister;

        $r4 := @parameter0: java.lang.Class;

        $r3 := @parameter1: org.simpleframework.xml.stream.InputNode;

        $r2 := @parameter2: org.simpleframework.xml.core.Context;

        $r1 = new org.simpleframework.xml.core.Traverser;

        specialinvoke $r1.<org.simpleframework.xml.core.Traverser: void <init>(org.simpleframework.xml.core.Context)>($r2);

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.Traverser: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Class)>($r3, $r4);

        return $r0;
    }

    private java.lang.Object read(java.lang.Class, org.simpleframework.xml.stream.InputNode, org.simpleframework.xml.core.Session) throws java.lang.Exception
    {
        java.lang.Object $r0;
        org.simpleframework.xml.core.Support $r1;
        org.simpleframework.xml.strategy.Strategy $r2;
        org.simpleframework.xml.core.Source $r3;
        org.simpleframework.xml.core.Session $r4;
        org.simpleframework.xml.stream.InputNode $r5;
        java.lang.Class $r6;
        org.simpleframework.xml.core.Persister $r7;

        $r7 := @this: org.simpleframework.xml.core.Persister;

        $r6 := @parameter0: java.lang.Class;

        $r5 := @parameter1: org.simpleframework.xml.stream.InputNode;

        $r4 := @parameter2: org.simpleframework.xml.core.Session;

        $r3 = new org.simpleframework.xml.core.Source;

        $r2 = $r7.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.strategy.Strategy strategy>;

        $r1 = $r7.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.Support support>;

        specialinvoke $r3.<org.simpleframework.xml.core.Source: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.core.Support,org.simpleframework.xml.core.Session)>($r2, $r1, $r4);

        $r0 = specialinvoke $r7.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Context)>($r6, $r5, $r3);

        return $r0;
    }

    private java.lang.Object read(java.lang.Object, org.simpleframework.xml.stream.InputNode, org.simpleframework.xml.core.Context) throws java.lang.Exception
    {
        org.simpleframework.xml.core.Traverser $r0;
        org.simpleframework.xml.core.Context $r1;
        org.simpleframework.xml.stream.InputNode $r2;
        java.lang.Object $r3, $r5;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.simpleframework.xml.stream.InputNode;

        $r1 := @parameter2: org.simpleframework.xml.core.Context;

        $r0 = new org.simpleframework.xml.core.Traverser;

        specialinvoke $r0.<org.simpleframework.xml.core.Traverser: void <init>(org.simpleframework.xml.core.Context)>($r1);

        $r5 = virtualinvoke $r0.<org.simpleframework.xml.core.Traverser: java.lang.Object read(org.simpleframework.xml.stream.InputNode,java.lang.Object)>($r2, $r3);

        return $r5;
    }

    private java.lang.Object read(java.lang.Object, org.simpleframework.xml.stream.InputNode, org.simpleframework.xml.core.Session) throws java.lang.Exception
    {
        org.simpleframework.xml.core.Support $r0;
        org.simpleframework.xml.strategy.Strategy $r1;
        org.simpleframework.xml.core.Source $r2;
        org.simpleframework.xml.core.Session $r3;
        org.simpleframework.xml.stream.InputNode $r4;
        java.lang.Object $r5, $r7;
        org.simpleframework.xml.core.Persister $r6;

        $r6 := @this: org.simpleframework.xml.core.Persister;

        $r5 := @parameter0: java.lang.Object;

        $r4 := @parameter1: org.simpleframework.xml.stream.InputNode;

        $r3 := @parameter2: org.simpleframework.xml.core.Session;

        $r2 = new org.simpleframework.xml.core.Source;

        $r1 = $r6.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.strategy.Strategy strategy>;

        $r0 = $r6.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.Support support>;

        specialinvoke $r2.<org.simpleframework.xml.core.Source: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.core.Support,org.simpleframework.xml.core.Session)>($r1, $r0, $r3);

        $r7 = specialinvoke $r6.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Context)>($r5, $r4, $r2);

        return $r7;
    }

    private boolean validate(java.lang.Class, org.simpleframework.xml.stream.InputNode, org.simpleframework.xml.core.Context) throws java.lang.Exception
    {
        boolean $z0;
        org.simpleframework.xml.core.Traverser $r0;
        org.simpleframework.xml.core.Context $r1;
        org.simpleframework.xml.stream.InputNode $r2;
        java.lang.Class $r3;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.simpleframework.xml.stream.InputNode;

        $r1 := @parameter2: org.simpleframework.xml.core.Context;

        $r0 = new org.simpleframework.xml.core.Traverser;

        specialinvoke $r0.<org.simpleframework.xml.core.Traverser: void <init>(org.simpleframework.xml.core.Context)>($r1);

        $z0 = virtualinvoke $r0.<org.simpleframework.xml.core.Traverser: boolean validate(org.simpleframework.xml.stream.InputNode,java.lang.Class)>($r2, $r3);

        return $z0;
    }

    private boolean validate(java.lang.Class, org.simpleframework.xml.stream.InputNode, org.simpleframework.xml.core.Session) throws java.lang.Exception
    {
        boolean $z0;
        org.simpleframework.xml.core.Support $r0;
        org.simpleframework.xml.strategy.Strategy $r1;
        org.simpleframework.xml.core.Source $r2;
        org.simpleframework.xml.core.Session $r3;
        org.simpleframework.xml.stream.InputNode $r4;
        java.lang.Class $r5;
        org.simpleframework.xml.core.Persister $r6;

        $r6 := @this: org.simpleframework.xml.core.Persister;

        $r5 := @parameter0: java.lang.Class;

        $r4 := @parameter1: org.simpleframework.xml.stream.InputNode;

        $r3 := @parameter2: org.simpleframework.xml.core.Session;

        $r2 = new org.simpleframework.xml.core.Source;

        $r1 = $r6.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.strategy.Strategy strategy>;

        $r0 = $r6.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.Support support>;

        specialinvoke $r2.<org.simpleframework.xml.core.Source: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.core.Support,org.simpleframework.xml.core.Session)>($r1, $r0, $r3);

        $z0 = specialinvoke $r6.<org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Context)>($r5, $r4, $r2);

        return $z0;
    }

    private void write(java.lang.Object, org.simpleframework.xml.stream.OutputNode, org.simpleframework.xml.core.Context) throws java.lang.Exception
    {
        org.simpleframework.xml.core.Traverser $r0;
        org.simpleframework.xml.core.Context $r1;
        org.simpleframework.xml.stream.OutputNode $r2;
        java.lang.Object $r3;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.simpleframework.xml.stream.OutputNode;

        $r1 := @parameter2: org.simpleframework.xml.core.Context;

        $r0 = new org.simpleframework.xml.core.Traverser;

        specialinvoke $r0.<org.simpleframework.xml.core.Traverser: void <init>(org.simpleframework.xml.core.Context)>($r1);

        virtualinvoke $r0.<org.simpleframework.xml.core.Traverser: void write(org.simpleframework.xml.stream.OutputNode,java.lang.Object)>($r2, $r3);

        return;
    }

    private void write(java.lang.Object, org.simpleframework.xml.stream.OutputNode, org.simpleframework.xml.core.Session) throws java.lang.Exception
    {
        org.simpleframework.xml.core.Support $r0;
        org.simpleframework.xml.strategy.Strategy $r1;
        org.simpleframework.xml.core.Source $r2;
        org.simpleframework.xml.core.Session $r3;
        org.simpleframework.xml.stream.OutputNode $r4;
        java.lang.Object $r5;
        org.simpleframework.xml.core.Persister $r6;

        $r6 := @this: org.simpleframework.xml.core.Persister;

        $r5 := @parameter0: java.lang.Object;

        $r4 := @parameter1: org.simpleframework.xml.stream.OutputNode;

        $r3 := @parameter2: org.simpleframework.xml.core.Session;

        $r2 = new org.simpleframework.xml.core.Source;

        $r1 = $r6.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.strategy.Strategy strategy>;

        $r0 = $r6.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.Support support>;

        specialinvoke $r2.<org.simpleframework.xml.core.Source: void <init>(org.simpleframework.xml.strategy.Strategy,org.simpleframework.xml.core.Support,org.simpleframework.xml.core.Session)>($r1, $r0, $r3);

        specialinvoke $r6.<org.simpleframework.xml.core.Persister: void write(java.lang.Object,org.simpleframework.xml.stream.OutputNode,org.simpleframework.xml.core.Context)>($r5, $r4, $r2);

        return;
    }

    public java.lang.Object read(java.lang.Class, java.io.File) throws java.lang.Exception
    {
        java.lang.Object $r0;
        java.io.File $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.io.File;

        $r0 = virtualinvoke $r3.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,java.io.File,boolean)>($r2, $r1, 1);

        return $r0;
    }

    public java.lang.Object read(java.lang.Class, java.io.File, boolean) throws java.lang.Exception
    {
        java.lang.Throwable $r0;
        java.lang.Object $r1;
        java.io.FileInputStream $r2;
        boolean $z0;
        java.io.File $r3;
        java.lang.Class $r4;
        org.simpleframework.xml.core.Persister $r5;

        $r5 := @this: org.simpleframework.xml.core.Persister;

        $r4 := @parameter0: java.lang.Class;

        $r3 := @parameter1: java.io.File;

        $z0 := @parameter2: boolean;

        $r2 = new java.io.FileInputStream;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

     label1:
        $r1 = virtualinvoke $r5.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,java.io.InputStream,boolean)>($r4, $r2, $z0);

     label2:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

        return $r1;

     label3:
        $r0 := @caughtexception;

        virtualinvoke $r2.<java.io.InputStream: void close()>();

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object read(java.lang.Class, java.io.InputStream) throws java.lang.Exception
    {
        java.lang.Object $r0;
        java.io.InputStream $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.io.InputStream;

        $r0 = virtualinvoke $r3.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,java.io.InputStream,boolean)>($r2, $r1, 1);

        return $r0;
    }

    public java.lang.Object read(java.lang.Class, java.io.InputStream, boolean) throws java.lang.Exception
    {
        java.lang.Object $r0;
        org.simpleframework.xml.stream.InputNode $r1;
        boolean $z0;
        java.io.InputStream $r2;
        java.lang.Class $r3;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.io.InputStream;

        $z0 := @parameter2: boolean;

        $r1 = staticinvoke <org.simpleframework.xml.stream.NodeBuilder: org.simpleframework.xml.stream.InputNode read(java.io.InputStream)>($r2);

        $r0 = virtualinvoke $r4.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,org.simpleframework.xml.stream.InputNode,boolean)>($r3, $r1, $z0);

        return $r0;
    }

    public java.lang.Object read(java.lang.Class, java.io.Reader) throws java.lang.Exception
    {
        java.lang.Object $r0;
        java.io.Reader $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.io.Reader;

        $r0 = virtualinvoke $r3.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,java.io.Reader,boolean)>($r2, $r1, 1);

        return $r0;
    }

    public java.lang.Object read(java.lang.Class, java.io.Reader, boolean) throws java.lang.Exception
    {
        java.lang.Object $r0;
        org.simpleframework.xml.stream.InputNode $r1;
        boolean $z0;
        java.io.Reader $r2;
        java.lang.Class $r3;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.io.Reader;

        $z0 := @parameter2: boolean;

        $r1 = staticinvoke <org.simpleframework.xml.stream.NodeBuilder: org.simpleframework.xml.stream.InputNode read(java.io.Reader)>($r2);

        $r0 = virtualinvoke $r4.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,org.simpleframework.xml.stream.InputNode,boolean)>($r3, $r1, $z0);

        return $r0;
    }

    public java.lang.Object read(java.lang.Class, java.lang.String) throws java.lang.Exception
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        $r0 = virtualinvoke $r3.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,java.lang.String,boolean)>($r2, $r1, 1);

        return $r0;
    }

    public java.lang.Object read(java.lang.Class, java.lang.String, boolean) throws java.lang.Exception
    {
        java.lang.Object $r0;
        java.io.StringReader $r1;
        boolean $z0;
        java.lang.String $r2;
        java.lang.Class $r3;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r1 = new java.io.StringReader;

        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>($r2);

        $r0 = virtualinvoke $r4.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,java.io.Reader,boolean)>($r3, $r1, $z0);

        return $r0;
    }

    public java.lang.Object read(java.lang.Class, org.simpleframework.xml.stream.InputNode) throws java.lang.Exception
    {
        java.lang.Object $r0;
        org.simpleframework.xml.stream.InputNode $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: org.simpleframework.xml.stream.InputNode;

        $r0 = virtualinvoke $r3.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,org.simpleframework.xml.stream.InputNode,boolean)>($r2, $r1, 1);

        return $r0;
    }

    public java.lang.Object read(java.lang.Class, org.simpleframework.xml.stream.InputNode, boolean) throws java.lang.Exception
    {
        java.lang.Throwable $r0;
        java.lang.Object $r1;
        org.simpleframework.xml.core.Session $r2;
        org.simpleframework.xml.core.SessionManager $r3, $r7, $r8;
        boolean $z0;
        org.simpleframework.xml.stream.InputNode $r4;
        java.lang.Class $r5;
        org.simpleframework.xml.core.Persister $r6;

        $r6 := @this: org.simpleframework.xml.core.Persister;

        $r5 := @parameter0: java.lang.Class;

        $r4 := @parameter1: org.simpleframework.xml.stream.InputNode;

        $z0 := @parameter2: boolean;

        $r3 = $r6.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.SessionManager manager>;

        $r2 = virtualinvoke $r3.<org.simpleframework.xml.core.SessionManager: org.simpleframework.xml.core.Session open(boolean)>($z0);

     label1:
        $r1 = specialinvoke $r6.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Class,org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Session)>($r5, $r4, $r2);

     label2:
        $r7 = $r6.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.SessionManager manager>;

        virtualinvoke $r7.<org.simpleframework.xml.core.SessionManager: void close()>();

        return $r1;

     label3:
        $r0 := @caughtexception;

        $r8 = $r6.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.SessionManager manager>;

        virtualinvoke $r8.<org.simpleframework.xml.core.SessionManager: void close()>();

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object read(java.lang.Object, java.io.File) throws java.lang.Exception
    {
        java.io.File $r0;
        java.lang.Object $r1, $r3;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.io.File;

        $r3 = virtualinvoke $r2.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,java.io.File,boolean)>($r1, $r0, 1);

        return $r3;
    }

    public java.lang.Object read(java.lang.Object, java.io.File, boolean) throws java.lang.Exception
    {
        java.lang.Throwable $r0;
        java.io.FileInputStream $r1;
        boolean $z0;
        java.io.File $r2;
        java.lang.Object $r3, $r5;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.io.File;

        $z0 := @parameter2: boolean;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label1:
        $r5 = virtualinvoke $r4.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,java.io.InputStream,boolean)>($r3, $r1, $z0);

     label2:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return $r5;

     label3:
        $r0 := @caughtexception;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object read(java.lang.Object, java.io.InputStream) throws java.lang.Exception
    {
        java.io.InputStream $r0;
        java.lang.Object $r1, $r3;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.io.InputStream;

        $r3 = virtualinvoke $r2.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,java.io.InputStream,boolean)>($r1, $r0, 1);

        return $r3;
    }

    public java.lang.Object read(java.lang.Object, java.io.InputStream, boolean) throws java.lang.Exception
    {
        org.simpleframework.xml.stream.InputNode $r0;
        boolean $z0;
        java.io.InputStream $r1;
        java.lang.Object $r2, $r4;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.io.InputStream;

        $z0 := @parameter2: boolean;

        $r0 = staticinvoke <org.simpleframework.xml.stream.NodeBuilder: org.simpleframework.xml.stream.InputNode read(java.io.InputStream)>($r1);

        $r4 = virtualinvoke $r3.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,org.simpleframework.xml.stream.InputNode,boolean)>($r2, $r0, $z0);

        return $r4;
    }

    public java.lang.Object read(java.lang.Object, java.io.Reader) throws java.lang.Exception
    {
        java.io.Reader $r0;
        java.lang.Object $r1, $r3;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.io.Reader;

        $r3 = virtualinvoke $r2.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,java.io.Reader,boolean)>($r1, $r0, 1);

        return $r3;
    }

    public java.lang.Object read(java.lang.Object, java.io.Reader, boolean) throws java.lang.Exception
    {
        org.simpleframework.xml.stream.InputNode $r0;
        boolean $z0;
        java.io.Reader $r1;
        java.lang.Object $r2, $r4;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.io.Reader;

        $z0 := @parameter2: boolean;

        $r0 = staticinvoke <org.simpleframework.xml.stream.NodeBuilder: org.simpleframework.xml.stream.InputNode read(java.io.Reader)>($r1);

        $r4 = virtualinvoke $r3.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,org.simpleframework.xml.stream.InputNode,boolean)>($r2, $r0, $z0);

        return $r4;
    }

    public java.lang.Object read(java.lang.Object, java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0;
        java.lang.Object $r1, $r3;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r2.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,java.lang.String,boolean)>($r1, $r0, 1);

        return $r3;
    }

    public java.lang.Object read(java.lang.Object, java.lang.String, boolean) throws java.lang.Exception
    {
        java.io.StringReader $r0;
        boolean $z0;
        java.lang.String $r1;
        java.lang.Object $r2, $r4;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r0 = new java.io.StringReader;

        specialinvoke $r0.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,java.io.Reader,boolean)>($r2, $r0, $z0);

        return $r4;
    }

    public java.lang.Object read(java.lang.Object, org.simpleframework.xml.stream.InputNode) throws java.lang.Exception
    {
        org.simpleframework.xml.stream.InputNode $r0;
        java.lang.Object $r1, $r3;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: org.simpleframework.xml.stream.InputNode;

        $r3 = virtualinvoke $r2.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,org.simpleframework.xml.stream.InputNode,boolean)>($r1, $r0, 1);

        return $r3;
    }

    public java.lang.Object read(java.lang.Object, org.simpleframework.xml.stream.InputNode, boolean) throws java.lang.Exception
    {
        java.lang.Throwable $r0;
        org.simpleframework.xml.core.Session $r1;
        org.simpleframework.xml.core.SessionManager $r2, $r7, $r8;
        boolean $z0;
        org.simpleframework.xml.stream.InputNode $r3;
        java.lang.Object $r4, $r6;
        org.simpleframework.xml.core.Persister $r5;

        $r5 := @this: org.simpleframework.xml.core.Persister;

        $r4 := @parameter0: java.lang.Object;

        $r3 := @parameter1: org.simpleframework.xml.stream.InputNode;

        $z0 := @parameter2: boolean;

        $r2 = $r5.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.SessionManager manager>;

        $r1 = virtualinvoke $r2.<org.simpleframework.xml.core.SessionManager: org.simpleframework.xml.core.Session open(boolean)>($z0);

     label1:
        $r6 = specialinvoke $r5.<org.simpleframework.xml.core.Persister: java.lang.Object read(java.lang.Object,org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Session)>($r4, $r3, $r1);

     label2:
        $r7 = $r5.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.SessionManager manager>;

        virtualinvoke $r7.<org.simpleframework.xml.core.SessionManager: void close()>();

        return $r6;

     label3:
        $r0 := @caughtexception;

        $r8 = $r5.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.SessionManager manager>;

        virtualinvoke $r8.<org.simpleframework.xml.core.SessionManager: void close()>();

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean validate(java.lang.Class, java.io.File) throws java.lang.Exception
    {
        boolean $z0;
        java.io.File $r0;
        java.lang.Class $r1;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: java.lang.Class;

        $r0 := @parameter1: java.io.File;

        $z0 = virtualinvoke $r2.<org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,java.io.File,boolean)>($r1, $r0, 1);

        return $z0;
    }

    public boolean validate(java.lang.Class, java.io.File, boolean) throws java.lang.Exception
    {
        java.lang.Throwable $r0;
        java.io.FileInputStream $r1;
        boolean $z0, $z1;
        java.io.File $r2;
        java.lang.Class $r3;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.io.File;

        $z0 := @parameter2: boolean;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label1:
        $z1 = virtualinvoke $r4.<org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,java.io.InputStream,boolean)>($r3, $r1, $z0);

     label2:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return $z1;

     label3:
        $r0 := @caughtexception;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean validate(java.lang.Class, java.io.InputStream) throws java.lang.Exception
    {
        boolean $z0;
        java.io.InputStream $r0;
        java.lang.Class $r1;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: java.lang.Class;

        $r0 := @parameter1: java.io.InputStream;

        $z0 = virtualinvoke $r2.<org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,java.io.InputStream,boolean)>($r1, $r0, 1);

        return $z0;
    }

    public boolean validate(java.lang.Class, java.io.InputStream, boolean) throws java.lang.Exception
    {
        org.simpleframework.xml.stream.InputNode $r0;
        boolean $z0, $z1;
        java.io.InputStream $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.io.InputStream;

        $z0 := @parameter2: boolean;

        $r0 = staticinvoke <org.simpleframework.xml.stream.NodeBuilder: org.simpleframework.xml.stream.InputNode read(java.io.InputStream)>($r1);

        $z1 = virtualinvoke $r3.<org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,org.simpleframework.xml.stream.InputNode,boolean)>($r2, $r0, $z0);

        return $z1;
    }

    public boolean validate(java.lang.Class, java.io.Reader) throws java.lang.Exception
    {
        boolean $z0;
        java.io.Reader $r0;
        java.lang.Class $r1;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: java.lang.Class;

        $r0 := @parameter1: java.io.Reader;

        $z0 = virtualinvoke $r2.<org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,java.io.Reader,boolean)>($r1, $r0, 1);

        return $z0;
    }

    public boolean validate(java.lang.Class, java.io.Reader, boolean) throws java.lang.Exception
    {
        org.simpleframework.xml.stream.InputNode $r0;
        boolean $z0, $z1;
        java.io.Reader $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.io.Reader;

        $z0 := @parameter2: boolean;

        $r0 = staticinvoke <org.simpleframework.xml.stream.NodeBuilder: org.simpleframework.xml.stream.InputNode read(java.io.Reader)>($r1);

        $z1 = virtualinvoke $r3.<org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,org.simpleframework.xml.stream.InputNode,boolean)>($r2, $r0, $z0);

        return $z1;
    }

    public boolean validate(java.lang.Class, java.lang.String) throws java.lang.Exception
    {
        boolean $z0;
        java.lang.String $r0;
        java.lang.Class $r1;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: java.lang.Class;

        $r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke $r2.<org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,java.lang.String,boolean)>($r1, $r0, 1);

        return $z0;
    }

    public boolean validate(java.lang.Class, java.lang.String, boolean) throws java.lang.Exception
    {
        java.io.StringReader $r0;
        boolean $z0, $z1;
        java.lang.String $r1;
        java.lang.Class $r2;
        org.simpleframework.xml.core.Persister $r3;

        $r3 := @this: org.simpleframework.xml.core.Persister;

        $r2 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r0 = new java.io.StringReader;

        specialinvoke $r0.<java.io.StringReader: void <init>(java.lang.String)>($r1);

        $z1 = virtualinvoke $r3.<org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,java.io.Reader,boolean)>($r2, $r0, $z0);

        return $z1;
    }

    public boolean validate(java.lang.Class, org.simpleframework.xml.stream.InputNode) throws java.lang.Exception
    {
        boolean $z0;
        org.simpleframework.xml.stream.InputNode $r0;
        java.lang.Class $r1;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: java.lang.Class;

        $r0 := @parameter1: org.simpleframework.xml.stream.InputNode;

        $z0 = virtualinvoke $r2.<org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,org.simpleframework.xml.stream.InputNode,boolean)>($r1, $r0, 1);

        return $z0;
    }

    public boolean validate(java.lang.Class, org.simpleframework.xml.stream.InputNode, boolean) throws java.lang.Exception
    {
        java.lang.Throwable $r0;
        org.simpleframework.xml.core.Session $r1;
        org.simpleframework.xml.core.SessionManager $r2, $r6, $r7;
        boolean $z0, $z1;
        org.simpleframework.xml.stream.InputNode $r3;
        java.lang.Class $r4;
        org.simpleframework.xml.core.Persister $r5;

        $r5 := @this: org.simpleframework.xml.core.Persister;

        $r4 := @parameter0: java.lang.Class;

        $r3 := @parameter1: org.simpleframework.xml.stream.InputNode;

        $z0 := @parameter2: boolean;

        $r2 = $r5.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.SessionManager manager>;

        $r1 = virtualinvoke $r2.<org.simpleframework.xml.core.SessionManager: org.simpleframework.xml.core.Session open(boolean)>($z0);

     label1:
        $z1 = specialinvoke $r5.<org.simpleframework.xml.core.Persister: boolean validate(java.lang.Class,org.simpleframework.xml.stream.InputNode,org.simpleframework.xml.core.Session)>($r4, $r3, $r1);

     label2:
        $r6 = $r5.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.SessionManager manager>;

        virtualinvoke $r6.<org.simpleframework.xml.core.SessionManager: void close()>();

        return $z1;

     label3:
        $r0 := @caughtexception;

        $r7 = $r5.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.SessionManager manager>;

        virtualinvoke $r7.<org.simpleframework.xml.core.SessionManager: void close()>();

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void write(java.lang.Object, java.io.File) throws java.lang.Exception
    {
        java.lang.Throwable $r0;
        java.io.FileOutputStream $r1;
        java.io.File $r2;
        java.lang.Object $r3;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.io.File;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

     label1:
        virtualinvoke $r4.<org.simpleframework.xml.core.Persister: void write(java.lang.Object,java.io.OutputStream)>($r3, $r1);

     label2:
        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;

     label3:
        $r0 := @caughtexception;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void write(java.lang.Object, java.io.OutputStream) throws java.lang.Exception
    {
        java.io.OutputStream $r0;
        java.lang.Object $r1;
        org.simpleframework.xml.core.Persister $r2;

        $r2 := @this: org.simpleframework.xml.core.Persister;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.io.OutputStream;

        virtualinvoke $r2.<org.simpleframework.xml.core.Persister: void write(java.lang.Object,java.io.OutputStream,java.lang.String)>($r1, $r0, "utf-8");

        return;
    }

    public void write(java.lang.Object, java.io.OutputStream, java.lang.String) throws java.lang.Exception
    {
        java.io.OutputStreamWriter $r0;
        java.lang.String $r1;
        java.io.OutputStream $r2;
        java.lang.Object $r3;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.io.OutputStream;

        $r1 := @parameter2: java.lang.String;

        $r0 = new java.io.OutputStreamWriter;

        specialinvoke $r0.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r2, $r1);

        virtualinvoke $r4.<org.simpleframework.xml.core.Persister: void write(java.lang.Object,java.io.Writer)>($r3, $r0);

        return;
    }

    public void write(java.lang.Object, java.io.Writer) throws java.lang.Exception
    {
        org.simpleframework.xml.stream.OutputNode $r0;
        org.simpleframework.xml.stream.Format $r1;
        java.io.Writer $r2;
        java.lang.Object $r3;
        org.simpleframework.xml.core.Persister $r4;

        $r4 := @this: org.simpleframework.xml.core.Persister;

        $r3 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.io.Writer;

        $r1 = $r4.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.stream.Format format>;

        $r0 = staticinvoke <org.simpleframework.xml.stream.NodeBuilder: org.simpleframework.xml.stream.OutputNode write(java.io.Writer,org.simpleframework.xml.stream.Format)>($r2, $r1);

        virtualinvoke $r4.<org.simpleframework.xml.core.Persister: void write(java.lang.Object,org.simpleframework.xml.stream.OutputNode)>($r3, $r0);

        return;
    }

    public void write(java.lang.Object, org.simpleframework.xml.stream.OutputNode) throws java.lang.Exception
    {
        java.lang.Throwable $r0;
        org.simpleframework.xml.core.Session $r1;
        org.simpleframework.xml.core.SessionManager $r2, $r6, $r7;
        org.simpleframework.xml.stream.OutputNode $r3;
        java.lang.Object $r4;
        org.simpleframework.xml.core.Persister $r5;

        $r5 := @this: org.simpleframework.xml.core.Persister;

        $r4 := @parameter0: java.lang.Object;

        $r3 := @parameter1: org.simpleframework.xml.stream.OutputNode;

        $r2 = $r5.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.SessionManager manager>;

        $r1 = virtualinvoke $r2.<org.simpleframework.xml.core.SessionManager: org.simpleframework.xml.core.Session open()>();

     label1:
        specialinvoke $r5.<org.simpleframework.xml.core.Persister: void write(java.lang.Object,org.simpleframework.xml.stream.OutputNode,org.simpleframework.xml.core.Session)>($r4, $r3, $r1);

     label2:
        $r6 = $r5.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.SessionManager manager>;

        virtualinvoke $r6.<org.simpleframework.xml.core.SessionManager: void close()>();

        return;

     label3:
        $r0 := @caughtexception;

        $r7 = $r5.<org.simpleframework.xml.core.Persister: org.simpleframework.xml.core.SessionManager manager>;

        virtualinvoke $r7.<org.simpleframework.xml.core.SessionManager: void close()>();

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
