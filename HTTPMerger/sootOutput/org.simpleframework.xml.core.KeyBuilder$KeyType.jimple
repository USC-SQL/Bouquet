final enum class org.simpleframework.xml.core.KeyBuilder$KeyType extends java.lang.Enum
{
    private static final org.simpleframework.xml.core.KeyBuilder$KeyType[] $VALUES;
    public static final enum org.simpleframework.xml.core.KeyBuilder$KeyType ATTRIBUTE;
    public static final enum org.simpleframework.xml.core.KeyBuilder$KeyType ELEMENT;
    public static final enum org.simpleframework.xml.core.KeyBuilder$KeyType TEXT;

    static void <clinit>()
    {
        org.simpleframework.xml.core.KeyBuilder$KeyType[] $r0;
        org.simpleframework.xml.core.KeyBuilder$KeyType $r1, $r2, $r3, $r4, $r5, $r6;

        $r1 = new org.simpleframework.xml.core.KeyBuilder$KeyType;

        specialinvoke $r1.<org.simpleframework.xml.core.KeyBuilder$KeyType: void <init>(java.lang.String,int)>("TEXT", 0);

        <org.simpleframework.xml.core.KeyBuilder$KeyType: org.simpleframework.xml.core.KeyBuilder$KeyType TEXT> = $r1;

        $r2 = new org.simpleframework.xml.core.KeyBuilder$KeyType;

        specialinvoke $r2.<org.simpleframework.xml.core.KeyBuilder$KeyType: void <init>(java.lang.String,int)>("ATTRIBUTE", 1);

        <org.simpleframework.xml.core.KeyBuilder$KeyType: org.simpleframework.xml.core.KeyBuilder$KeyType ATTRIBUTE> = $r2;

        $r3 = new org.simpleframework.xml.core.KeyBuilder$KeyType;

        specialinvoke $r3.<org.simpleframework.xml.core.KeyBuilder$KeyType: void <init>(java.lang.String,int)>("ELEMENT", 2);

        <org.simpleframework.xml.core.KeyBuilder$KeyType: org.simpleframework.xml.core.KeyBuilder$KeyType ELEMENT> = $r3;

        $r0 = newarray (org.simpleframework.xml.core.KeyBuilder$KeyType)[3];

        $r4 = <org.simpleframework.xml.core.KeyBuilder$KeyType: org.simpleframework.xml.core.KeyBuilder$KeyType TEXT>;

        $r0[0] = $r4;

        $r5 = <org.simpleframework.xml.core.KeyBuilder$KeyType: org.simpleframework.xml.core.KeyBuilder$KeyType ATTRIBUTE>;

        $r0[1] = $r5;

        $r6 = <org.simpleframework.xml.core.KeyBuilder$KeyType: org.simpleframework.xml.core.KeyBuilder$KeyType ELEMENT>;

        $r0[2] = $r6;

        <org.simpleframework.xml.core.KeyBuilder$KeyType: org.simpleframework.xml.core.KeyBuilder$KeyType[] $VALUES> = $r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int $i0;
        java.lang.String $r0;
        org.simpleframework.xml.core.KeyBuilder$KeyType $r1;

        $r1 := @this: org.simpleframework.xml.core.KeyBuilder$KeyType;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke $r1.<java.lang.Enum: void <init>(java.lang.String,int)>($r0, $i0);

        return;
    }

    public static org.simpleframework.xml.core.KeyBuilder$KeyType valueOf(java.lang.String)
    {
        org.simpleframework.xml.core.KeyBuilder$KeyType $r0;
        java.lang.Enum $r1;
        java.lang.String $r2;

        $r2 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/simpleframework/xml/core/KeyBuilder$KeyType", $r2);

        $r0 = (org.simpleframework.xml.core.KeyBuilder$KeyType) $r1;

        return $r0;
    }

    public static final org.simpleframework.xml.core.KeyBuilder$KeyType[] values()
    {
        java.lang.Object $r0;
        org.simpleframework.xml.core.KeyBuilder$KeyType[] $r1, $r2;

        $r1 = <org.simpleframework.xml.core.KeyBuilder$KeyType: org.simpleframework.xml.core.KeyBuilder$KeyType[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.simpleframework.xml.core.KeyBuilder$KeyType[]) $r0;

        return $r2;
    }
}
