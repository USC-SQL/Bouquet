public class com.dai.giftcard.viewer.helper.StringHelper extends java.lang.Object
{

    public void <init>()
    {
        com.dai.giftcard.viewer.helper.StringHelper $r0;

        $r0 := @this: com.dai.giftcard.viewer.helper.StringHelper;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String DisplayDate(java.util.Date)
    {
        java.lang.String $r0;
        int $i0;
        java.util.Date $r1;

        $r1 := @parameter0: java.util.Date;

        $i0 = virtualinvoke $r1.<java.util.Date: int getYear()>();

        if $i0 != 1900 goto label1;

        return "";

     label1:
        $r0 = virtualinvoke $r1.<java.util.Date: java.lang.String toLocaleString()>();

        return $r0;
    }

    public static java.lang.String DisplayDollar(double)
    {
        java.lang.String $r0, $r3;
        java.lang.StringBuilder $r1, $r2;
        double $d0;

        $d0 := @parameter0: double;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("$");

        $r0 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static double GetDollar(java.lang.String)
    {
        double $d0;
        boolean $z0;
        java.lang.NumberFormatException $r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("");

        if $z0 == 0 goto label1;

        return 0.0;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("$", "");

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\u00a0", "");

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("A", "");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

     label2:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r6);

     label3:
        return $d0;

     label4:
        $r0 := @caughtexception;

        return -1.0;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public static java.lang.String StringClean(java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\r", "");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<br />", "");

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&nbsp;", "");

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\t", "");

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        return $r6;
    }

    public static java.util.List splitEqually(java.lang.String, int)
    {
        java.util.ArrayList $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r1, $r2;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r0 = new java.util.ArrayList;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i4 = $i2 + $i0;

        $i5 = $i4 + -1;

        $i6 = $i5 / $i0;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i6);

        $i1 = 0;

     label1:
        $i7 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 < $i7 goto label2;

        return $r0;

     label2:
        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i8 = $i1 + $i0;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i8);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i9);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i1 = $i1 + $i0;

        goto label1;
    }
}
