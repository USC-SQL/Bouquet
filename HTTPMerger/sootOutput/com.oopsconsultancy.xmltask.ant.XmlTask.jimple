public class com.oopsconsultancy.xmltask.ant.XmlTask extends org.apache.tools.ant.Task
{
    private static final java.lang.String FMT_NONE;
    private static final java.lang.String FMT_SIMPLE;
    private java.lang.String[] buffers;
    private java.lang.String dest;
    private java.lang.String dir;
    private java.util.List docs;
    private java.lang.String doctype_public;
    private java.lang.String doctype_system;
    private java.lang.String encoding;
    private boolean expandEntityReferences;
    private boolean failWithoutMatch;
    private final java.util.List filesets;
    private boolean indent;
    private boolean normalize;
    private boolean omitHeader;
    private java.lang.String outputEncoding;
    private java.lang.String outputter;
    private boolean preservetype;
    private java.util.List replacements;
    private boolean reporting;
    private com.oopsconsultancy.xmltask.ant.XmlTask$LocalEntityResolver resolver;
    private boolean settingStandalone;
    private boolean settingVersion;
    private boolean standalone;
    private boolean tobuffer;
    private boolean todir;
    private final org.apache.tools.ant.types.XMLCatalog xmlCatalog;
    private java.lang.String xmlVersion;

    public void <init>()
    {
        java.util.ArrayList $r0, $r5, $r6;
        java.lang.String[] $r1;
        org.apache.tools.ant.types.XMLCatalog $r2;
        com.oopsconsultancy.xmltask.ant.XmlTask$LocalEntityResolver $r3;
        com.oopsconsultancy.xmltask.ant.XmlTask $r4;

        $r4 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        specialinvoke $r4.<org.apache.tools.ant.Task: void <init>()>();

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean settingVersion> = 0;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String xmlVersion> = "1.0";

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean settingStandalone> = 0;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean standalone> = 0;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean omitHeader> = 0;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean todir> = 0;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean tobuffer> = 0;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean reporting> = 0;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean expandEntityReferences> = 1;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String doctype_public> = null;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String doctype_system> = null;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dir> = null;

        $r3 = new com.oopsconsultancy.xmltask.ant.XmlTask$LocalEntityResolver;

        specialinvoke $r3.<com.oopsconsultancy.xmltask.ant.XmlTask$LocalEntityResolver: void <init>()>();

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: com.oopsconsultancy.xmltask.ant.XmlTask$LocalEntityResolver resolver> = $r3;

        $r2 = new org.apache.tools.ant.types.XMLCatalog;

        specialinvoke $r2.<org.apache.tools.ant.types.XMLCatalog: void <init>()>();

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: org.apache.tools.ant.types.XMLCatalog xmlCatalog> = $r2;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean normalize> = 1;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean indent> = 1;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String encoding> = null;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String outputEncoding> = null;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String outputter> = "default";

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean preservetype> = 0;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean failWithoutMatch> = 0;

        $r1 = newarray (java.lang.String)[0];

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String[] buffers> = $r1;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List filesets> = $r0;

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest> = null;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List replacements> = $r6;

        return;
    }

    static org.w3c.dom.Document access$000(com.oopsconsultancy.xmltask.ant.XmlTask, java.lang.String) throws java.lang.Exception
    {
        org.w3c.dom.Document $r0;
        java.lang.String $r1;
        com.oopsconsultancy.xmltask.ant.XmlTask $r2;

        $r2 := @parameter0: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r1 := @parameter1: java.lang.String;

        $r0 = specialinvoke $r2.<com.oopsconsultancy.xmltask.ant.XmlTask: org.w3c.dom.Document documentFromFile(java.lang.String)>($r1);

        return $r0;
    }

    static org.w3c.dom.Document access$100(com.oopsconsultancy.xmltask.ant.XmlTask, java.lang.String) throws java.lang.Exception
    {
        org.w3c.dom.Document $r0;
        java.lang.String $r1;
        com.oopsconsultancy.xmltask.ant.XmlTask $r2;

        $r2 := @parameter0: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r1 := @parameter1: java.lang.String;

        $r0 = specialinvoke $r2.<com.oopsconsultancy.xmltask.ant.XmlTask: org.w3c.dom.Document documentFromStr(java.lang.String)>($r1);

        return $r0;
    }

    static org.w3c.dom.Document access$200(com.oopsconsultancy.xmltask.ant.XmlTask) throws java.lang.Exception
    {
        org.w3c.dom.Document $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @parameter0: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 = specialinvoke $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: org.w3c.dom.Document createDocument()>();

        return $r0;
    }

    static java.lang.String access$300(com.oopsconsultancy.xmltask.ant.XmlTask)
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @parameter0: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 = specialinvoke $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String getPathPrefix()>();

        return $r0;
    }

    private org.w3c.dom.Document createDocument() throws java.lang.Exception
    {
        org.w3c.dom.Document $r0;
        javax.xml.parsers.DocumentBuilder $r1;
        javax.xml.parsers.DocumentBuilderFactory $r2;
        com.oopsconsultancy.xmltask.ant.XmlTask $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r2 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r2.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        $r1 = virtualinvoke $r2.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r0 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        return $r0;
    }

    private org.w3c.dom.Document documentFromFile(java.lang.String) throws java.lang.Exception
    {
        org.w3c.dom.Document $r0;
        java.io.FileInputStream $r1;
        java.lang.String $r2;
        com.oopsconsultancy.xmltask.ant.XmlTask $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r2 := @parameter0: java.lang.String;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>($r2);

        $r0 = specialinvoke $r3.<com.oopsconsultancy.xmltask.ant.XmlTask: org.w3c.dom.Document documentFromStream(java.io.InputStream)>($r1);

        return $r0;
    }

    private org.w3c.dom.Document documentFromStr(java.lang.String) throws java.lang.Exception
    {
        java.io.InputStream r0;
        org.apache.tools.ant.filters.StringInputStream r1;
        org.w3c.dom.Document $r2;
        java.lang.String $r3;
        com.oopsconsultancy.xmltask.ant.XmlTask $r4;

        $r4 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r3 := @parameter0: java.lang.String;

        r1 = new org.apache.tools.ant.filters.StringInputStream;

        specialinvoke r1.<org.apache.tools.ant.filters.StringInputStream: void <init>(java.lang.String)>($r3);

        r0 = (java.io.InputStream) r1;

        $r2 = specialinvoke $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: org.w3c.dom.Document documentFromStream(java.io.InputStream)>(r0);

        return $r2;
    }

    private org.w3c.dom.Document documentFromStream(java.io.InputStream) throws java.lang.Exception
    {
        java.lang.Throwable r0, r20;
        org.xml.sax.EntityResolver r1;
        org.apache.tools.ant.BuildException r2, r18;
        java.net.ConnectException $r3;
        org.apache.tools.ant.types.XMLCatalog $r4;
        org.w3c.dom.Element $r5;
        java.lang.String $r6, $r17, $r19;
        org.w3c.dom.Document $r7;
        int $i0;
        com.oopsconsultancy.xmltask.ant.XmlTask$LocalEntityResolver $r8, $r16;
        javax.xml.parsers.DocumentBuilder $r9;
        boolean $z0;
        javax.xml.parsers.DocumentBuilderFactory $r10;
        org.xml.sax.InputSource r12;
        java.net.UnknownHostException $r13;
        java.io.InputStream $r14;
        com.oopsconsultancy.xmltask.ant.XmlTask $r15;

        $r15 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r14 := @parameter0: java.io.InputStream;

        $r10 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r10.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        $z0 = $r15.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean expandEntityReferences>;

        virtualinvoke $r10.<javax.xml.parsers.DocumentBuilderFactory: void setExpandEntityReferences(boolean)>($z0);

        $r9 = virtualinvoke $r10.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r8 = $r15.<com.oopsconsultancy.xmltask.ant.XmlTask: com.oopsconsultancy.xmltask.ant.XmlTask$LocalEntityResolver resolver>;

        $i0 = virtualinvoke $r8.<com.oopsconsultancy.xmltask.ant.XmlTask$LocalEntityResolver: int registeredEntities()>();

        if $i0 <= 0 goto label4;

        virtualinvoke $r15.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>("Using local entity references", 3);

        $r16 = $r15.<com.oopsconsultancy.xmltask.ant.XmlTask: com.oopsconsultancy.xmltask.ant.XmlTask$LocalEntityResolver resolver>;

        virtualinvoke $r9.<javax.xml.parsers.DocumentBuilder: void setEntityResolver(org.xml.sax.EntityResolver)>($r16);

     label1:
        r12 = new org.xml.sax.InputSource;

        specialinvoke r12.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>($r14);

     label2:
        $r7 = virtualinvoke $r9.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>(r12);

        $r6 = virtualinvoke r12.<org.xml.sax.InputSource: java.lang.String getEncoding()>();

        $r15.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String encoding> = $r6;

        $r5 = interfaceinvoke $r7.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        interfaceinvoke $r5.<org.w3c.dom.Element: void normalize()>();

     label3:
        return $r7;

     label4:
        virtualinvoke $r15.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>("Using predefined xml catalog", 3);

        $r4 = $r15.<com.oopsconsultancy.xmltask.ant.XmlTask: org.apache.tools.ant.types.XMLCatalog xmlCatalog>;

        r1 = (org.xml.sax.EntityResolver) $r4;

        virtualinvoke $r9.<javax.xml.parsers.DocumentBuilder: void setEntityResolver(org.xml.sax.EntityResolver)>(r1);

        goto label1;

     label5:
        $r13 := @caughtexception;

        specialinvoke $r15.<com.oopsconsultancy.xmltask.ant.XmlTask: void reportNetworkError()>();

        r2 = new org.apache.tools.ant.BuildException;

        $r17 = virtualinvoke $r13.<java.net.UnknownHostException: java.lang.String getMessage()>();

        specialinvoke r2.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r13);

        r0 = (java.lang.Throwable) r2;

        throw r0;

     label6:
        $r3 := @caughtexception;

        specialinvoke $r15.<com.oopsconsultancy.xmltask.ant.XmlTask: void reportNetworkError()>();

        r18 = new org.apache.tools.ant.BuildException;

        $r19 = virtualinvoke $r3.<java.net.ConnectException: java.lang.String getMessage()>();

        specialinvoke r18.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r3);

        r20 = (java.lang.Throwable) r18;

        throw r20;

        catch java.net.UnknownHostException from label2 to label3 with label5;
        catch java.net.ConnectException from label2 to label3 with label6;
    }

    private java.lang.String getPathPrefix()
    {
        boolean $z0;
        java.io.File $r0;
        org.apache.tools.ant.Project $r1;
        java.lang.StringBuilder $r2, $r8, $r9, $r11, $r13, $r15;
        java.lang.String $r3, $r4, $r6, $r7, $r10, $r12, $r14, $r16, $r17;
        com.oopsconsultancy.xmltask.ant.XmlTask $r5;

        $r5 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r3 = $r5.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dir>;

        if $r3 != null goto label1;

        $r1 = virtualinvoke $r5.<com.oopsconsultancy.xmltask.ant.XmlTask: org.apache.tools.ant.Project getProject()>();

        $r0 = virtualinvoke $r1.<org.apache.tools.ant.Project: java.io.File getBaseDir()>();

        $r6 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dir> = $r6;

        $r7 = $r5.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dir>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = <java.io.File: java.lang.String separator>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean endsWith(java.lang.String)>($r10);

        if $z0 != 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = $r5.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dir>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = <java.io.File: java.lang.String separator>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dir> = $r16;

     label1:
        $r17 = $r5.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dir>;

        return $r17;
    }

    private java.lang.String getVersion()
    {
        java.lang.Exception $r0;
        java.lang.String $r1;
        java.io.InputStream $r2;
        java.lang.ClassLoader $r3;
        java.lang.Class $r4;
        java.util.Properties $r5;
        com.oopsconsultancy.xmltask.ant.XmlTask $r6;

        $r6 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r5 = new java.util.Properties;

        specialinvoke $r5.<java.util.Properties: void <init>()>();

     label1:
        $r4 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = virtualinvoke $r3.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("xmltask.properties");

        virtualinvoke $r5.<java.util.Properties: void load(java.io.InputStream)>($r2);

     label2:
        $r1 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("com.oopsconsultancy.xmltask.version");

        if $r1 != null goto label4;

        return "[no version info]";

     label3:
        $r0 := @caughtexception;

        goto label2;

     label4:
        return $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.io.Writer getWriter(java.lang.String, javax.xml.transform.Transformer) throws java.io.IOException
    {
        java.io.FileWriter r0;
        java.io.OutputStreamWriter r1;
        java.io.FileOutputStream r2;
        java.lang.StringBuilder $r3, r4, $r10;
        javax.xml.transform.Transformer $r5;
        java.lang.String $r6, $r7, $r8;
        com.oopsconsultancy.xmltask.ant.XmlTask $r9;

        $r9 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r6 := @parameter0: java.lang.String;

        $r5 := @parameter1: javax.xml.transform.Transformer;

        $r7 = $r9.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String outputEncoding>;

        if $r7 != null goto label1;

        $r7 = $r9.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String encoding>;

     label1:
        if $r7 == null goto label2;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using output character encoding ");

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>($r8, 3);

        virtualinvoke $r5.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", $r7);

        r1 = new java.io.OutputStreamWriter;

        r2 = new java.io.FileOutputStream;

        specialinvoke r2.<java.io.FileOutputStream: void <init>(java.lang.String)>($r6);

        specialinvoke r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r2, $r7);

        return r1;

     label2:
        r0 = new java.io.FileWriter;

        specialinvoke r0.<java.io.FileWriter: void <init>(java.lang.String)>($r6);

        return r0;
    }

    private void processDoc(org.w3c.dom.Document, java.lang.String) throws org.apache.tools.ant.BuildException
    {
        java.lang.Throwable r0, r48, r64, r67;
        javax.xml.transform.sax.SAXResult r1, r102;
        javax.xml.transform.dom.DOMSource r2;
        javax.xml.transform.stream.StreamResult r3;
        com.oopsconsultancy.xmltask.output.Outputter $r4, $r101;
        java.lang.Class $r5;
        java.io.File $r6, r7;
        java.lang.Exception $r8, r9;
        java.io.PrintStream $r10;
        javax.xml.transform.Transformer $r11;
        javax.xml.transform.TransformerFactory $r12;
        org.w3c.dom.Element $r13, $r58, $r59;
        org.apache.tools.ant.BuildException r15, r42, $r63, r65;
        com.oopsconsultancy.xmltask.XmlReplace $r16;
        java.lang.Object $r17, $r100;
        java.util.List $r18, $r40;
        java.lang.StringBuilder $r19, r20, $r33, r35, $r36, $r38, r43, $r44, $r46, r72, $r74, $r76, $r77, r79, $r80, $r81, r84, $r85, $r87, r94, $r95, $r97;
        org.w3c.dom.DocumentType $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.io.Writer $r22;
        javax.xml.transform.Result $r23;
        com.oopsconsultancy.xmltask.XmlReplacement r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.io.IOException $r26;
        com.oopsconsultancy.xmltask.output.FormattedDataWriter r28;
        java.lang.String $r29, $r30, $r34, $r37, $r39, $r45, $r47, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r60, $r61, $r62, $r66, $r68, $r69, $r70, $r71, $r73, $r75, $r78, $r82, $r86, $r88, $r89, $r90, $r91, $r92, $r93, $r96, $r98, $r99;
        org.w3c.dom.Document $r31, $r41;
        com.oopsconsultancy.xmltask.ant.XmlTask $r32;

        $r32 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r31 := @parameter0: org.w3c.dom.Document;

        $r29 := @parameter1: java.lang.String;

     label01:
        $r21 = interfaceinvoke $r31.<org.w3c.dom.Document: org.w3c.dom.DocumentType getDoctype()>();

     label02:
        if $r21 == null goto label07;

        $z0 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean preservetype>;

     label03:
        if $z0 == 0 goto label07;

        r20 = new java.lang.StringBuilder;

     label04:
        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pub = ");

        $r30 = interfaceinvoke $r21.<org.w3c.dom.DocumentType: java.lang.String getPublicId()>();

        $r33 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>($r34, 3);

     label05:
        r35 = new java.lang.StringBuilder;

     label06:
        specialinvoke r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sys = ");

        $r37 = interfaceinvoke $r21.<org.w3c.dom.DocumentType: java.lang.String getSystemId()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>($r39, 3);

     label07:
        r25 = new com.oopsconsultancy.xmltask.XmlReplacement;

     label08:
        specialinvoke r25.<com.oopsconsultancy.xmltask.XmlReplacement: void <init>(org.w3c.dom.Document,org.apache.tools.ant.Task)>($r31, $r32);

     label09:
        $i0 = 0;

     label10:
        $r18 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List replacements>;

        $i1 = interfaceinvoke $r18.<java.util.List: int size()>();

     label11:
        if $i0 >= $i1 goto label15;

     label12:
        $r40 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List replacements>;

        $r17 = interfaceinvoke $r40.<java.util.List: java.lang.Object get(int)>($i0);

        $r16 = (com.oopsconsultancy.xmltask.XmlReplace) $r17;

        virtualinvoke r25.<com.oopsconsultancy.xmltask.XmlReplacement: void add(com.oopsconsultancy.xmltask.XmlReplace)>($r16);

     label13:
        $i0 = $i0 + 1;

     label14:
        goto label10;

     label15:
        $z1 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean reporting>;

        virtualinvoke r25.<com.oopsconsultancy.xmltask.XmlReplacement: void setReport(boolean)>($z1);

        $r41 = virtualinvoke r25.<com.oopsconsultancy.xmltask.XmlReplacement: org.w3c.dom.Document apply()>();

        $i2 = virtualinvoke r25.<com.oopsconsultancy.xmltask.XmlReplacement: int getFailures()>();

     label16:
        if $i2 <= 0 goto label22;

        $z2 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean failWithoutMatch>;

        if $z2 == 0 goto label22;

     label17:
        r15 = new org.apache.tools.ant.BuildException;

     label18:
        specialinvoke r15.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>("<xmltask> subtasks failed to find matches");

     label19:
        r0 = (java.lang.Throwable) r15;

     label20:
        throw r0;

     label21:
        $r26 := @caughtexception;

        virtualinvoke $r26.<java.io.IOException: void printStackTrace()>();

        r42 = new org.apache.tools.ant.BuildException;

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t create ");

        $r45 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest>;

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r42.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r47);

        r48 = (java.lang.Throwable) r42;

        throw r48;

     label22:
        $r49 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest>;

        if $r49 == null goto label95;

        $z3 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean tobuffer>;

        if $z3 == 0 goto label25;

        $r50 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest>;

     label23:
        $r13 = interfaceinvoke $r41.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        staticinvoke <com.oopsconsultancy.xmltask.BufferStore: void set(java.lang.String,org.w3c.dom.Node,boolean,org.apache.tools.ant.Task)>($r50, $r13, 0, $r32);

     label24:
        return;

     label25:
        $r12 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r11 = virtualinvoke $r12.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

     label26:
        $z4 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean omitHeader>;

     label27:
        if $z4 == 0 goto label56;

     label28:
        $r51 = "yes";

     label29:
        virtualinvoke $r11.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("omit-xml-declaration", $r51);

     label30:
        $z5 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean settingStandalone>;

        if $z5 == 0 goto label36;

     label31:
        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Setting standalone");

     label32:
        $z6 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean standalone>;

     label33:
        if $z6 == 0 goto label57;

     label34:
        $r52 = "yes";

     label35:
        virtualinvoke $r11.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("standalone", $r52);

     label36:
        $z7 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean settingVersion>;

        if $z7 == 0 goto label38;

     label37:
        $r53 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String xmlVersion>;

        virtualinvoke $r11.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("version", $r53);

     label38:
        $z8 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean preservetype>;

        if $z8 == 0 goto label61;

     label39:
        if $r21 == null goto label41;

        $r54 = interfaceinvoke $r21.<org.w3c.dom.DocumentType: java.lang.String getPublicId()>();

        if $r54 == null goto label40;

        $r55 = interfaceinvoke $r21.<org.w3c.dom.DocumentType: java.lang.String getPublicId()>();

        virtualinvoke $r11.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-public", $r55);

     label40:
        if $r21 == null goto label58;

        $r56 = interfaceinvoke $r21.<org.w3c.dom.DocumentType: java.lang.String getSystemId()>();

        if $r56 == null goto label58;

        $r57 = interfaceinvoke $r21.<org.w3c.dom.DocumentType: java.lang.String getSystemId()>();

        virtualinvoke $r11.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-system", $r57);

     label41:
        $z9 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean normalize>;

        if $z9 == 0 goto label43;

     label42:
        if $r41 == null goto label43;

        $r58 = interfaceinvoke $r41.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        if $r58 == null goto label43;

        virtualinvoke $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>("Normalizing resultant document", 3);

        $r59 = interfaceinvoke $r41.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        interfaceinvoke $r59.<org.w3c.dom.Element: void normalize()>();

     label43:
        $z10 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean indent>;

     label44:
        if $z10 == 0 goto label66;

        virtualinvoke $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>("Indenting resultant document", 3);

        virtualinvoke $r11.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");

     label45:
        $z11 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean todir>;

        if $z11 != 0 goto label68;

     label46:
        $r60 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest>;

        $r22 = specialinvoke $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.io.Writer getWriter(java.lang.String,javax.xml.transform.Transformer)>($r60, $r11);

     label47:
        $r61 = "default";

     label48:
        $r62 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String outputter>;

        $z12 = virtualinvoke $r61.<java.lang.String: boolean equals(java.lang.Object)>($r62);

     label49:
        if $z12 == 0 goto label79;

     label50:
        r3 = new javax.xml.transform.stream.StreamResult;

     label51:
        $r23 = r3;

        specialinvoke r3.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>($r22);

     label52:
        r2 = new javax.xml.transform.dom.DOMSource;

     label53:
        specialinvoke r2.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r41);

        virtualinvoke $r11.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>(r2, $r23);

        virtualinvoke $r22.<java.io.Writer: void close()>();

     label54:
        return;

     label55:
        $r63 := @caughtexception;

        r64 = (java.lang.Throwable) $r63;

        throw r64;

     label56:
        $r51 = "no";

        goto label29;

     label57:
        $r52 = "no";

        goto label35;

     label58:
        virtualinvoke $r11.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-system", "");

     label59:
        goto label41;

     label60:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

        r65 = new org.apache.tools.ant.BuildException;

        $r66 = virtualinvoke $r8.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke r65.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r66);

        r67 = (java.lang.Throwable) r65;

        throw r67;

     label61:
        $r68 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String doctype_public>;

        if $r68 == null goto label63;

        $r69 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String doctype_public>;

     label62:
        virtualinvoke $r11.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-public", $r69);

     label63:
        $r70 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String doctype_system>;

        if $r70 == null goto label41;

     label64:
        $r71 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String doctype_system>;

        virtualinvoke $r11.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-system", $r71);

     label65:
        goto label41;

     label66:
        virtualinvoke $r11.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "no");

     label67:
        goto label45;

     label68:
        r72 = new java.lang.StringBuilder;

     label69:
        specialinvoke r72.<java.lang.StringBuilder: void <init>()>();

        $r73 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest>;

        $r74 = virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r75 = <java.io.File: java.lang.String separator>;

        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

     label70:
        r79 = new java.lang.StringBuilder;

     label71:
        specialinvoke r79.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Writing ");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>($r82, 3);

     label72:
        r7 = new java.io.File;

     label73:
        specialinvoke r7.<java.io.File: void <init>(java.lang.String)>($r78);

        $r6 = virtualinvoke r7.<java.io.File: java.io.File getParentFile()>();

        $z13 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z13 != 0 goto label77;

        $z14 = virtualinvoke $r6.<java.io.File: boolean mkdirs()>();

        if $z14 != 0 goto label77;

     label74:
        r9 = new java.lang.Exception;

        r84 = new java.lang.StringBuilder;

     label75:
        specialinvoke r84.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to make destination directory ");

        $r86 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest>;

        $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.lang.Exception: void <init>(java.lang.String)>($r88);

     label76:
        throw r9;

     label77:
        $r22 = specialinvoke $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.io.Writer getWriter(java.lang.String,javax.xml.transform.Transformer)>($r78, $r11);

     label78:
        goto label47;

     label79:
        $r89 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String outputter>;

        $z15 = virtualinvoke $r89.<java.lang.String: boolean startsWith(java.lang.String)>("simple");

     label80:
        if $z15 == 0 goto label88;

        r28 = new com.oopsconsultancy.xmltask.output.FormattedDataWriter;

     label81:
        specialinvoke r28.<com.oopsconsultancy.xmltask.output.FormattedDataWriter: void <init>()>();

        virtualinvoke r28.<com.oopsconsultancy.xmltask.output.FormattedDataWriter: void setWriter(java.io.Writer)>($r22);

        virtualinvoke r28.<com.oopsconsultancy.xmltask.output.FormattedDataWriter: void setIndentStep(int)>(2);

        $r90 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String outputter>;

        $i3 = virtualinvoke $r90.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i3 == -1 goto label84;

     label82:
        $r91 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String outputter>;

     label83:
        $r92 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String outputter>;

        $i4 = virtualinvoke $r92.<java.lang.String: int indexOf(java.lang.String)>(":");

        $i5 = $i4 + 1;

        $r93 = virtualinvoke $r91.<java.lang.String: java.lang.String substring(int)>($i5);

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r93);

        virtualinvoke r28.<com.oopsconsultancy.xmltask.output.FormattedDataWriter: void setIndentStep(int)>($i6);

     label84:
        virtualinvoke r28.<com.oopsconsultancy.xmltask.output.FormattedDataWriter: void setTransformer(javax.xml.transform.Transformer)>($r11);

     label85:
        r1 = new javax.xml.transform.sax.SAXResult;

     label86:
        $r23 = r1;

        specialinvoke r1.<javax.xml.transform.sax.SAXResult: void <init>(org.xml.sax.ContentHandler)>(r28);

     label87:
        goto label52;

     label88:
        r94 = new java.lang.StringBuilder;

     label89:
        specialinvoke r94.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading custom result writer ");

        $r96 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String outputter>;

        $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>($r98, 3);

        $r99 = $r32.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String outputter>;

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r99);

        $r100 = virtualinvoke $r5.<java.lang.Class: java.lang.Object newInstance()>();

     label90:
        $r4 = (com.oopsconsultancy.xmltask.output.Outputter) $r100;

     label91:
        $r101 = (com.oopsconsultancy.xmltask.output.Outputter) $r4;

        interfaceinvoke $r101.<com.oopsconsultancy.xmltask.output.Outputter: void setWriter(java.io.Writer)>($r22);

        interfaceinvoke $r101.<com.oopsconsultancy.xmltask.output.Outputter: void setTransformer(javax.xml.transform.Transformer)>($r11);

     label92:
        r102 = new javax.xml.transform.sax.SAXResult;

     label93:
        $r23 = r102;

        specialinvoke r102.<javax.xml.transform.sax.SAXResult: void <init>(org.xml.sax.ContentHandler)>($r101);

     label94:
        goto label52;

     label95:
        return;

        catch java.io.IOException from label01 to label02 with label21;
        catch java.io.IOException from label04 to label05 with label21;
        catch java.io.IOException from label06 to label07 with label21;
        catch java.io.IOException from label08 to label09 with label21;
        catch java.io.IOException from label10 to label11 with label21;
        catch java.io.IOException from label12 to label13 with label21;
        catch java.io.IOException from label15 to label16 with label21;
        catch java.io.IOException from label18 to label19 with label21;
        catch java.io.IOException from label20 to label21 with label21;
        catch org.apache.tools.ant.BuildException from label01 to label02 with label55;
        catch org.apache.tools.ant.BuildException from label04 to label05 with label55;
        catch org.apache.tools.ant.BuildException from label06 to label07 with label55;
        catch org.apache.tools.ant.BuildException from label08 to label09 with label55;
        catch org.apache.tools.ant.BuildException from label10 to label11 with label55;
        catch org.apache.tools.ant.BuildException from label12 to label13 with label55;
        catch org.apache.tools.ant.BuildException from label15 to label16 with label55;
        catch org.apache.tools.ant.BuildException from label18 to label19 with label55;
        catch org.apache.tools.ant.BuildException from label20 to label21 with label55;
        catch java.lang.Exception from label01 to label03 with label60;
        catch java.lang.Exception from label04 to label05 with label60;
        catch java.lang.Exception from label06 to label07 with label60;
        catch java.lang.Exception from label08 to label13 with label60;
        catch java.lang.Exception from label14 to label17 with label60;
        catch java.lang.Exception from label18 to label21 with label60;
        catch java.io.IOException from label23 to label24 with label21;
        catch java.io.IOException from label25 to label26 with label21;
        catch java.io.IOException from label28 to label30 with label21;
        catch java.io.IOException from label31 to label32 with label21;
        catch java.io.IOException from label34 to label36 with label21;
        catch java.io.IOException from label37 to label38 with label21;
        catch java.io.IOException from label39 to label41 with label21;
        catch java.io.IOException from label42 to label43 with label21;
        catch java.io.IOException from label44 to label45 with label21;
        catch java.io.IOException from label46 to label47 with label21;
        catch java.io.IOException from label48 to label49 with label21;
        catch java.io.IOException from label51 to label52 with label21;
        catch java.io.IOException from label53 to label54 with label21;
        catch org.apache.tools.ant.BuildException from label23 to label24 with label55;
        catch org.apache.tools.ant.BuildException from label25 to label26 with label55;
        catch org.apache.tools.ant.BuildException from label28 to label30 with label55;
        catch org.apache.tools.ant.BuildException from label31 to label32 with label55;
        catch org.apache.tools.ant.BuildException from label34 to label36 with label55;
        catch org.apache.tools.ant.BuildException from label37 to label38 with label55;
        catch org.apache.tools.ant.BuildException from label39 to label41 with label55;
        catch org.apache.tools.ant.BuildException from label42 to label43 with label55;
        catch org.apache.tools.ant.BuildException from label44 to label45 with label55;
        catch org.apache.tools.ant.BuildException from label46 to label47 with label55;
        catch org.apache.tools.ant.BuildException from label48 to label49 with label55;
        catch org.apache.tools.ant.BuildException from label51 to label52 with label55;
        catch org.apache.tools.ant.BuildException from label53 to label54 with label55;
        catch java.lang.Exception from label22 to label24 with label60;
        catch java.lang.Exception from label25 to label27 with label60;
        catch java.lang.Exception from label28 to label33 with label60;
        catch java.lang.Exception from label34 to label47 with label60;
        catch java.lang.Exception from label47 to label50 with label60;
        catch java.lang.Exception from label51 to label52 with label60;
        catch java.lang.Exception from label53 to label54 with label60;
        catch java.io.IOException from label58 to label59 with label21;
        catch org.apache.tools.ant.BuildException from label58 to label59 with label55;
        catch java.lang.Exception from label58 to label59 with label60;
        catch java.io.IOException from label62 to label63 with label21;
        catch java.io.IOException from label64 to label65 with label21;
        catch java.io.IOException from label66 to label67 with label21;
        catch java.io.IOException from label69 to label70 with label21;
        catch java.io.IOException from label71 to label72 with label21;
        catch java.io.IOException from label73 to label74 with label21;
        catch java.io.IOException from label75 to label78 with label21;
        catch java.io.IOException from label79 to label80 with label21;
        catch java.io.IOException from label81 to label82 with label21;
        catch java.io.IOException from label83 to label85 with label21;
        catch java.io.IOException from label86 to label87 with label21;
        catch java.io.IOException from label89 to label90 with label21;
        catch java.io.IOException from label91 to label92 with label21;
        catch java.io.IOException from label93 to label94 with label21;
        catch org.apache.tools.ant.BuildException from label62 to label63 with label55;
        catch org.apache.tools.ant.BuildException from label64 to label65 with label55;
        catch org.apache.tools.ant.BuildException from label66 to label67 with label55;
        catch org.apache.tools.ant.BuildException from label69 to label70 with label55;
        catch org.apache.tools.ant.BuildException from label71 to label72 with label55;
        catch org.apache.tools.ant.BuildException from label73 to label74 with label55;
        catch org.apache.tools.ant.BuildException from label75 to label76 with label55;
        catch org.apache.tools.ant.BuildException from label77 to label78 with label55;
        catch org.apache.tools.ant.BuildException from label79 to label80 with label55;
        catch org.apache.tools.ant.BuildException from label81 to label82 with label55;
        catch org.apache.tools.ant.BuildException from label83 to label85 with label55;
        catch org.apache.tools.ant.BuildException from label86 to label87 with label55;
        catch org.apache.tools.ant.BuildException from label89 to label90 with label55;
        catch org.apache.tools.ant.BuildException from label91 to label92 with label55;
        catch org.apache.tools.ant.BuildException from label93 to label94 with label55;
        catch java.lang.Exception from label61 to label68 with label60;
        catch java.lang.Exception from label69 to label70 with label60;
        catch java.lang.Exception from label71 to label72 with label60;
        catch java.lang.Exception from label73 to label74 with label60;
        catch java.lang.Exception from label75 to label78 with label60;
        catch java.lang.Exception from label79 to label80 with label60;
        catch java.lang.Exception from label81 to label85 with label60;
        catch java.lang.Exception from label86 to label87 with label60;
        catch java.lang.Exception from label89 to label92 with label60;
        catch java.lang.Exception from label93 to label94 with label60;
    }

    private void reportNetworkError()
    {
        com.oopsconsultancy.xmltask.ant.XmlTask $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>("It looks like you\'ve got a network error. The probable cause", 0);

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>("is that you\'re trying to resolve a DTD on the internet although", 0);

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>("you don\'t know it! Check your XML for DTDs external to your network", 0);

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>("and read the Ant documentation for <xmlcatalog>. XMLTask will support", 0);

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>("usage of <xmlcatalog>. See the following:", 0);

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>("http://ant.apache.org/manual/CoreTypes/xmlcatalog.html", 0);

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>("http://www.oopsconsultancy.com/software/xmltask", 0);

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>("If this isn\'t the problem, then please report this error to the support", 0);

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>("mailing list. Thanks!", 0);

        return;
    }

    public void add(com.oopsconsultancy.xmltask.XmlReplace)
    {
        java.util.List $r0;
        com.oopsconsultancy.xmltask.XmlReplace $r1;
        com.oopsconsultancy.xmltask.ant.XmlTask $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r1 := @parameter0: com.oopsconsultancy.xmltask.XmlReplace;

        virtualinvoke $r1.<com.oopsconsultancy.xmltask.XmlReplace: void setTask(org.apache.tools.ant.Task)>($r2);

        $r0 = $r2.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List replacements>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addConfiguredAttr(com.oopsconsultancy.xmltask.ant.Attr)
    {
        com.oopsconsultancy.xmltask.ant.Attr $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: com.oopsconsultancy.xmltask.ant.Attr;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.Attr: void process(com.oopsconsultancy.xmltask.ant.XmlTask)>($r1);

        return;
    }

    public void addConfiguredCall(com.oopsconsultancy.xmltask.ant.Call)
    {
        com.oopsconsultancy.xmltask.ant.Call $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: com.oopsconsultancy.xmltask.ant.Call;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.Call: void process(com.oopsconsultancy.xmltask.ant.XmlTask)>($r1);

        return;
    }

    public void addConfiguredCopy(com.oopsconsultancy.xmltask.ant.Copy)
    {
        com.oopsconsultancy.xmltask.ant.Copy $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: com.oopsconsultancy.xmltask.ant.Copy;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.Copy: void process(com.oopsconsultancy.xmltask.ant.XmlTask)>($r1);

        return;
    }

    public void addConfiguredCut(com.oopsconsultancy.xmltask.ant.Cut)
    {
        com.oopsconsultancy.xmltask.ant.Cut $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: com.oopsconsultancy.xmltask.ant.Cut;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.Cut: void process(com.oopsconsultancy.xmltask.ant.XmlTask)>($r1);

        return;
    }

    public void addConfiguredInsert(com.oopsconsultancy.xmltask.ant.Insert)
    {
        com.oopsconsultancy.xmltask.ant.Insert $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: com.oopsconsultancy.xmltask.ant.Insert;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.Insert: void process(com.oopsconsultancy.xmltask.ant.XmlTask)>($r1);

        return;
    }

    public void addConfiguredPaste(com.oopsconsultancy.xmltask.ant.Paste)
    {
        com.oopsconsultancy.xmltask.ant.Paste $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: com.oopsconsultancy.xmltask.ant.Paste;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.Paste: void process(com.oopsconsultancy.xmltask.ant.XmlTask)>($r1);

        return;
    }

    public void addConfiguredPrint(com.oopsconsultancy.xmltask.ant.Print)
    {
        com.oopsconsultancy.xmltask.ant.Print $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: com.oopsconsultancy.xmltask.ant.Print;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.Print: void process(com.oopsconsultancy.xmltask.ant.XmlTask)>($r1);

        return;
    }

    public void addConfiguredRegexp(com.oopsconsultancy.xmltask.ant.Regexp)
    {
        com.oopsconsultancy.xmltask.ant.Regexp $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: com.oopsconsultancy.xmltask.ant.Regexp;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.Regexp: void process(com.oopsconsultancy.xmltask.ant.XmlTask)>($r1);

        return;
    }

    public void addConfiguredRemove(com.oopsconsultancy.xmltask.ant.Remove)
    {
        com.oopsconsultancy.xmltask.ant.Remove $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: com.oopsconsultancy.xmltask.ant.Remove;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.Remove: void process(com.oopsconsultancy.xmltask.ant.XmlTask)>($r1);

        return;
    }

    public void addConfiguredRename(com.oopsconsultancy.xmltask.ant.Rename)
    {
        com.oopsconsultancy.xmltask.ant.Rename $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: com.oopsconsultancy.xmltask.ant.Rename;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.Rename: void process(com.oopsconsultancy.xmltask.ant.XmlTask)>($r1);

        return;
    }

    public void addConfiguredReplace(com.oopsconsultancy.xmltask.ant.Replace)
    {
        com.oopsconsultancy.xmltask.ant.Replace $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: com.oopsconsultancy.xmltask.ant.Replace;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.Replace: void process(com.oopsconsultancy.xmltask.ant.XmlTask)>($r1);

        return;
    }

    public void addConfiguredUncomment(com.oopsconsultancy.xmltask.ant.Uncomment)
    {
        com.oopsconsultancy.xmltask.ant.Uncomment $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: com.oopsconsultancy.xmltask.ant.Uncomment;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.Uncomment: void process(com.oopsconsultancy.xmltask.ant.XmlTask)>($r1);

        return;
    }

    public void addConfiguredXMLCatalog(org.apache.tools.ant.types.XMLCatalog)
    {
        org.apache.tools.ant.types.XMLCatalog $r0, $r1;
        com.oopsconsultancy.xmltask.ant.XmlTask $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: org.apache.tools.ant.types.XMLCatalog;

        $r1 = $r2.<com.oopsconsultancy.xmltask.ant.XmlTask: org.apache.tools.ant.types.XMLCatalog xmlCatalog>;

        virtualinvoke $r1.<org.apache.tools.ant.types.XMLCatalog: void addConfiguredXMLCatalog(org.apache.tools.ant.types.XMLCatalog)>($r0);

        return;
    }

    public void addFileset(org.apache.tools.ant.types.FileSet)
    {
        java.util.List $r0;
        org.apache.tools.ant.types.FileSet $r1;
        com.oopsconsultancy.xmltask.ant.XmlTask $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r1 := @parameter0: org.apache.tools.ant.types.FileSet;

        $r0 = $r2.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List filesets>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public com.oopsconsultancy.xmltask.ant.Entity createEntity()
    {
        com.oopsconsultancy.xmltask.ant.Entity $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 = new com.oopsconsultancy.xmltask.ant.Entity;

        specialinvoke $r0.<com.oopsconsultancy.xmltask.ant.Entity: void <init>(com.oopsconsultancy.xmltask.ant.XmlTask)>($r1);

        return $r0;
    }

    public void execute() throws org.apache.tools.ant.BuildException
    {
        java.lang.Throwable r0, r38, r50, r53, r83, r85;
        org.apache.tools.ant.BuildException r1, r37, r43, r52, r81, r84;
        com.oopsconsultancy.xmltask.ant.XmlTask$InputSpec $r2;
        com.oopsconsultancy.xmltask.ant.XmlTask$InputFile $r3, r4;
        java.lang.String[] $r5, $r62, $r63;
        org.apache.tools.ant.DirectoryScanner $r6;
        org.apache.tools.ant.Project $r7, $r26;
        org.apache.tools.ant.types.FileSet $r8;
        java.lang.Object $r9, $r67;
        java.util.Iterator $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.List $r11, $r24, $r25, $r28, $r36, $r39, $r40, $r41, $r46, $r65, $r66, $r86;
        java.lang.StringBuilder $r12, $r13, r14, $r22, $r29, $r30, $r32, $r33, $r44, $r45, $r47, $r48, $r56, $r58, $r60, $r68, $r69, $r71, $r74, $r78, $r80;
        java.io.File $r15, r16;
        java.lang.Exception $r17;
        org.w3c.dom.Document $r18;
        java.lang.String $r19, $r20, $r23, $r27, $r31, $r34, $r35, $r42, $r49, $r51, $r54, $r55, $r57, $r59, $r61, $r64, $r70, $r72, $r73, $r75, $r76, $r77, $r79, $r82;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        com.oopsconsultancy.xmltask.ant.XmlTask $r21;

        $r21 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Executing xmltask ");

        $r19 = specialinvoke $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String getVersion()>();

        $r22 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>($r23, 3);

        $r11 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List filesets>;

        $z0 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label06;

        $r24 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs>;

        $i1 = interfaceinvoke $r24.<java.util.List: int size()>();

        if $i1 <= 0 goto label01;

        r1 = new org.apache.tools.ant.BuildException;

        specialinvoke r1.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>("Can\'t use filesets together with source inputs");

        r0 = (java.lang.Throwable) r1;

        throw r0;

     label01:
        $r25 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List filesets>;

        $r10 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();

        $i0 = 0;

     label02:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r9 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.tools.ant.types.FileSet) $r9;

        $r7 = virtualinvoke $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: org.apache.tools.ant.Project getProject()>();

        $r6 = virtualinvoke $r8.<org.apache.tools.ant.types.FileSet: org.apache.tools.ant.DirectoryScanner getDirectoryScanner(org.apache.tools.ant.Project)>($r7);

        $r26 = virtualinvoke $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: org.apache.tools.ant.Project getProject()>();

        $r15 = virtualinvoke $r8.<org.apache.tools.ant.types.FileSet: java.io.File getDir(org.apache.tools.ant.Project)>($r26);

        $r5 = virtualinvoke $r6.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] getIncludedFiles()>();

        $i3 = 0;

     label03:
        $i2 = lengthof $r5;

        if $i3 >= $i2 goto label04;

        $r27 = $r5[$i3];

        $r28 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs>;

        r4 = new com.oopsconsultancy.xmltask.ant.XmlTask$InputFile;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r15.<java.io.File: java.lang.String getAbsolutePath()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r31 = <java.io.File: java.lang.String separator>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35 = virtualinvoke $r15.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke r4.<com.oopsconsultancy.xmltask.ant.XmlTask$InputFile: void <init>(com.oopsconsultancy.xmltask.ant.XmlTask,java.lang.String,java.lang.String)>($r21, $r34, $r35);

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>(r4);

        $i3 = $i3 + 1;

        goto label03;

     label04:
        $i4 = lengthof $r5;

        $i0 = $i0 + $i4;

        goto label02;

     label05:
        if $i0 != 0 goto label06;

        return;

     label06:
        $r36 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs>;

        $i5 = interfaceinvoke $r36.<java.util.List: int size()>();

        if $i5 != 0 goto label07;

        $z2 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean todir>;

        if $z2 == 0 goto label07;

        r37 = new org.apache.tools.ant.BuildException;

        specialinvoke r37.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>("No input documents");

        r38 = (java.lang.Throwable) r37;

        throw r38;

     label07:
        $r39 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs>;

        $i6 = interfaceinvoke $r39.<java.util.List: int size()>();

        if $i6 != 0 goto label08;

        $r40 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>(null);

     label08:
        $r41 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs>;

        $i7 = interfaceinvoke $r41.<java.util.List: int size()>();

        if $i7 <= 1 goto label09;

        $z3 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean todir>;

        if $z3 != 0 goto label09;

        $r42 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest>;

        if $r42 == null goto label09;

        r43 = new org.apache.tools.ant.BuildException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple inputs (");

        $r46 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs>;

        $i8 = interfaceinvoke $r46.<java.util.List: int size()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") but only one output file");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r43.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r49);

        r50 = (java.lang.Throwable) r43;

        throw r50;

     label09:
        $r51 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest>;

        if $r51 != null goto label10;

        $z4 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean todir>;

        if $z4 == 0 goto label10;

        r52 = new org.apache.tools.ant.BuildException;

        specialinvoke r52.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>("No output directory");

        r53 = (java.lang.Throwable) r52;

        throw r53;

     label10:
        $r54 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest>;

        if $r54 == null goto label11;

        $z5 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean tobuffer>;

        if $z5 != 0 goto label11;

        r16 = new java.io.File;

        $r55 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest>;

        specialinvoke r16.<java.io.File: void <init>(java.lang.String)>($r55);

        $z6 = virtualinvoke r16.<java.io.File: boolean isAbsolute()>();

        if $z6 != 0 goto label11;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = specialinvoke $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String getPathPrefix()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest>;

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest> = $r61;

     label11:
        $i9 = 0;

     label12:
        $r62 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String[] buffers>;

        $i10 = lengthof $r62;

        if $i9 >= $i10 goto label13;

        $r63 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String[] buffers>;

        $r64 = $r63[$i9];

        staticinvoke <com.oopsconsultancy.xmltask.BufferStore: void clear(java.lang.String,org.apache.tools.ant.Task)>($r64, $r21);

        $i9 = $i9 + 1;

        goto label12;

     label13:
        $i11 = 0;

     label14:
        $r65 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs>;

        $i12 = interfaceinvoke $r65.<java.util.List: int size()>();

        if $i11 >= $i12 goto label28;

        $r66 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs>;

        $r67 = interfaceinvoke $r66.<java.util.List: java.lang.Object get(int)>($i11);

        $r2 = (com.oopsconsultancy.xmltask.ant.XmlTask$InputSpec) $r67;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ");

        if $r2 != null goto label21;

        $r70 = "";

     label15:
        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r72 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest>;

        if $r72 != null goto label22;

        $r73 = " [no output document]";

     label16:
        $r74 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>($r75, 3);

        $z7 = $r2 instanceof com.oopsconsultancy.xmltask.ant.XmlTask$InputSpec;

        if $z7 == 0 goto label23;

     label17:
        $r18 = virtualinvoke $r2.<com.oopsconsultancy.xmltask.ant.XmlTask$InputSpec: org.w3c.dom.Document getDocument()>();

     label18:
        if $r2 == null goto label26;

        $r76 = virtualinvoke $r2.<com.oopsconsultancy.xmltask.ant.XmlTask$InputSpec: java.lang.String getName()>();

     label19:
        $z8 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean todir>;

        if $z8 == 0 goto label20;

        $z9 = $r2 instanceof com.oopsconsultancy.xmltask.ant.XmlTask$InputFile;

        if $z9 == 0 goto label27;

        $r3 = (com.oopsconsultancy.xmltask.ant.XmlTask$InputFile) $r2;

        $r77 = virtualinvoke $r3.<com.oopsconsultancy.xmltask.ant.XmlTask$InputFile: java.lang.String getBase()>();

        $i13 = virtualinvoke $r77.<java.lang.String: int length()>();

        $r76 = virtualinvoke $r76.<java.lang.String: java.lang.String substring(int)>($i13);

     label20:
        specialinvoke $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: void processDoc(org.w3c.dom.Document,java.lang.String)>($r18, $r76);

        $i11 = $i11 + 1;

        goto label14;

     label21:
        $r70 = virtualinvoke $r2.<com.oopsconsultancy.xmltask.ant.XmlTask$InputSpec: java.lang.String getName()>();

        goto label15;

     label22:
        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" into ");

        $r79 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest>;

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r73 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label16;

     label23:
        $r18 = specialinvoke $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: org.w3c.dom.Document createDocument()>();

     label24:
        goto label18;

     label25:
        $r17 := @caughtexception;

        virtualinvoke $r17.<java.lang.Exception: void printStackTrace()>();

        r81 = new org.apache.tools.ant.BuildException;

        $r82 = virtualinvoke $r17.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke r81.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r82);

        r83 = (java.lang.Throwable) r81;

        throw r83;

     label26:
        $r76 = null;

        goto label19;

     label27:
        r84 = new org.apache.tools.ant.BuildException;

        specialinvoke r84.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>("Can\'t write to a directory with a non-file input");

        r85 = (java.lang.Throwable) r84;

        throw r85;

     label28:
        $r86 = $r21.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs>;

        interfaceinvoke $r86.<java.util.List: void clear()>();

        return;

        catch java.lang.Exception from label17 to label18 with label25;
        catch java.lang.Exception from label23 to label24 with label25;
    }

    protected org.xml.sax.EntityResolver getEntityResolver()
    {
        org.xml.sax.EntityResolver r0;
        org.apache.tools.ant.types.XMLCatalog r1;
        com.oopsconsultancy.xmltask.ant.XmlTask $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        r1 = $r2.<com.oopsconsultancy.xmltask.ant.XmlTask: org.apache.tools.ant.types.XMLCatalog xmlCatalog>;

        r0 = (org.xml.sax.EntityResolver) r1;

        return r0;
    }

    public void init() throws org.apache.tools.ant.BuildException
    {
        org.apache.tools.ant.Project $r0;
        org.apache.tools.ant.types.XMLCatalog $r1;
        com.oopsconsultancy.xmltask.ant.XmlTask $r2;

        $r2 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        specialinvoke $r2.<org.apache.tools.ant.Task: void init()>();

        $r1 = $r2.<com.oopsconsultancy.xmltask.ant.XmlTask: org.apache.tools.ant.types.XMLCatalog xmlCatalog>;

        $r0 = virtualinvoke $r2.<com.oopsconsultancy.xmltask.ant.XmlTask: org.apache.tools.ant.Project getProject()>();

        virtualinvoke $r1.<org.apache.tools.ant.types.XMLCatalog: void setProject(org.apache.tools.ant.Project)>($r0);

        return;
    }

    public boolean isFailWithoutMatch()
    {
        boolean z0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        z0 = $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean failWithoutMatch>;

        return z0;
    }

    public void registerEntity(java.lang.String, java.lang.String)
    {
        com.oopsconsultancy.xmltask.ant.XmlTask$LocalEntityResolver $r0;
        java.lang.String $r1, $r2;
        com.oopsconsultancy.xmltask.ant.XmlTask $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r0 = $r3.<com.oopsconsultancy.xmltask.ant.XmlTask: com.oopsconsultancy.xmltask.ant.XmlTask$LocalEntityResolver resolver>;

        virtualinvoke $r0.<com.oopsconsultancy.xmltask.ant.XmlTask$LocalEntityResolver: void registerEntity(com.oopsconsultancy.xmltask.ant.XmlTask,java.lang.String,java.lang.String)>($r3, $r1, $r2);

        return;
    }

    public void setClearBuffers(java.lang.String)
    {
        java.lang.Object[] $r0;
        java.lang.String[] $r1, $r7, $r8;
        boolean $z0;
        java.util.StringTokenizer $r2;
        java.util.ArrayList $r3;
        java.lang.String $r4, $r6;
        com.oopsconsultancy.xmltask.ant.XmlTask $r5;

        $r5 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r4 := @parameter0: java.lang.String;

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r4, ",");

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r1 = newarray (java.lang.String)[0];

        $r0 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r7 = (java.lang.String[]) $r0;

        $r8 = (java.lang.String[]) $r7;

        $r5.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String[] buffers> = $r8;

        return;
    }

    public void setDest(java.lang.String)
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest> = $r0;

        $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean todir> = 0;

        $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean tobuffer> = 0;

        return;
    }

    public void setDestBuffer(java.lang.String)
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest> = $r0;

        $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean todir> = 0;

        $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean tobuffer> = 1;

        return;
    }

    public void setEncoding(java.lang.String)
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String outputEncoding> = $r0;

        return;
    }

    public void setExpandEntityReferences(boolean)
    {
        boolean $z0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $z0 := @parameter0: boolean;

        $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean expandEntityReferences> = $z0;

        return;
    }

    public void setFailWithoutMatch(boolean)
    {
        boolean $z0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $z0 := @parameter0: boolean;

        $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean failWithoutMatch> = $z0;

        return;
    }

    public void setIndent(boolean)
    {
        boolean $z0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $z0 := @parameter0: boolean;

        $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean indent> = $z0;

        return;
    }

    public void setNormalize(boolean)
    {
        boolean $z0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $z0 := @parameter0: boolean;

        $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean normalize> = $z0;

        return;
    }

    public void setOmitHeader(boolean)
    {
        boolean $z0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $z0 := @parameter0: boolean;

        $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean omitHeader> = $z0;

        return;
    }

    public void setOutputter(java.lang.String)
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String outputter> = $r0;

        return;
    }

    public void setPreserveType(boolean)
    {
        boolean $z0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $z0 := @parameter0: boolean;

        $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean preservetype> = $z0;

        return;
    }

    public void setPublic(java.lang.String)
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String doctype_public> = $r0;

        return;
    }

    public void setReport(boolean)
    {
        boolean $z0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $z0 := @parameter0: boolean;

        $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean reporting> = $z0;

        return;
    }

    public void setSource(java.lang.String) throws java.lang.Exception
    {
        java.util.ArrayList $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask$InputFile $r1, $r40, $r47;
        java.util.List $r2, $r39, $r46;
        java.lang.StringBuilder $r3, $r14, $r15, $r16, $r17, $r20, $r21, $r23, $r26, $r28, $r29, $r30, $r34, $r36, $r37, $r42, $r43, $r44;
        java.lang.String[] $r4, $r13, $r19, $r24;
        boolean $z0, $z1;
        java.io.File $r5, $r32;
        org.apache.tools.ant.DirectoryScanner $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r7, $r8, $r9, $r11, $r12, $r18, $r22, $r25, $r27, $r31, $r33, $r35, $r38, $r41, $r45;
        com.oopsconsultancy.xmltask.ant.XmlTask $r10;

        $r10 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r7 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r7.<java.lang.String: int indexOf(java.lang.String)>("*");

        if $i0 == -1 goto label4;

        virtualinvoke $r10.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>("Wildcarded source now deprecated in favour of <fileset> usage", 1);

        $r6 = new org.apache.tools.ant.DirectoryScanner;

        specialinvoke $r6.<org.apache.tools.ant.DirectoryScanner: void <init>()>();

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r7);

        $z0 = virtualinvoke $r5.<java.io.File: boolean isAbsolute()>();

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke $r7.<java.lang.String: int indexOf(java.lang.String)>("*");

        $r8 = <java.io.File: java.lang.String separator>;

        $i1 = virtualinvoke $r7.<java.lang.String: int lastIndexOf(java.lang.String,int)>($r8, $i2);

        $r11 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r9 = <java.io.File: java.lang.String separator>;

        $i3 = virtualinvoke $r7.<java.lang.String: int lastIndexOf(java.lang.String,int)>($r9, $i2);

        $i4 = $i3 + 1;

        $r12 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i4);

        $r7 = $r12;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = $r12;

        virtualinvoke $r6.<org.apache.tools.ant.DirectoryScanner: void setIncludes(java.lang.String[])>($r4);

     label1:
        $r13 = newarray (java.lang.String)[1];

        $r13[0] = $r7;

        virtualinvoke $r6.<org.apache.tools.ant.DirectoryScanner: void setIncludes(java.lang.String[])>($r13);

        virtualinvoke $r6.<org.apache.tools.ant.DirectoryScanner: void setBasedir(java.lang.String)>($r11);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scanning for ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>($r18, 3);

        virtualinvoke $r6.<org.apache.tools.ant.DirectoryScanner: void scan()>();

        $i5 = 0;

     label2:
        $r19 = virtualinvoke $r6.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] getIncludedFiles()>();

        $i6 = lengthof $r19;

        if $i5 >= $i6 goto label7;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r22 = <java.io.File: java.lang.String separator>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r6.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] getIncludedFiles()>();

        $r25 = $r24[$i5];

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>($r31, 3);

        $r2 = $r10.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs>;

        $r1 = new com.oopsconsultancy.xmltask.ant.XmlTask$InputFile;

        specialinvoke $r1.<com.oopsconsultancy.xmltask.ant.XmlTask$InputFile: void <init>(com.oopsconsultancy.xmltask.ant.XmlTask,java.lang.String,java.lang.String)>($r10, $r27, $r11);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $i5 = $i5 + 1;

        goto label2;

     label3:
        $r11 = specialinvoke $r10.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String getPathPrefix()>();

        goto label1;

     label4:
        $r32 = new java.io.File;

        specialinvoke $r32.<java.io.File: void <init>(java.lang.String)>($r7);

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r10.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs> = $r0;

        $r33 = $r7;

        $z1 = virtualinvoke $r32.<java.io.File: boolean isAbsolute()>();

        if $z1 != 0 goto label6;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = specialinvoke $r10.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String getPathPrefix()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = $r38;

        $r39 = $r10.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs>;

        $r40 = new com.oopsconsultancy.xmltask.ant.XmlTask$InputFile;

        $r41 = specialinvoke $r10.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String getPathPrefix()>();

        specialinvoke $r40.<com.oopsconsultancy.xmltask.ant.XmlTask$InputFile: void <init>(com.oopsconsultancy.xmltask.ant.XmlTask,java.lang.String,java.lang.String)>($r10, $r38, $r41);

        interfaceinvoke $r39.<java.util.List: boolean add(java.lang.Object)>($r40);

     label5:
        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>($r45, 3);

        return;

     label6:
        $r46 = $r10.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs>;

        $r47 = new com.oopsconsultancy.xmltask.ant.XmlTask$InputFile;

        specialinvoke $r47.<com.oopsconsultancy.xmltask.ant.XmlTask$InputFile: void <init>(com.oopsconsultancy.xmltask.ant.XmlTask,java.lang.String)>($r10, $r7);

        interfaceinvoke $r46.<java.util.List: boolean add(java.lang.Object)>($r47);

        goto label5;

     label7:
        return;
    }

    public void setSourceBuffer(java.lang.String) throws java.lang.Exception
    {
        com.oopsconsultancy.xmltask.ant.XmlTask$InputBuffer $r0;
        java.util.List $r1;
        java.lang.String $r2;
        com.oopsconsultancy.xmltask.ant.XmlTask $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r2 := @parameter0: java.lang.String;

        $r1 = $r3.<com.oopsconsultancy.xmltask.ant.XmlTask: java.util.List docs>;

        $r0 = new com.oopsconsultancy.xmltask.ant.XmlTask$InputBuffer;

        specialinvoke $r0.<com.oopsconsultancy.xmltask.ant.XmlTask$InputBuffer: void <init>(com.oopsconsultancy.xmltask.ant.XmlTask,java.lang.String)>($r3, $r2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void setStandAlone(boolean)
    {
        boolean $z0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $z0 := @parameter0: boolean;

        $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean standalone> = $z0;

        $r0.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean settingStandalone> = 1;

        return;
    }

    public void setSystem(java.lang.String)
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String doctype_system> = $r0;

        return;
    }

    public void setTodir(java.lang.String)
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String dest> = $r0;

        $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean todir> = 1;

        $r1.<com.oopsconsultancy.xmltask.ant.XmlTask: boolean tobuffer> = 0;

        return;
    }

    public static void <clinit>()
    {
        <com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String FMT_NONE> = "default";

        <com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String FMT_SIMPLE> = "simple";

        <com.oopsconsultancy.xmltask.ant.XmlTask: java.lang.String FMT_NONE> = "default";

        return;
    }
}
