public class com.oopsconsultancy.xmltask.ant.Insert extends java.lang.Object implements com.oopsconsultancy.xmltask.ant.Instruction
{
    private com.oopsconsultancy.xmltask.InsertAction action;
    private java.lang.String buffer;
    private boolean expandProperties;
    private java.io.File file;
    private java.lang.String ifProperty;
    private java.lang.String path;
    private com.oopsconsultancy.xmltask.InsertAction$Position position;
    private com.oopsconsultancy.xmltask.ant.XmlTask task;
    private java.lang.String text;
    private java.lang.String unlessProperty;
    private java.lang.String xml;

    public void <init>()
    {
        com.oopsconsultancy.xmltask.InsertAction$Position $r0;
        com.oopsconsultancy.xmltask.ant.Insert $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Insert;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r1.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.ant.XmlTask task> = null;

        $r1.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String path> = null;

        $r1.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String text> = null;

        $r1.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction action> = null;

        $r0 = <com.oopsconsultancy.xmltask.InsertAction$Position: com.oopsconsultancy.xmltask.InsertAction$Position UNDER>;

        $r1.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction$Position position> = $r0;

        $r1.<com.oopsconsultancy.xmltask.ant.Insert: boolean expandProperties> = 1;

        return;
    }

    private void log(java.lang.String, int)
    {
        java.io.PrintStream $r0;
        com.oopsconsultancy.xmltask.ant.XmlTask $r1, $r4;
        int $i0;
        java.lang.String $r2;
        com.oopsconsultancy.xmltask.ant.Insert $r3;

        $r3 := @this: com.oopsconsultancy.xmltask.ant.Insert;

        $r2 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = $r3.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        if $r1 == null goto label1;

        $r4 = $r3.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        virtualinvoke $r4.<com.oopsconsultancy.xmltask.ant.XmlTask: void log(java.lang.String,int)>($r2, $i0);

        return;

     label1:
        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r2);

        return;
    }

    private void register()
    {
        java.lang.Throwable r0;
        org.apache.tools.ant.BuildException r1;
        java.util.Hashtable $r2;
        org.apache.tools.ant.Project $r3, $r4;
        boolean $z0;
        java.io.File $r5, $r23;
        com.oopsconsultancy.xmltask.InsertAction$Position $r6;
        com.oopsconsultancy.xmltask.InsertAction $r7, $r15, $r17, $r19, $r25, $r29, $r37;
        com.oopsconsultancy.xmltask.ant.XmlTask $r8, $r22, $r24, $r28, $r31, $r33, $r36;
        java.lang.String $r9, $r14, $r16, $r18, $r20, $r21, $r26, $r27, $r30, $r32, $r34, $r35;
        com.oopsconsultancy.xmltask.XmlReplace r11;
        java.lang.Exception $r12;
        com.oopsconsultancy.xmltask.ant.Insert $r13;

        $r13 := @this: com.oopsconsultancy.xmltask.ant.Insert;

     label01:
        $r9 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String xml>;

        if $r9 == null goto label03;

        $r14 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String xml>;

        $r8 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        $r7 = staticinvoke <com.oopsconsultancy.xmltask.InsertAction: com.oopsconsultancy.xmltask.InsertAction fromString(java.lang.String,org.apache.tools.ant.Task)>($r14, $r8);

        $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction action> = $r7;

     label02:
        $r15 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction action>;

        if $r15 == null goto label11;

        $r16 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String path>;

        if $r16 == null goto label12;

        $r17 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction action>;

        $r6 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction$Position position>;

        virtualinvoke $r17.<com.oopsconsultancy.xmltask.InsertAction: void setPosition(com.oopsconsultancy.xmltask.InsertAction$Position)>($r6);

        r11 = new com.oopsconsultancy.xmltask.XmlReplace;

        $r18 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String path>;

        $r19 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction action>;

        specialinvoke r11.<com.oopsconsultancy.xmltask.XmlReplace: void <init>(java.lang.String,com.oopsconsultancy.xmltask.Action)>($r18, $r19);

        $r20 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String ifProperty>;

        virtualinvoke r11.<com.oopsconsultancy.xmltask.XmlReplace: void setIf(java.lang.String)>($r20);

        $r21 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String unlessProperty>;

        virtualinvoke r11.<com.oopsconsultancy.xmltask.XmlReplace: void setUnless(java.lang.String)>($r21);

        $r22 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        virtualinvoke $r22.<com.oopsconsultancy.xmltask.ant.XmlTask: void add(com.oopsconsultancy.xmltask.XmlReplace)>(r11);

        return;

     label03:
        $r5 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: java.io.File file>;

        if $r5 == null goto label06;

        $r23 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: java.io.File file>;

        $r24 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        $r25 = staticinvoke <com.oopsconsultancy.xmltask.InsertAction: com.oopsconsultancy.xmltask.InsertAction fromFile(java.io.File,org.apache.tools.ant.Task)>($r23, $r24);

        $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction action> = $r25;

     label04:
        goto label02;

     label05:
        $r12 := @caughtexception;

        r1 = new org.apache.tools.ant.BuildException;

        specialinvoke r1.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to add text to insert/paste", $r12);

        r0 = (java.lang.Throwable) r1;

        throw r0;

     label06:
        $r26 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String buffer>;

        if $r26 == null goto label08;

        $r27 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String buffer>;

        $r28 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        $r29 = staticinvoke <com.oopsconsultancy.xmltask.InsertAction: com.oopsconsultancy.xmltask.InsertAction fromBuffer(java.lang.String,org.apache.tools.ant.Task)>($r27, $r28);

        $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction action> = $r29;

     label07:
        goto label02;

     label08:
        $r30 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String text>;

        if $r30 == null goto label02;

        $z0 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: boolean expandProperties>;

        if $z0 == 0 goto label09;

        $r31 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        $r3 = virtualinvoke $r31.<com.oopsconsultancy.xmltask.ant.XmlTask: org.apache.tools.ant.Project getProject()>();

        $r32 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String text>;

        $r33 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        $r4 = virtualinvoke $r33.<com.oopsconsultancy.xmltask.ant.XmlTask: org.apache.tools.ant.Project getProject()>();

        $r2 = virtualinvoke $r4.<org.apache.tools.ant.Project: java.util.Hashtable getProperties()>();

        $r34 = staticinvoke <org.apache.tools.ant.ProjectHelper: java.lang.String replaceProperties(org.apache.tools.ant.Project,java.lang.String,java.util.Hashtable)>($r3, $r32, $r2);

        $r13.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String text> = $r34;

     label09:
        $r35 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String text>;

        $r36 = $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.ant.XmlTask task>;

        $r37 = staticinvoke <com.oopsconsultancy.xmltask.InsertAction: com.oopsconsultancy.xmltask.InsertAction fromString(java.lang.String,org.apache.tools.ant.Task)>($r35, $r36);

        $r13.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction action> = $r37;

     label10:
        goto label02;

     label11:
        return;

     label12:
        return;

        catch java.lang.Exception from label01 to label02 with label05;
        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label06 to label07 with label05;
        catch java.lang.Exception from label08 to label10 with label05;
    }

    public void addText(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.Insert $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Insert;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String text> = $r0;

        return;
    }

    public void process(com.oopsconsultancy.xmltask.ant.XmlTask)
    {
        com.oopsconsultancy.xmltask.ant.XmlTask $r0;
        com.oopsconsultancy.xmltask.ant.Insert $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Insert;

        $r0 := @parameter0: com.oopsconsultancy.xmltask.ant.XmlTask;

        $r1.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.ant.XmlTask task> = $r0;

        specialinvoke $r1.<com.oopsconsultancy.xmltask.ant.Insert: void register()>();

        return;
    }

    public void setBuffer(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.Insert $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Insert;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String buffer> = $r0;

        return;
    }

    public void setExpandProperties(boolean)
    {
        boolean $z0;
        com.oopsconsultancy.xmltask.ant.Insert $r0;

        $r0 := @this: com.oopsconsultancy.xmltask.ant.Insert;

        $z0 := @parameter0: boolean;

        $r0.<com.oopsconsultancy.xmltask.ant.Insert: boolean expandProperties> = $z0;

        return;
    }

    public void setFile(java.io.File) throws java.lang.Exception
    {
        java.io.File $r0;
        com.oopsconsultancy.xmltask.ant.Insert $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Insert;

        $r0 := @parameter0: java.io.File;

        $r1.<com.oopsconsultancy.xmltask.ant.Insert: java.io.File file> = $r0;

        return;
    }

    public void setIf(java.lang.String)
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.Insert $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Insert;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String ifProperty> = $r0;

        return;
    }

    public void setPath(java.lang.String)
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.Insert $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Insert;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String path> = $r0;

        return;
    }

    public void setPosition(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r12, $r13, $r14;
        com.oopsconsultancy.xmltask.InsertAction $r1, $r6;
        boolean $z0, $z1, $z2;
        com.oopsconsultancy.xmltask.InsertAction$Position $r2, $r7, $r9, $r11;
        java.lang.String $r3, $r4, $r8, $r10, $r15;
        com.oopsconsultancy.xmltask.ant.Insert $r5;

        $r5 := @this: com.oopsconsultancy.xmltask.ant.Insert;

        $r3 := @parameter0: java.lang.String;

        $r4 = "before";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r2 = <com.oopsconsultancy.xmltask.InsertAction$Position: com.oopsconsultancy.xmltask.InsertAction$Position BEFORE>;

        $r5.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction$Position position> = $r2;

     label1:
        $r1 = $r5.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction action>;

        if $r1 == null goto label5;

        $r6 = $r5.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction action>;

        $r7 = $r5.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction$Position position>;

        virtualinvoke $r6.<com.oopsconsultancy.xmltask.InsertAction: void setPosition(com.oopsconsultancy.xmltask.InsertAction$Position)>($r7);

        return;

     label2:
        $r8 = "after";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r9 = <com.oopsconsultancy.xmltask.InsertAction$Position: com.oopsconsultancy.xmltask.InsertAction$Position AFTER>;

        $r5.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction$Position position> = $r9;

        goto label1;

     label3:
        $r10 = "under";

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z2 == 0 goto label4;

        $r11 = <com.oopsconsultancy.xmltask.InsertAction$Position: com.oopsconsultancy.xmltask.InsertAction$Position UNDER>;

        $r5.<com.oopsconsultancy.xmltask.ant.Insert: com.oopsconsultancy.xmltask.InsertAction$Position position> = $r11;

        goto label1;

     label4:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Don\'t recognise position \'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.oopsconsultancy.xmltask.ant.Insert: void log(java.lang.String,int)>($r15, 1);

        goto label1;

     label5:
        return;
    }

    public void setUnless(java.lang.String)
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.Insert $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Insert;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String unlessProperty> = $r0;

        return;
    }

    public void setXml(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0;
        com.oopsconsultancy.xmltask.ant.Insert $r1;

        $r1 := @this: com.oopsconsultancy.xmltask.ant.Insert;

        $r0 := @parameter0: java.lang.String;

        $r1.<com.oopsconsultancy.xmltask.ant.Insert: java.lang.String xml> = $r0;

        return;
    }
}
