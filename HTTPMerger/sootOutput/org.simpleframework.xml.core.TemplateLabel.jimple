abstract class org.simpleframework.xml.core.TemplateLabel extends java.lang.Object implements org.simpleframework.xml.core.Label
{
    private final org.simpleframework.xml.core.KeyBuilder builder;

    protected void <init>()
    {
        org.simpleframework.xml.core.KeyBuilder $r0;
        org.simpleframework.xml.core.TemplateLabel $r1;

        $r1 := @this: org.simpleframework.xml.core.TemplateLabel;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r0 = new org.simpleframework.xml.core.KeyBuilder;

        specialinvoke $r0.<org.simpleframework.xml.core.KeyBuilder: void <init>(org.simpleframework.xml.core.Label)>($r1);

        $r1.<org.simpleframework.xml.core.TemplateLabel: org.simpleframework.xml.core.KeyBuilder builder> = $r0;

        return;
    }

    public org.simpleframework.xml.strategy.Type getDependent() throws java.lang.Exception
    {
        org.simpleframework.xml.core.TemplateLabel $r0;

        $r0 := @this: org.simpleframework.xml.core.TemplateLabel;

        return null;
    }

    public java.lang.String getEntry() throws java.lang.Exception
    {
        org.simpleframework.xml.core.TemplateLabel $r0;

        $r0 := @this: org.simpleframework.xml.core.TemplateLabel;

        return null;
    }

    public java.lang.Object getKey() throws java.lang.Exception
    {
        java.lang.Object $r0;
        org.simpleframework.xml.core.KeyBuilder $r1;
        org.simpleframework.xml.core.TemplateLabel $r2;

        $r2 := @this: org.simpleframework.xml.core.TemplateLabel;

        $r1 = $r2.<org.simpleframework.xml.core.TemplateLabel: org.simpleframework.xml.core.KeyBuilder builder>;

        $r0 = virtualinvoke $r1.<org.simpleframework.xml.core.KeyBuilder: java.lang.Object getKey()>();

        return $r0;
    }

    public org.simpleframework.xml.core.Label getLabel(java.lang.Class) throws java.lang.Exception
    {
        java.lang.Class $r0;
        org.simpleframework.xml.core.TemplateLabel $r1;

        $r1 := @this: org.simpleframework.xml.core.TemplateLabel;

        $r0 := @parameter0: java.lang.Class;

        return $r1;
    }

    public java.util.Collection getNames() throws java.lang.Exception
    {
        java.util.List $r0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3;
        org.simpleframework.xml.core.TemplateLabel $r4;

        $r4 := @this: org.simpleframework.xml.core.TemplateLabel;

        $r2 = virtualinvoke $r4.<org.simpleframework.xml.core.TemplateLabel: java.lang.String getPath()>();

        $r3 = virtualinvoke $r4.<org.simpleframework.xml.core.TemplateLabel: java.lang.String getName()>();

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = $r2;

        $r1[1] = $r3;

        $r0 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        return $r0;
    }

    public java.util.Collection getPaths() throws java.lang.Exception
    {
        java.util.List $r0;
        java.lang.String[] $r1;
        java.lang.String $r2;
        org.simpleframework.xml.core.TemplateLabel $r3;

        $r3 := @this: org.simpleframework.xml.core.TemplateLabel;

        $r2 = virtualinvoke $r3.<org.simpleframework.xml.core.TemplateLabel: java.lang.String getPath()>();

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = $r2;

        $r0 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        return $r0;
    }

    public org.simpleframework.xml.strategy.Type getType(java.lang.Class) throws java.lang.Exception
    {
        org.simpleframework.xml.core.Contact $r0;
        java.lang.Class $r1;
        org.simpleframework.xml.core.TemplateLabel $r2;

        $r2 := @this: org.simpleframework.xml.core.TemplateLabel;

        $r1 := @parameter0: java.lang.Class;

        $r0 = virtualinvoke $r2.<org.simpleframework.xml.core.TemplateLabel: org.simpleframework.xml.core.Contact getContact()>();

        return $r0;
    }

    public boolean isAttribute()
    {
        org.simpleframework.xml.core.TemplateLabel $r0;

        $r0 := @this: org.simpleframework.xml.core.TemplateLabel;

        return 0;
    }

    public boolean isCollection()
    {
        org.simpleframework.xml.core.TemplateLabel $r0;

        $r0 := @this: org.simpleframework.xml.core.TemplateLabel;

        return 0;
    }

    public boolean isInline()
    {
        org.simpleframework.xml.core.TemplateLabel $r0;

        $r0 := @this: org.simpleframework.xml.core.TemplateLabel;

        return 0;
    }

    public boolean isText()
    {
        org.simpleframework.xml.core.TemplateLabel $r0;

        $r0 := @this: org.simpleframework.xml.core.TemplateLabel;

        return 0;
    }

    public boolean isUnion()
    {
        org.simpleframework.xml.core.TemplateLabel $r0;

        $r0 := @this: org.simpleframework.xml.core.TemplateLabel;

        return 0;
    }
}
