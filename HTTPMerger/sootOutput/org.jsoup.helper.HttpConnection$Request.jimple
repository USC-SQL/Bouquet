public class org.jsoup.helper.HttpConnection$Request extends org.jsoup.helper.HttpConnection$Base implements org.jsoup.Connection$Request
{
    private java.util.Collection data;
    private boolean followRedirects;
    private boolean ignoreContentType;
    private boolean ignoreHttpErrors;
    private org.jsoup.parser.Parser parser;
    private int timeoutMilliseconds;

    private void <init>()
    {
        java.util.Map $r0;
        org.jsoup.Connection$Method $r1;
        java.util.ArrayList $r2;
        org.jsoup.parser.Parser $r3;
        org.jsoup.helper.HttpConnection$Request $r4;

        $r4 := @this: org.jsoup.helper.HttpConnection$Request;

        specialinvoke $r4.<org.jsoup.helper.HttpConnection$Base: void <init>(org.jsoup.helper.HttpConnection$1)>(null);

        $r4.<org.jsoup.helper.HttpConnection$Request: boolean ignoreHttpErrors> = 0;

        $r4.<org.jsoup.helper.HttpConnection$Request: boolean ignoreContentType> = 0;

        $r4.<org.jsoup.helper.HttpConnection$Request: int timeoutMilliseconds> = 3000;

        $r4.<org.jsoup.helper.HttpConnection$Request: boolean followRedirects> = 1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r4.<org.jsoup.helper.HttpConnection$Request: java.util.Collection data> = $r2;

        $r1 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET>;

        $r4.<org.jsoup.helper.HttpConnection$Request: org.jsoup.Connection$Method method> = $r1;

        $r0 = $r4.<org.jsoup.helper.HttpConnection$Request: java.util.Map headers>;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept-Encoding", "gzip");

        $r3 = staticinvoke <org.jsoup.parser.Parser: org.jsoup.parser.Parser htmlParser()>();

        $r4.<org.jsoup.helper.HttpConnection$Request: org.jsoup.parser.Parser parser> = $r3;

        return;
    }

    void <init>(org.jsoup.helper.HttpConnection$1)
    {
        org.jsoup.helper.HttpConnection$1 $r0;
        org.jsoup.helper.HttpConnection$Request $r1;

        $r1 := @this: org.jsoup.helper.HttpConnection$Request;

        $r0 := @parameter0: org.jsoup.helper.HttpConnection$1;

        specialinvoke $r1.<org.jsoup.helper.HttpConnection$Request: void <init>()>();

        return;
    }

    public volatile java.lang.String cookie(java.lang.String)
    {
        java.lang.String $r0, $r2;
        org.jsoup.helper.HttpConnection$Request $r1;

        $r1 := @this: org.jsoup.helper.HttpConnection$Request;

        $r0 := @parameter0: java.lang.String;

        $r2 = specialinvoke $r1.<org.jsoup.helper.HttpConnection$Base: java.lang.String cookie(java.lang.String)>($r0);

        return $r2;
    }

    public volatile java.util.Map cookies()
    {
        java.util.Map $r0;
        org.jsoup.helper.HttpConnection$Request $r1;

        $r1 := @this: org.jsoup.helper.HttpConnection$Request;

        $r0 = specialinvoke $r1.<org.jsoup.helper.HttpConnection$Base: java.util.Map cookies()>();

        return $r0;
    }

    public java.util.Collection data()
    {
        java.util.Collection r0;
        org.jsoup.helper.HttpConnection$Request $r1;

        $r1 := @this: org.jsoup.helper.HttpConnection$Request;

        r0 = $r1.<org.jsoup.helper.HttpConnection$Request: java.util.Collection data>;

        return r0;
    }

    public volatile org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal)
    {
        org.jsoup.Connection$KeyVal $r0;
        org.jsoup.helper.HttpConnection$Request $r1, $r2;

        $r1 := @this: org.jsoup.helper.HttpConnection$Request;

        $r0 := @parameter0: org.jsoup.Connection$KeyVal;

        $r2 = virtualinvoke $r1.<org.jsoup.helper.HttpConnection$Request: org.jsoup.helper.HttpConnection$Request data(org.jsoup.Connection$KeyVal)>($r0);

        return $r2;
    }

    public org.jsoup.helper.HttpConnection$Request data(org.jsoup.Connection$KeyVal)
    {
        java.util.Collection $r0;
        org.jsoup.Connection$KeyVal $r1;
        org.jsoup.helper.HttpConnection$Request $r2;

        $r2 := @this: org.jsoup.helper.HttpConnection$Request;

        $r1 := @parameter0: org.jsoup.Connection$KeyVal;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>($r1, "Key val must not be null");

        $r0 = $r2.<org.jsoup.helper.HttpConnection$Request: java.util.Collection data>;

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r1);

        return $r2;
    }

    public org.jsoup.Connection$Request followRedirects(boolean)
    {
        boolean $z0;
        org.jsoup.helper.HttpConnection$Request $r0;

        $r0 := @this: org.jsoup.helper.HttpConnection$Request;

        $z0 := @parameter0: boolean;

        $r0.<org.jsoup.helper.HttpConnection$Request: boolean followRedirects> = $z0;

        return $r0;
    }

    public boolean followRedirects()
    {
        boolean z0;
        org.jsoup.helper.HttpConnection$Request $r0;

        $r0 := @this: org.jsoup.helper.HttpConnection$Request;

        z0 = $r0.<org.jsoup.helper.HttpConnection$Request: boolean followRedirects>;

        return z0;
    }

    public volatile boolean hasCookie(java.lang.String)
    {
        boolean $z0;
        java.lang.String $r0;
        org.jsoup.helper.HttpConnection$Request $r1;

        $r1 := @this: org.jsoup.helper.HttpConnection$Request;

        $r0 := @parameter0: java.lang.String;

        $z0 = specialinvoke $r1.<org.jsoup.helper.HttpConnection$Base: boolean hasCookie(java.lang.String)>($r0);

        return $z0;
    }

    public volatile boolean hasHeader(java.lang.String)
    {
        boolean $z0;
        java.lang.String $r0;
        org.jsoup.helper.HttpConnection$Request $r1;

        $r1 := @this: org.jsoup.helper.HttpConnection$Request;

        $r0 := @parameter0: java.lang.String;

        $z0 = specialinvoke $r1.<org.jsoup.helper.HttpConnection$Base: boolean hasHeader(java.lang.String)>($r0);

        return $z0;
    }

    public volatile java.lang.String header(java.lang.String)
    {
        java.lang.String $r0, $r2;
        org.jsoup.helper.HttpConnection$Request $r1;

        $r1 := @this: org.jsoup.helper.HttpConnection$Request;

        $r0 := @parameter0: java.lang.String;

        $r2 = specialinvoke $r1.<org.jsoup.helper.HttpConnection$Base: java.lang.String header(java.lang.String)>($r0);

        return $r2;
    }

    public volatile java.util.Map headers()
    {
        java.util.Map $r0;
        org.jsoup.helper.HttpConnection$Request $r1;

        $r1 := @this: org.jsoup.helper.HttpConnection$Request;

        $r0 = specialinvoke $r1.<org.jsoup.helper.HttpConnection$Base: java.util.Map headers()>();

        return $r0;
    }

    public org.jsoup.Connection$Request ignoreContentType(boolean)
    {
        boolean $z0;
        org.jsoup.helper.HttpConnection$Request $r0;

        $r0 := @this: org.jsoup.helper.HttpConnection$Request;

        $z0 := @parameter0: boolean;

        $r0.<org.jsoup.helper.HttpConnection$Request: boolean ignoreContentType> = $z0;

        return $r0;
    }

    public boolean ignoreContentType()
    {
        boolean z0;
        org.jsoup.helper.HttpConnection$Request $r0;

        $r0 := @this: org.jsoup.helper.HttpConnection$Request;

        z0 = $r0.<org.jsoup.helper.HttpConnection$Request: boolean ignoreContentType>;

        return z0;
    }

    public org.jsoup.Connection$Request ignoreHttpErrors(boolean)
    {
        boolean $z0;
        org.jsoup.helper.HttpConnection$Request $r0;

        $r0 := @this: org.jsoup.helper.HttpConnection$Request;

        $z0 := @parameter0: boolean;

        $r0.<org.jsoup.helper.HttpConnection$Request: boolean ignoreHttpErrors> = $z0;

        return $r0;
    }

    public boolean ignoreHttpErrors()
    {
        boolean z0;
        org.jsoup.helper.HttpConnection$Request $r0;

        $r0 := @this: org.jsoup.helper.HttpConnection$Request;

        z0 = $r0.<org.jsoup.helper.HttpConnection$Request: boolean ignoreHttpErrors>;

        return z0;
    }

    public volatile org.jsoup.Connection$Method method()
    {
        org.jsoup.Connection$Method $r0;
        org.jsoup.helper.HttpConnection$Request $r1;

        $r1 := @this: org.jsoup.helper.HttpConnection$Request;

        $r0 = specialinvoke $r1.<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Method method()>();

        return $r0;
    }

    public volatile org.jsoup.Connection$Request parser(org.jsoup.parser.Parser)
    {
        org.jsoup.parser.Parser $r0;
        org.jsoup.helper.HttpConnection$Request $r1, $r2;

        $r1 := @this: org.jsoup.helper.HttpConnection$Request;

        $r0 := @parameter0: org.jsoup.parser.Parser;

        $r2 = virtualinvoke $r1.<org.jsoup.helper.HttpConnection$Request: org.jsoup.helper.HttpConnection$Request parser(org.jsoup.parser.Parser)>($r0);

        return $r2;
    }

    public org.jsoup.helper.HttpConnection$Request parser(org.jsoup.parser.Parser)
    {
        org.jsoup.parser.Parser $r0;
        org.jsoup.helper.HttpConnection$Request $r1;

        $r1 := @this: org.jsoup.helper.HttpConnection$Request;

        $r0 := @parameter0: org.jsoup.parser.Parser;

        $r1.<org.jsoup.helper.HttpConnection$Request: org.jsoup.parser.Parser parser> = $r0;

        return $r1;
    }

    public org.jsoup.parser.Parser parser()
    {
        org.jsoup.parser.Parser r0;
        org.jsoup.helper.HttpConnection$Request $r1;

        $r1 := @this: org.jsoup.helper.HttpConnection$Request;

        r0 = $r1.<org.jsoup.helper.HttpConnection$Request: org.jsoup.parser.Parser parser>;

        return r0;
    }

    public int timeout()
    {
        int i0;
        org.jsoup.helper.HttpConnection$Request $r0;

        $r0 := @this: org.jsoup.helper.HttpConnection$Request;

        i0 = $r0.<org.jsoup.helper.HttpConnection$Request: int timeoutMilliseconds>;

        return i0;
    }

    public volatile org.jsoup.Connection$Request timeout(int)
    {
        int $i0;
        org.jsoup.helper.HttpConnection$Request $r0, $r1;

        $r0 := @this: org.jsoup.helper.HttpConnection$Request;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<org.jsoup.helper.HttpConnection$Request: org.jsoup.helper.HttpConnection$Request timeout(int)>($i0);

        return $r1;
    }

    public org.jsoup.helper.HttpConnection$Request timeout(int)
    {
        boolean $z0;
        int $i0;
        org.jsoup.helper.HttpConnection$Request $r0;

        $r0 := @this: org.jsoup.helper.HttpConnection$Request;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label2;

        $z0 = 1;

     label1:
        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Timeout milliseconds must be 0 (infinite) or greater");

        $r0.<org.jsoup.helper.HttpConnection$Request: int timeoutMilliseconds> = $i0;

        return $r0;

     label2:
        $z0 = 0;

        goto label1;
    }

    public volatile java.net.URL url()
    {
        java.net.URL $r0;
        org.jsoup.helper.HttpConnection$Request $r1;

        $r1 := @this: org.jsoup.helper.HttpConnection$Request;

        $r0 = specialinvoke $r1.<org.jsoup.helper.HttpConnection$Base: java.net.URL url()>();

        return $r0;
    }
}
