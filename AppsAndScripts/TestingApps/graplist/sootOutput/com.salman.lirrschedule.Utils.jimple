public class com.salman.lirrschedule.Utils extends java.lang.Object
{

    public void <init>()
    {
        com.salman.lirrschedule.Utils $r0;

        $r0 := @this: com.salman.lirrschedule.Utils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String findStationIdByName(java.lang.String)
    {
        java.lang.String $r0, $r3;
        int $i0, $i1;
        java.lang.String[][] $r1;
        boolean $z0;
        java.lang.String[] $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $r1 = <com.salman.lirrschedule.Constants: java.lang.String[][] stations>;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label2;

        return "8";

     label2:
        $r1 = <com.salman.lirrschedule.Constants: java.lang.String[][] stations>;

        $r2 = $r1[$i0];

        $r3 = $r2[0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 == 0 goto label3;

        $r1 = <com.salman.lirrschedule.Constants: java.lang.String[][] stations>;

        $r2 = $r1[$i0];

        $r0 = $r2[1];

        return $r0;

     label3:
        $i0 = $i0 + 1;

        goto label1;
    }

    public static java.lang.String findStationNameById(java.lang.String)
    {
        java.lang.String $r0, $r3;
        int $i0, $i1;
        java.lang.String[][] $r1;
        boolean $z0;
        java.lang.String[] $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $r1 = <com.salman.lirrschedule.Constants: java.lang.String[][] stations>;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label2;

        return "Penn Station";

     label2:
        $r1 = <com.salman.lirrschedule.Constants: java.lang.String[][] stations>;

        $r2 = $r1[$i0];

        $r3 = $r2[1];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 == 0 goto label3;

        $r1 = <com.salman.lirrschedule.Constants: java.lang.String[][] stations>;

        $r2 = $r1[$i0];

        $r0 = $r2[0];

        return $r0;

     label3:
        $i0 = $i0 + 1;

        goto label1;
    }

    public static int findStationPosition(java.lang.String)
    {
        java.lang.String $r0, $r3;
        int $i0, $i1;
        java.lang.String[][] $r1;
        boolean $z0;
        java.lang.String[] $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $r1 = <com.salman.lirrschedule.Constants: java.lang.String[][] stations>;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label2;

        return 0;

     label2:
        $r1 = <com.salman.lirrschedule.Constants: java.lang.String[][] stations>;

        $r2 = $r1[$i0];

        $r3 = $r2[0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0);

        if $z0 == 0 goto label3;

        return $i0;

     label3:
        $i0 = $i0 + 1;

        goto label1;
    }

    public static int findTimePosition(java.lang.String)
    {
        java.lang.String $r0, $r2;
        int $i0, $i1, $i2;
        java.lang.String[] $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $i1 = 0;

        $i0 = 0;

     label1:
        $r1 = <com.salman.lirrschedule.Constants: java.lang.String[] times>;

        $i2 = lengthof $r1;

        if $i0 < $i2 goto label2;

        return $i1;

     label2:
        $r1 = <com.salman.lirrschedule.Constants: java.lang.String[] times>;

        $r2 = $r1[$i0];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        $i1 = $i0;

     label3:
        $i0 = $i0 + 1;

        goto label1;
    }

    public static java.lang.String pad(int)
    {
        int $i0;
        java.lang.String $r0;
        java.lang.StringBuilder $r1;

        $i0 := @parameter0: int;

        if $i0 < 10 goto label1;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        return $r0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("0");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String random()
    {
        java.util.Random $r0;
        int $i0;
        java.lang.String $r1;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(100);

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        return $r1;
    }

    public static java.lang.String replaceChars(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r1, $r2);

        return $r2;
    }

    public static java.lang.String roundTime(int, int)
    {
        int $i0, $i1;
        byte $b2;
        java.lang.String $r0;
        java.lang.StringBuilder $r1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $b2 = 0;

        if $i1 == 0 goto label01;

        if $i1 > 9 goto label03;

     label01:
        $b2 = 0;

     label02:
        $r1 = new java.lang.StringBuilder;

        $r0 = staticinvoke <com.salman.lirrschedule.Utils: java.lang.String pad(int)>($i0);

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r0 = staticinvoke <com.salman.lirrschedule.Utils: java.lang.String pad(int)>($b2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label03:
        if $i1 == 10 goto label04;

        if $i1 > 19 goto label05;

     label04:
        $b2 = 15;

        goto label02;

     label05:
        if $i1 == 20 goto label06;

        if $i1 > 29 goto label07;

     label06:
        $b2 = 30;

        goto label02;

     label07:
        if $i1 == 30 goto label08;

        if $i1 > 49 goto label09;

     label08:
        $b2 = 45;

        goto label02;

     label09:
        if $i1 == 50 goto label10;

        if $i1 > 60 goto label02;

     label10:
        $b2 = 0;

        $i0 = $i0 + 1;

        goto label02;
    }
}
